initSidebarItems({"constant":[["MODES","The available Origen runtime modes"]],"enum":[["Value",""]],"fn":[["app_config",""],["clean_mode","Sanitizes the given mode string and returns it, but will exit the process if it is invalid"],["dut",""],["producer",""],["services",""],["tester",""]],"macro":[["backend_expect",""],["backend_fail",""],["backend_lookup_error","Returns a error stating that the backend doesn't have an expected ID. This signals a bug somewhere and should only be used when we're expecting something to exists."],["duplicate_error","Returns an Origen Error with pre-formatted message comlaining that someting already exists."],["fail",""],["lookup_error",""],["node",""],["push_pin_actions",""]],"mod":[["built_info",""],["core",""],["error",""],["generator",""],["services",""],["testers",""]],"struct":[["APPLICATION_CONFIG","Provides configuration information derived from application.toml and any workspace overrides e.g. from running origen t command to set a default target"],["DUT","The current device model, containing all metadata about hierarchy, regs, pins, specs, timing, etc. and responsible for maintaining the current state of the DUT (regs, pins, etc.)"],["LOGGER",""],["ORIGEN_CONFIG","Provides configuration information derived from origen.toml files found in the Origen installation and application file system paths"],["PRODUCER","Producer"],["SERVICES","Services owned by the current DUT, stored as a separate collection to avoid having to get a mutable ref on the DUT if the service needs mutation"],["STATUS","Provides status information derived from the runtime environment, e.g. if an app is present"],["TEST","Storage for the current test (pattern)"],["TESTER","The global tester model."]],"type":[["Result",""]]});