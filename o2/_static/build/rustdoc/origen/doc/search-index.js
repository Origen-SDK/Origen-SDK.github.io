var searchIndex={};
searchIndex["meta"] = {"doc":"","i":[[24,"IdGetters","meta","",null,null]],"p":[]};
searchIndex["origen"] = {"doc":"","i":[[3,"STATUS","origen","Provides status information derived from the runtime…",null,null],[3,"ORIGEN_CONFIG","","Provides configuration information derived from…",null,null],[3,"APPLICATION_CONFIG","","Provides configuration information derived from…",null,null],[3,"LOGGER","","",null,null],[3,"DUT","","The current device model, containing all metadata about…",null,null],[3,"TESTER","","The global tester model.",null,null],[3,"PRODUCER","","Producer",null,null],[3,"SERVICES","","Services owned by the current DUT, stored as a separate…",null,null],[3,"TEST","","Storage for the current test (pattern)",null,null],[4,"Value","","",null,null],[13,"Bits","","",0,null],[13,"Data","","",0,null],[5,"dut","","",null,[[],[["dut"],["mutexguard",["dut"]]]]],[5,"tester","","",null,[[],[["mutexguard",["tester"]],["tester"]]]],[5,"producer","","",null,[[],[["producer"],["mutexguard",["producer"]]]]],[5,"services","","",null,[[],[["services"],["mutexguard",["services"]]]]],[5,"app_config","","",null,[[],[["appconfig"],["mutexguard",["appconfig"]]]]],[5,"clean_mode","","Sanitizes the given mode string and returns it, but will…",null,[[["str"]],["string"]]],[0,"core","","",null,null],[0,"application","origen::core","",null,null],[5,"output_directory","origen::core::application","",null,[[],["pathbuf"]]],[5,"website_output_directory","","",null,[[],["pathbuf"]]],[5,"website_source_directory","","",null,[[],["pathbuf"]]],[0,"config","","",null,null],[3,"Config","origen::core::application::config","",null,null],[12,"name","","",1,null],[12,"target","","",1,null],[12,"mode","","",1,null],[12,"output_directory","","",1,null],[12,"website_output_directory","","",1,null],[12,"website_source_directory","","",1,null],[12,"website_release_location","","",1,null],[12,"website_release_name","","",1,null],[11,"refresh","","",1,[[["self"]]]],[0,"target","origen::core::application","A default target/env for an application can be set by…",null,null],[5,"clean_name","origen::core::application::target","Sanitizes the given target/env name and returns it, but…",null,[[["str"],["bool"]],["string"]]],[5,"matches","","Returns an array of possible target/environment files that…",null,[[["str"]],[["vec",["pathbuf"]],["pathbuf"]]]],[5,"get","","Gets the currently enabled targets",null,[[],[["vec",["string"]],["option",["vec"]]]]],[5,"set","","Sets the targets, overriding any that may be present",null,[[["str"],["vec",["str"]]]]],[5,"reset","","Resets (deletes) the target back to its default value",null,[[]]],[5,"add","","Enables additional targets in the workspace",null,[[["str"],["vec",["str"]]]]],[5,"remove","","Disables currently enables targets in the workspace",null,[[["str"],["vec",["str"]]]]],[5,"all","","Returns all files from the given directory",null,[[["str"]],[["vec",["pathbuf"]],["pathbuf"]]]],[5,"set_workspace","","Sets the given key and value (currently only a string is…",null,[[["str"]]]],[5,"set_workspace_array","","Sets an Array-of-Strings workspace variable",null,[[["str"],["string"],["vec",["string"]]]]],[5,"delete_val","","Deletes the given key (and its val) from…",null,[[["str"]]]],[0,"config","origen::core","Collects the main Origen configuration options from all…",null,null],[3,"CONFIG","origen::core::config","",null,null],[3,"Config","","",null,null],[12,"python_cmd","","",2,null],[12,"pkg_server","","",2,null],[12,"pkg_server_push","","",2,null],[12,"pkg_server_pull","","",2,null],[12,"some_val","","",2,null],[0,"dut","origen::core","",null,null],[3,"Dut","origen::core::dut","The DUT stores all objects associated with a particular…",null,null],[12,"name","","",3,null],[12,"models","","",3,null],[12,"bits","","",3,null],[12,"timesets","","",3,null],[12,"wavetables","","",3,null],[12,"wave_groups","","",3,null],[12,"waves","","",3,null],[12,"wave_events","","",3,null],[12,"pins","","",3,null],[12,"pin_groups","","",3,null],[12,"pin_headers","","",3,null],[12,"id_mappings","","",3,null],[12,"reg_descriptions","","Cache of descriptions parsed from reg definition files",3,null],[11,"get_timeset","","",3,[[["str"],["self"],["usize"]],[["option",["timeset"]],["timeset"]]]],[11,"get_mut_timeset","","",3,[[["str"],["self"],["usize"]],[["option",["timeset"]],["timeset"]]]],[11,"_get_timeset","","",3,[[["str"],["self"],["usize"]],[["error"],["timeset"],["result",["timeset","error"]]]]],[11,"_get_mut_timeset","","",3,[[["str"],["self"],["usize"]],[["timeset"],["error"],["result",["timeset","error"]]]]],[11,"_get_cloned_timeset","","",3,[[["str"],["self"],["usize"]],[["error"],["timeset"],["result",["timeset","error"]]]]],[11,"get_wavetable","","",3,[[["str"],["self"],["usize"]],[["option",["wavetable"]],["wavetable"]]]],[11,"get_mut_wavetable","","",3,[[["str"],["self"],["usize"]],[["wavetable"],["option",["wavetable"]]]]],[11,"_get_wavetable","","",3,[[["str"],["self"],["usize"]],[["error"],["wavetable"],["result",["wavetable","error"]]]]],[11,"_get_mut_wavetable","","",3,[[["str"],["self"],["usize"]],[["wavetable"],["error"],["result",["wavetable","error"]]]]],[11,"_get_cloned_wavetable","","",3,[[["str"],["self"],["usize"]],[["error"],["result",["wavetable","error"]],["wavetable"]]]],[11,"get_wave_group","","",3,[[["str"],["self"],["usize"]],[["option",["wavegroup"]],["wavegroup"]]]],[11,"get_mut_wave_group","","",3,[[["str"],["self"],["usize"]],[["option",["wavegroup"]],["wavegroup"]]]],[11,"_get_wave_group","","",3,[[["str"],["self"],["usize"]],[["error"],["result",["wavegroup","error"]],["wavegroup"]]]],[11,"_get_mut_wave_group","","",3,[[["str"],["self"],["usize"]],[["result",["wavegroup","error"]],["wavegroup"],["error"]]]],[11,"_get_cloned_wave_group","","",3,[[["str"],["self"],["usize"]],[["result",["wavegroup","error"]],["error"],["wavegroup"]]]],[11,"get_wave","","",3,[[["str"],["self"],["usize"]],[["option",["wave"]],["wave"]]]],[11,"get_mut_wave","","",3,[[["str"],["self"],["usize"]],[["wave"],["option",["wave"]]]]],[11,"_get_wave","","",3,[[["str"],["self"],["usize"]],[["wave"],["error"],["result",["wave","error"]]]]],[11,"_get_mut_wave","","",3,[[["str"],["self"],["usize"]],[["error"],["wave"],["result",["wave","error"]]]]],[11,"_get_cloned_wave","","",3,[[["str"],["self"],["usize"]],[["wave"],["error"],["result",["wave","error"]]]]],[11,"get_event","","",3,[[["self"],["usize"]],[["event"],["option",["event"]]]]],[11,"get_mut_event","","",3,[[["self"],["usize"]],[["option",["event"]],["event"]]]],[11,"_get_event","","",3,[[["self"],["usize"]],[["error"],["event"],["result",["event","error"]]]]],[11,"_get_mut_event","","",3,[[["self"],["usize"]],[["error"],["result",["event","error"]],["event"]]]],[11,"_get_cloned_event","","",3,[[["self"],["usize"]],[["result",["event","error"]],["event"],["error"]]]],[11,"get_pin","","",3,[[["str"],["self"],["usize"]],[["option",["pin"]],["pin"]]]],[11,"get_mut_pin","","",3,[[["str"],["self"],["usize"]],[["option",["pin"]],["pin"]]]],[11,"_get_pin","","",3,[[["str"],["self"],["usize"]],[["error"],["result",["pin","error"]],["pin"]]]],[11,"_get_mut_pin","","",3,[[["str"],["self"],["usize"]],[["result",["pin","error"]],["error"],["pin"]]]],[11,"_get_cloned_pin","","",3,[[["str"],["self"],["usize"]],[["result",["pin","error"]],["pin"],["error"]]]],[11,"get_pin_group","","",3,[[["str"],["self"],["usize"]],[["option",["pingroup"]],["pingroup"]]]],[11,"get_mut_pin_group","","",3,[[["str"],["self"],["usize"]],[["option",["pingroup"]],["pingroup"]]]],[11,"_get_pin_group","","",3,[[["str"],["self"],["usize"]],[["result",["pingroup","error"]],["pingroup"],["error"]]]],[11,"_get_mut_pin_group","","",3,[[["str"],["self"],["usize"]],[["error"],["pingroup"],["result",["pingroup","error"]]]]],[11,"_get_cloned_pin_group","","",3,[[["str"],["self"],["usize"]],[["pingroup"],["error"],["result",["pingroup","error"]]]]],[11,"get_pin_header","","",3,[[["str"],["self"],["usize"]],[["option",["pinheader"]],["pinheader"]]]],[11,"get_mut_pin_header","","",3,[[["str"],["self"],["usize"]],[["pinheader"],["option",["pinheader"]]]]],[11,"_get_pin_header","","",3,[[["str"],["self"],["usize"]],[["error"],["pinheader"],["result",["pinheader","error"]]]]],[11,"_get_mut_pin_header","","",3,[[["str"],["self"],["usize"]],[["pinheader"],["result",["pinheader","error"]],["error"]]]],[11,"_get_cloned_pin_header","","",3,[[["str"],["self"],["usize"]],[["error"],["pinheader"],["result",["pinheader","error"]]]]],[11,"new","","",3,[[["str"]],["dut"]]],[11,"change","","Change the DUT, this replaces the existing mode with a…",3,[[["str"],["self"]]]],[11,"mut_model","","Returns a mutable reference to the top-level model",3,[[["self"]],["model"]]],[11,"model","","Returns an immutable reference to the top-level model",3,[[["self"]],["model"]]],[11,"get_mut_model","","Get a mutable reference to the model with the given ID",3,[[["self"],["usize"]],[["model"],["result",["model"]]]]],[11,"get_model","","Get a read-only reference to the model with the given ID,…",3,[[["self"],["usize"]],[["result",["model"]],["model"]]]],[11,"get_mut_memory_map","","Get a mutable reference to the memory map with the given ID",3,[[["self"],["usize"]],[["result",["memorymap"]],["memorymap"]]]],[11,"get_memory_map","","Get a read-only reference to the memory map with the given…",3,[[["self"],["usize"]],[["result",["memorymap"]],["memorymap"]]]],[11,"get_mut_address_block","","Get a mutable reference to the address block with the…",3,[[["self"],["usize"]],[["addressblock"],["result",["addressblock"]]]]],[11,"get_address_block","","Get a read-only reference to the address block with the…",3,[[["self"],["usize"]],[["addressblock"],["result",["addressblock"]]]]],[11,"get_mut_register_file","","Get a mutable reference to the register file with the…",3,[[["self"],["usize"]],[["result",["registerfile"]],["registerfile"]]]],[11,"get_register_file","","Get a read-only reference to the register file with the…",3,[[["self"],["usize"]],[["registerfile"],["result",["registerfile"]]]]],[11,"get_mut_register","","Get a mutable reference to the register with the given ID",3,[[["self"],["usize"]],[["result",["register"]],["register"]]]],[11,"get_register","","Get a read-only reference to the register with the given…",3,[[["self"],["usize"]],[["result",["register"]],["register"]]]],[11,"get_mut_bit","","Get a mutable reference to the bit with the given ID",3,[[["self"],["usize"]],[["bit"],["result",["bit"]]]]],[11,"get_bit","","Get a read-only reference to the bit with the given ID,…",3,[[["self"],["usize"]],[["bit"],["result",["bit"]]]]],[11,"create_model","","Create a new model adding it to the existing parent model…",3,[[["str"],["usize"],["u128"],["self"],["option",["usize"]],["option",["u128"]]],[["result",["usize"]],["usize"]]]],[11,"create_memory_map","","",3,[[["str"],["u32"],["usize"],["self"],["option",["u32"]]],[["result",["usize"]],["usize"]]]],[11,"create_address_block","","",3,[[["option",["accesstype"]],["u64"],["str"],["usize"],["u128"],["option",["u64"]],["self"],["option",["u128"]],["accesstype"]],[["result",["usize"]],["usize"]]]],[11,"create_reg","","",3,[[["str"],["string"],["usize"],["option",["string"]],["self"],["option",["usize"]]],[["result",["usize"]],["usize"]]]],[11,"create_test_bit","","Creates a bit for testing bit collections and so on, does…",3,[[["self"]],["usize"]]],[11,"get_reg_description","","",3,[[["str"],["self"],["usize"]],[["string"],["option",["string"]]]]],[0,"file_handler","origen::core","The file_handler is responsible for processing the file…",null,null],[3,"File","origen::core::file_handler","",null,null],[12,"file_obj","","",4,null],[12,"path","","",4,null],[3,"FileHandler","","This is an iterator + external API for consuming the file…",null,null],[11,"create","","Creates or overrides the given file and panics if the…",4,[[["pathbuf"]],["self"]]],[11,"open","","Attempts to open the given file for reading, returning an…",4,[[["pathbuf"]],["result"]]],[11,"mkdir_p","","",4,[[["path"]]]],[11,"write","","Writes content to the underlying file and panics if the…",4,[[["str"],["self"]]]],[11,"write_ln","","",4,[[["str"],["self"]]]],[11,"new","","",5,[[],["filehandler"]]],[11,"init","","",5,[[["self"],["string"],["vec",["string"]]],["result"]]],[11,"len","","",5,[[["self"]],["usize"]]],[0,"model","origen::core","",null,null],[3,"Model","origen::core::model","",null,null],[12,"id","","",6,null],[12,"name","","",6,null],[12,"parent_id","","The only one without a parent is the top-level DUT model",6,null],[12,"sub_blocks","","All children of this block/model, which are themselves…",6,null],[12,"memory_maps","","All registers owned by this model are arranged within…",6,null],[12,"pins","","",6,null],[12,"pin_groups","","",6,null],[12,"pin_headers","","",6,null],[12,"timesets","","",6,null],[12,"address_unit_bits","","Represents the number of bits in an address increment…",6,null],[12,"offset","","The starting address of the block expressed in…",6,null],[12,"services","","",6,null],[0,"pins","","",null,null],[3,"StateTracker","origen::core::model::pins","",null,null],[4,"Endianness","","",null,null],[13,"LittleEndian","","",7,null],[13,"BigEndian","","",7,null],[0,"pin","","",null,null],[3,"Pin","origen::core::model::pins::pin","Model for single pin.",null,null],[12,"model_id","","",8,null],[12,"id","","",8,null],[12,"name","","",8,null],[12,"data","","",8,null],[12,"action","","The pin's current action. If no action is desired, the pin…",8,null],[12,"reset_action","","The pin's initial action and state. This will be applied…",8,null],[12,"reset_data","","",8,null],[12,"aliases","","--- Meta Data ---/// Any aliases this Pin has.",8,null],[12,"role","","",8,null],[12,"metadata","","",8,null],[12,"groups","","",8,null],[4,"PinActions","","List of supported pin actions.",null,null],[13,"Drive","","",9,null],[13,"Verify","","",9,null],[13,"Capture","","",9,null],[13,"HighZ","","",9,null],[4,"PinRoles","","Available Pin Roles",null,null],[13,"Standard","","",10,null],[13,"Power","","",10,null],[13,"Ground","","",10,null],[13,"Virtual","","",10,null],[13,"Other","","",10,null],[11,"from_str","","",9,[[["str"]],[["error"],["pinactions"],["result",["pinactions","error"]]]]],[11,"as_str","","",9,[[["self"]],["str"]]],[11,"as_char","","",9,[[["self"]],["char"]]],[11,"as_tester_char","","",9,[[["self"],["u8"]],["char"]]],[11,"drive","","",8,[[["option",["u8"]],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"verify","","",8,[[["option",["u8"]],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"capture","","",8,[[["self"]],[["result",["error"]],["error"]]]],[11,"highz","","",8,[[["self"]],[["result",["error"]],["error"]]]],[11,"set_data","","",8,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"reset","","",8,[[["self"]]]],[11,"add_metadata_id","","",8,[[["str"],["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"get_metadata_id","","",8,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"new","","",8,[[["string"],["usize"],["u32"],["pinactions"],["option",["u32"]],["option",["pinactions"]]],["pin"]]],[0,"pin_collection","origen::core::model::pins","",null,null],[3,"PinCollection","origen::core::model::pins::pin_collection","Model for a collection (or group) of pins",null,null],[12,"pin_names","","",11,null],[12,"endianness","","",11,null],[12,"mask","","",11,null],[12,"model_id","","",11,null],[11,"new","","",11,[[["endianness"],["usize"],["vec"],["option",["endianness"]]],["pincollection"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"slice_names","","",11,[[["self"],["usize"]],[["error"],["pincollection"],["result",["pincollection","error"]]]]],[11,"is_little_endian","","",11,[[["self"]],["bool"]]],[11,"is_big_endian","","",11,[[["self"]],["bool"]]],[11,"drive_pin_collection","origen::core::dut","",3,[[["u32"],["pincollection"],["self"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"verify_pin_collection","","",3,[[["u32"],["pincollection"],["self"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"capture_pin_collection","","",3,[[["self"],["pincollection"]],[["result",["error"]],["error"]]]],[11,"highz_pin_collection","","",3,[[["self"],["pincollection"]],[["result",["error"]],["error"]]]],[11,"set_pin_collection_actions","","",3,[[["pinactions"],["pincollection"],["u32"],["self"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"get_pin_collection_reset_data","","",3,[[["pincollection"],["self"]],[["error"],["result",["u32","error"]],["u32"]]]],[11,"get_pin_collection_reset_actions","","",3,[[["pincollection"],["self"]],[["error"],["string"],["result",["string","error"]]]]],[11,"reset_pin_collection","","",3,[[["self"],["pincollection"]],[["result",["error"]],["error"]]]],[11,"set_pin_collection_data","","",3,[[["self"],["pincollection"],["u32"]],[["result",["error"]],["error"]]]],[11,"set_pin_collection_nonsticky_mask","","",3,[[["self"],["pincollection"],["usize"]],[["result",["error"]],["error"]]]],[0,"pin_group","origen::core::model::pins","",null,null],[3,"PinGroup","origen::core::model::pins::pin_group","",null,null],[12,"model_id","","",12,null],[12,"id","","",12,null],[12,"name","","",12,null],[12,"pin_names","","",12,null],[12,"endianness","","",12,null],[12,"mask","","",12,null],[11,"new","","",12,[[["endianness"],["string"],["usize"],["vec",["string"]],["option",["endianness"]]],["pingroup"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"is_little_endian","","",12,[[["self"]],["bool"]]],[11,"is_big_endian","","",12,[[["self"]],["bool"]]],[11,"get_pin_group_data","origen::core::dut","",3,[[["str"],["self"],["usize"]],[["error"],["result",["u32","error"]],["u32"]]]],[11,"get_pin_group_reset_data","","",3,[[["str"],["self"],["usize"]],[["error"],["result",["u32","error"]],["u32"]]]],[11,"reset_pin_group","","",3,[[["str"],["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"set_pin_group_data","","",3,[[["str"],["u32"],["usize"],["self"]],[["result",["error"]],["error"]]]],[11,"resolve_pin_group_names","","",3,[[["str"],["self"],["usize"]],[["result",["vec","error"]],["error"],["vec",["string"]]]]],[11,"get_pin_group_actions","","Returns the pin actions as a string. E.g.: for an 8-pin…",3,[[["str"],["self"],["usize"]],[["error"],["string"],["result",["string","error"]]]]],[11,"get_pin_group_reset_actions","","",3,[[["str"],["self"],["usize"]],[["error"],["string"],["result",["string","error"]]]]],[11,"set_pin_group_actions","","",3,[[["str"],["pinactions"],["usize"],["u32"],["self"],["option",["u32"]],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"drive_pin_group","","",3,[[["str"],["u32"],["usize"],["self"],["option",["u32"]],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"verify_pin_group","","",3,[[["str"],["u32"],["usize"],["self"],["option",["u32"]],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"capture_pin_group","","",3,[[["str"],["usize"],["self"],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"highz_pin_group","","",3,[[["str"],["usize"],["self"],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"slice_pin_group","","",3,[[["str"],["usize"],["self"]],[["error"],["pincollection"],["result",["pincollection","error"]]]]],[0,"pin_header","origen::core::model::pins","",null,null],[3,"PinHeader","origen::core::model::pins::pin_header","",null,null],[12,"model_id","","",13,null],[12,"id","","",13,null],[12,"name","","",13,null],[12,"pin_names","","",13,null],[11,"new","","",13,[[["str"],["string"],["usize"],["vec",["string"]]],["self"]]],[11,"create_pin_header","origen::core::dut","",3,[[["str"],["string"],["usize"],["vec",["string"]],["self"]],[["result",["pinheader","error"]],["error"],["pinheader"]]]],[11,"register_pin_header","origen::core::model","",6,[[["str"],["string"],["usize"],["vec",["string"]],["self"]],[["result",["pinheader","error"]],["pinheader"],["error"]]]],[11,"get_pin_header_id","","",6,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"register_pin","","",6,[[["endianness"],["u32"],["option",["pinactions"]],["str"],["pinactions"],["usize"],["self"],["option",["u32"]],["option",["endianness"]]],[["error"],["result",["error"]]]]],[11,"register_pin_group","","",6,[[["str"],["string"],["usize"],["vec",["string"]],["endianness"],["self"],["option",["endianness"]]],[["pingroup"],["error"],["result",["pingroup","error"]]]]],[11,"get_pin_id","","",6,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"get_pin_group_id","","",6,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"add_pin","origen::core::dut","",3,[[["endianness"],["u32"],["string"],["option",["string"]],["str"],["usize"],["self"],["option",["u32"]],["option",["endianness"]]],[["pingroup"],["error"],["result",["pingroup","error"]]]]],[11,"add_pin_alias","","",3,[[["str"],["usize"],["self"]],[["result",["error"]],["error"]]]],[11,"group_pins_by_name","","",3,[[["str"],["string"],["usize"],["vec",["string"]],["endianness"],["self"],["option",["endianness"]]],[["pingroup"],["error"],["result",["pingroup","error"]]]]],[11,"get_pin_data","","",3,[[["vec"],["self"],["usize"]],[["error"],["result",["u32","error"]],["u32"]]]],[11,"get_pin_reset_data","","",3,[[["vec"],["self"],["usize"]],[["error"],["result",["u32","error"]],["u32"]]]],[11,"reset_pin_names","","",3,[[["self"],["usize"],["vec"]],[["result",["error"]],["error"]]]],[11,"set_pin_data","","",3,[[["u32"],["usize"],["self"],["vec"],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"get_pin_actions","","",3,[[["vec"],["self"],["usize"]],[["error"],["string"],["result",["string","error"]]]]],[11,"get_pin_reset_actions","","",3,[[["vec"],["self"],["usize"]],[["error"],["string"],["result",["string","error"]]]]],[11,"set_pin_actions","","",3,[[["option",["usize"]],["pinactions"],["usize"],["u32"],["self"],["vec"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"drive_pins","","",3,[[["option",["usize"]],["u32"],["usize"],["self"],["vec"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"verify_pins","","",3,[[["option",["usize"]],["u32"],["usize"],["self"],["vec"],["option",["u32"]]],[["result",["error"]],["error"]]]],[11,"capture_pins","","",3,[[["usize"],["self"],["vec"],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"highz_pins","","",3,[[["usize"],["self"],["vec"],["option",["usize"]]],[["result",["error"]],["error"]]]],[11,"verify_names","","Given a group/collection of pin names, verify: * Each pin…",3,[[["vec"],["self"],["usize"]],[["result",["vec","error"]],["error"],["vec",["string"]]]]],[11,"collect","","",3,[[["endianness"],["string"],["usize"],["vec",["string"]],["self"],["option",["endianness"]]],[["error"],["pincollection"],["result",["pincollection","error"]]]]],[11,"pin_names_contain","","",3,[[["str"],["usize"],["vec"],["self"]],[["result",["bool","error"]],["error"],["bool"]]]],[11,"find_in_names","","",3,[[["str"],["usize"],["vec"],["self"]],[["error"],["option",["usize"]],["result",["option","error"]]]]],[11,"index_of","","Given a pin or alias name, finds either its name or alias…",3,[[["str"],["usize"],["self"]],[["error"],["option",["usize"]],["result",["option","error"]]]]],[11,"resolve_to_physical_pin","","",3,[[["str"],["self"],["usize"]],[["option",["pin"]],["pin"]]]],[11,"resolve_to_mut_physical_pin","","",3,[[["str"],["self"],["usize"]],[["option",["pin"]],["pin"]]]],[11,"_resolve_to_physical_pin","","",3,[[["str"],["self"],["usize"]],[["error"],["pin"],["result",["pin","error"]]]]],[11,"resolve_pin_names","","",3,[[["vec"],["self"],["usize"]],[["result",["vec","error"]],["error"],["vec",["string"]]]]],[11,"data_fits_in_pins","","",3,[[["self"],["vec"],["u32"]],[["result",["error"]],["error"]]]],[11,"verify_data_fits","","",3,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"verify_action_string_fits","","",3,[[["u32"],["self"],["vec"]],[["result",["error"]],["error"]]]],[11,"pin_group_contains","","Given a pin name, check if the pin or any of its aliases…",3,[[["str"],["usize"],["self"]],[["result",["bool","error"]],["error"],["bool"]]]],[11,"contains","","",3,[[["str"],["self"],["usize"]],["bool"]]],[11,"_contains","","",3,[[["str"],["self"],["usize"]],["bool"]]],[11,"_resolve_group_to_physical_pins","","",3,[[["str"],["self"],["usize"]],[["error"],["result",["vec","error"]],["vec",["pin"]]]]],[11,"new","origen::core::model::pins","Creates a new state storage container. Creating a new…",14,[[["dut"],["option",["usize"]],["usize"]],["self"]]],[11,"update","","Given a physical pin name, action, and data, updates the…",14,[[["str"],["pinactions"],["option",["u8"]],["option",["pinactions"]],["dut"],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"as_strings","","Processes the current state into a vector of 'state…",14,[[["self"]],[["result",["vec","error"]],["error"],["vec",["string"]]]]],[11,"names","","",14,[[["self"]],[["string"],["vec",["string"]]]]],[0,"registers","origen::core::model","See section 3.5.1 in this doc for a good description of…",null,null],[4,"AccessType","origen::core::model::registers","",null,null],[13,"RO","","",15,null],[13,"RW","","",15,null],[13,"RC","","",15,null],[13,"RS","","",15,null],[13,"WRC","","",15,null],[13,"WRS","","",15,null],[13,"WC","","",15,null],[13,"WS","","",15,null],[13,"WSRC","","",15,null],[13,"WCRS","","",15,null],[13,"W1C","","",15,null],[13,"W1S","","",15,null],[13,"W1T","","",15,null],[13,"W0C","","",15,null],[13,"W0S","","",15,null],[13,"W0T","","",15,null],[13,"W1SRC","","",15,null],[13,"W1CRS","","",15,null],[13,"W0SRC","","",15,null],[13,"W0CRS","","",15,null],[13,"WO","","",15,null],[13,"WOC","","",15,null],[13,"WORZ","","",15,null],[13,"WOS","","",15,null],[13,"W1","","",15,null],[13,"WO1","","",15,null],[13,"DC","","",15,null],[13,"ROWZ","","",15,null],[13,"Unimplemented","","",15,null],[4,"BitOrder","","",null,null],[13,"LSB0","","",16,null],[13,"MSB0","","",16,null],[0,"address_block","","",null,null],[3,"AddressBlock","origen::core::model::registers::address_block","Represents a single, contiguous block of memory in a…",null,null],[12,"id","","",17,null],[12,"memory_map_id","","",17,null],[12,"name","","",17,null],[12,"offset","","The starting address of the address block expressed in…",17,null],[12,"range","","The number of addressable units in the address block.",17,null],[12,"width","","The maximum number of bits that can be accessed by a…",17,null],[12,"access","","",17,null],[12,"registers","","",17,null],[12,"register_files","","",17,null],[11,"model","","Returns an immutable reference to the parent model",17,[[["mutexguard"],["self"]],[["model"],["origenresult",["model"]]]]],[11,"memory_map","","Returns an immutable reference to the parent memory map",17,[[["mutexguard"],["self"]],[["memorymap"],["origenresult",["memorymap"]]]]],[11,"address_unit_bits","","Returns the address_unit_bits size from the parent memory…",17,[[["mutexguard"],["self"]],[["u32"],["origenresult",["u32"]]]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",17,[[["mutexguard"],["self"]],[["origenresult",["u128"]],["u128"]]]],[11,"friendly_path","","Returns a path to this address_block like…",17,[[["mutexguard"],["self"]],[["origenresult",["string"]],["string"]]]],[11,"get_register_id","","Get the ID from the given register name",17,[[["str"],["self"]],[["origenresult",["usize"]],["usize"]]]],[11,"console_display","","",17,[[["mutexguard"],["self"]],[["origenresult",["string"]],["string"]]]],[0,"bit","origen::core::model::registers","",null,null],[3,"Bit","origen::core::model::registers::bit","",null,null],[12,"id","","",18,null],[12,"register_id","","",18,null],[12,"overlay","","",18,null],[12,"overlay_snapshots","","",18,null],[12,"state","","The individual bits mean the following: 0 - Data value 1 -…",18,null],[12,"device_state","","The state we think the device has, only bits [2:0] are…",18,null],[12,"state_snapshots","","The state of the bit at the last reset",18,null],[12,"access","","",18,null],[12,"position","","",18,null],[17,"ZERO","","",null,null],[17,"ONE","","",null,null],[17,"UNDEFINED","","",null,null],[11,"snapshot","","",18,[[["str"],["self"]]]],[11,"is_changed","","",18,[[["str"],["self"]],[["result",["bool"]],["bool"]]]],[11,"rollback","","",18,[[["str"],["self"]],["result"]]],[11,"copy_state","","Copies the state (data and flags) and overlay attributes…",18,[[["bit"],["self"]]]],[11,"clear_flags","","",18,[[["self"]]]],[11,"clear_verify_flag","","",18,[[["self"]]]],[11,"capture","","",18,[[["self"]]]],[11,"set_undefined","","Sets the bit's data value to X",18,[[["self"]]]],[11,"set_hiz","","Sets the bit's data value to Z",18,[[["self"]]]],[11,"has_known_value","","Returns true if not in X or Z state",18,[[["self"]],["bool"]]],[11,"is_x","","",18,[[["self"]],["bool"]]],[11,"is_z","","",18,[[["self"]],["bool"]]],[11,"is_to_be_verified","","",18,[[["self"]],["bool"]]],[11,"is_to_be_captured","","",18,[[["self"]],["bool"]]],[11,"has_overlay","","",18,[[["self"]],["bool"]]],[11,"is_readable","","",18,[[["self"]],["bool"]]],[11,"is_writeable","","",18,[[["self"]],["bool"]]],[11,"is_writable","","",18,[[["self"]],["bool"]]],[11,"is_modified_since_reset","","",18,[[["self"]],["bool"]]],[11,"state_char","","",18,[[["self"]],["char"]]],[11,"verify","","",18,[[["self"]],["result"]]],[11,"is_update_required","","Returns true if the current bit state differs from the…",18,[[["self"]],["bool"]]],[11,"update_device_state","","",18,[[["self"]],["result"]]],[11,"data","","",18,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"set_data","","",18,[[["self"],["u8"]]]],[11,"force_data","","Like set_data(), but will force the data value in the…",18,[[["self"],["u8"]]]],[11,"get_overlay","","",18,[[["self"]],[["string"],["option",["string"]]]]],[11,"set_overlay","","",18,[[["option",["str"]],["str"],["self"]]]],[11,"verify_enable_flag","","",18,[[["self"]],["u8"]]],[11,"capture_enable_flag","","",18,[[["self"]],["u8"]]],[11,"overlay_enable_flag","","",18,[[["self"]],["u8"]]],[11,"reset","","Applies the given state value, making it the new reset…",18,[[["self"],["u8"]]]],[0,"bit_collection","origen::core::model::registers","",null,null],[3,"BitCollection","origen::core::model::registers::bit_collection","",null,null],[12,"reg_id","","Optionally contains the ID of the reg that owns the bits",19,null],[12,"field","","Optionally contains the name of the field that owns the bits",19,null],[12,"whole_reg","","When true the BitCollection contains all bits of the…",19,null],[12,"whole_field","","When true the BitCollection contains all bits of the field…",19,null],[12,"bits","","",19,null],[12,"i","","Iterator index and vars",19,null],[12,"shift_left","","",19,null],[12,"shift_logical","","",19,null],[11,"for_bit_ids","","Creates a BitCollection from the given collection of bit…",19,[[["vec"],["mutexguard"]],["bitcollection"]]],[11,"for_register","","Creates a BitCollection for the given register, normally…",19,[[["register"],["mutexguard"]],["bitcollection"]]],[11,"for_field","","Creates a BitCollection for the given register field,…",19,[[["str"],["vec"],["usize"],["mutexguard"]],["bitcollection"]]],[11,"sort_bits","","Sort the bits in the collection by their position property",19,[[["self"]]]],[11,"position","","If the BitCollection contains > 1 bits, then this will…",19,[[["self"]],["usize"]]],[11,"access","","Returns the access attribute of the BitCollection. This…",19,[[["self"]],[["result",["accesstype"]],["accesstype"]]]],[11,"set_data","","",19,[[["self"],["biguint"]]]],[11,"data","","Returns the data value of the BitCollection. This will…",19,[[["self"]],[["result",["biguint"]],["biguint"]]]],[11,"get_overlay","","Returns the overlay value of the BitCollection. This will…",19,[[["self"]],[["option",["string"]],["result",["option"]]]]],[11,"set_overlay","","Set the overlay value of the BitCollection.",19,[[["option",["str"]],["str"],["self"]],["bitcollection"]]],[11,"has_known_value","","Returns true if no contained bits are in X or Z state",19,[[["self"]],["bool"]]],[11,"range","","Returns a new BitCollection containing the subset of bits…",19,[[["self"],["usize"]],["bitcollection"]]],[11,"clear_verify_flag","","Clears the verify flag on all bits in the collection",19,[[["self"]],["bitcollection"]]],[11,"is_to_be_verified","","Returns true if any bits in the collection has their…",19,[[["self"]],["bool"]]],[11,"is_to_be_captured","","Returns true if any bits in the collection has their…",19,[[["self"]],["bool"]]],[11,"has_overlay","","Returns true if any bits in the collection has an overlay…",19,[[["self"]],["bool"]]],[11,"is_writeable","","Returns true if any bits in the collection is writeable",19,[[["self"]],["bool"]]],[11,"is_writable","","",19,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if any bits in the collection is readable",19,[[["self"]],["bool"]]],[11,"is_update_required","","",19,[[["self"]],["bool"]]],[11,"update_device_state","","Set the collection's device_state field to be the same as…",19,[[["self"]],[["result",["bitcollection"]],["bitcollection"]]]],[11,"clear_flags","","",19,[[["self"]],["bitcollection"]]],[11,"capture","","",19,[[["self"]],["bitcollection"]]],[11,"set_undefined","","",19,[[["self"]],["bitcollection"]]],[11,"reset","","Resets the bits if the collection is for a whole bit field…",19,[[["str"],["self"],["mutexguard"]],[["bitcollection"],["result",["bitcollection"]]]]],[11,"reset_val","","Returns the data value of the given reset type. This will…",19,[[["str"],["self"],["mutexguard"]],[["result",["option"]],["option",["biguint"]]]]],[11,"is_modified_since_reset","","Returns true if the data value of any of the bits has been…",19,[[["self"]],["bool"]]],[11,"is_in_reset_state","","Returns true if the data value of all bits matches that of…",19,[[["str"],["mutexguard"],["option",["str"]],["self"]],[["result",["bool"]],["bool"]]]],[11,"snapshot","","Take a snapshot of the current state of all bits, the…",19,[[["str"],["self"]],[["result",["bitcollection"]],["bitcollection"]]]],[11,"is_changed","","Returns true if the state of any bits has changed vs. the…",19,[[["str"],["self"]],[["result",["bool"]],["bool"]]]],[11,"rollback","","Rollback the state of all bits to the given snapshot. An…",19,[[["str"],["self"]],[["result",["bitcollection"]],["bitcollection"]]]],[11,"verify","","Trigger a verify operation on the register",19,[[["mutexguard"],["biguint"],["option",["biguint"]],["self"],["bool"]],[["option",["usize"]],["result",["option"]]]]],[11,"set_verify_flag","","Equivalent to calling verify() but without invoking a…",19,[[["option",["biguint"]],["self"],["biguint"]],[["result",["bitcollection"]],["bitcollection"]]]],[11,"write","","Trigger a write operation on the register",19,[[["mutexguard"],["self"]],[["option",["usize"]],["result",["option"]]]]],[11,"reg","","Returns the Register object associated with the…",19,[[["mutexguard"],["self"]],[["result",["register"]],["register"]]]],[11,"field","","Returns the bit Field object associated with the…",19,[[["mutexguard"],["self"]],[["result",["field"]],["field"]]]],[11,"shift_left","","",19,[[["self"],["u8"]],[["result",["u8"]],["u8"]]]],[11,"shift_right","","",19,[[["self"],["u8"]],[["result",["u8"]],["u8"]]]],[11,"shift_out_left","","",19,[[["self"]],["bitcollection"]]],[11,"shift_out_right","","",19,[[["self"]],["bitcollection"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"verify_enables","","",19,[[["self"]],["biguint"]]],[11,"capture_enables","","",19,[[["self"]],["biguint"]]],[11,"overlay_enables","","",19,[[["self"]],["biguint"]]],[11,"status_str","","",19,[[["str"],["self"]],[["result",["string"]],["string"]]]],[0,"field","origen::core::model::registers","",null,null],[3,"Field","origen::core::model::registers::field","Named collections of bits within a register",null,null],[12,"reg_id","","",20,null],[12,"name","","",20,null],[12,"description","","",20,null],[12,"offset","","Offset from the start of the register in bits.",20,null],[12,"width","","Width of the field in bits.",20,null],[12,"access","","",20,null],[12,"resets","","Contains any reset values defined for this field, if not…",20,null],[12,"enums","","",20,null],[12,"related_fields","","",20,null],[12,"filename","","The (Python) source file where the field was defined",20,null],[12,"lineno","","The (Python) source file line number where the field was…",20,null],[3,"SummaryField","","A lightweight version of a Field that is returned by the…",null,null],[12,"reg_id","","",21,null],[12,"name","","",21,null],[12,"offset","","",21,null],[12,"width","","Width of the field in bits.",21,null],[12,"access","","",21,null],[12,"spacer","","",21,null],[3,"Reset","","",null,null],[12,"value","","",22,null],[12,"mask","","",22,null],[3,"EnumeratedValue","","",null,null],[12,"name","","",23,null],[12,"description","","",23,null],[12,"value","","",23,null],[11,"add_enum","","",20,[[["str"],["self"],["biguint"]],[["enumeratedvalue"],["result",["enumeratedvalue"]]]]],[11,"add_reset","","",20,[[["str"],["option",["biguint"]],["self"],["biguint"]],[["result",["reset"]],["reset"]]]],[11,"bit_ids","","Returns the bit IDs associated with the field, wrapped in…",20,[[["mutexguard"],["self"]],[["usize"],["vec",["usize"]]]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",20,[[["mutexguard"],["self"]],["bitcollection"]]],[11,"reset","","Applies the given reset type, if the field doesn't have a…",20,[[["str"],["mutexguard"],["self"]]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",21,[[["mutexguard"],["self"]],["bitcollection"]]],[0,"memory_map","origen::core::model::registers","",null,null],[3,"MemoryMap","origen::core::model::registers::memory_map","",null,null],[12,"name","","",24,null],[12,"id","","",24,null],[12,"model_id","","",24,null],[12,"address_unit_bits","","Represents the number of bits of an address increment…",24,null],[12,"address_blocks","","",24,null],[11,"get_address_block_id","","Get the ID from the given address block name",24,[[["str"],["self"]],[["origenresult",["usize"]],["usize"]]]],[11,"friendly_path","","Returns a path to this memory_map like…",24,[[["mutexguard"],["self"]],[["origenresult",["string"]],["string"]]]],[11,"model","","Returns an immutable reference to the parent model",24,[[["mutexguard"],["self"]],[["model"],["origenresult",["model"]]]]],[11,"console_display","","",24,[[["mutexguard"],["self"]],[["origenresult",["string"]],["string"]]]],[0,"register","origen::core::model::registers","",null,null],[3,"Register","origen::core::model::registers::register","",null,null],[12,"id","","",25,null],[12,"address_block_id","","",25,null],[12,"register_file_id","","",25,null],[12,"name","","",25,null],[12,"description","","",25,null],[12,"dim","","The dimension of the register, defaults to 1.",25,null],[12,"offset","","Address offset from the start of the parent address block…",25,null],[12,"size","","The size of the register in bits.",25,null],[12,"access","","",25,null],[12,"fields","","",25,null],[12,"bit_ids","","Contains the IDs of all bits owned by the register",25,null],[12,"bit_order","","",25,null],[12,"filename","","The (Python) source file from which the register was defined",25,null],[12,"lineno","","The (Python) source file line number where the register…",25,null],[3,"RegisterFieldIterator","","An iterator for a register's fields which yields them in…",null,null],[11,"reset_val_for_bit","","Returns the reset value of the given bit index for the…",25,[[["str"],["self"],["usize"]],[["result",["option"]],["option",["u8"]]]]],[11,"field_for_bit","","Returns the field object that owns the given bit, an error…",25,[[["self"],["usize"]],[["result",["option"]],["option",["field"]]]]],[11,"friendly_path","","Returns a path to this register like…",25,[[["mutexguard"],["self"]],[["result",["string"]],["string"]]]],[11,"model","","Returns an immutable reference to the parent model",25,[[["mutexguard"],["self"]],[["model"],["result",["model"]]]]],[11,"model_path","","Returns a path reference to the register's…",25,[[["mutexguard"],["self"]],[["result",["string"]],["string"]]]],[11,"address","","Returns the fully-resolved address taking into account all…",25,[[["mutexguard"],["u32"],["option",["u32"]],["self"]],[["result",["u128"]],["u128"]]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register's…",25,[[["mutexguard"],["self"]],[["result",["u32"]],["u32"]]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",25,[[["mutexguard"],["self"]],[["result",["u128"]],["u128"]]]],[11,"fields","","Returns an iterator for the register's fields which yields…",25,[[["self"],["bool"]],["registerfielditerator"]]],[11,"reset","","Applies the given reset type to all fields, if the fields…",25,[[["str"],["mutexguard"],["self"]]]],[11,"console_display","","",25,[[["bitorder"],["mutexguard"],["option",["bitorder"]],["self"],["bool"]],[["origenresult",["string"]],["string"]]]],[11,"add_field","","",25,[[["str"],["option",["string"]],["usize"],["self"],["string"],["option",["usize"]]],[["field"],["origenresult",["field"]]]]],[11,"bits","","Returns all bits owned by the register, wrapped in a…",25,[[["mutexguard"],["self"]],["bitcollection"]]],[11,"address_block","","Returns an immutable reference to the address block object…",25,[[["mutexguard"],["self"]],[["result",["addressblock"]],["addressblock"]]]],[11,"register_file","","Returns an immutable reference to the register file object…",25,[[["mutexguard"],["self"]],[["result",["registerfile"]],["option",["result"]]]]],[0,"register_file","origen::core::model::registers","",null,null],[3,"RegisterFile","origen::core::model::registers::register_file","Represents a groups of registers within an address block.…",null,null],[12,"id","","",26,null],[12,"address_block_id","","",26,null],[12,"register_file_id","","Optional, if this register file is a child of another…",26,null],[12,"name","","",26,null],[12,"description","","",26,null],[12,"dim","","The dimension of the register, defaults to 1.",26,null],[12,"offset","","The address offset from the containing address block or…",26,null],[12,"range","","The number of addressable units in the register file.",26,null],[12,"registers","","",26,null],[12,"register_files","","",26,null],[11,"get_register_id","","Get the ID from the given register name",26,[[["str"],["self"]],[["result",["usize"]],["usize"]]]],[11,"address_block","","Returns an immutable reference to the address block object…",26,[[["mutexguard"],["self"]],[["result",["addressblock"]],["addressblock"]]]],[11,"register_file","","Returns an immutable reference to the register file object…",26,[[["mutexguard"],["self"]],[["result",["registerfile"]],["option",["result"]]]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register…",26,[[["mutexguard"],["self"]],[["result",["u32"]],["u32"]]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",26,[[["mutexguard"],["self"]],[["result",["u128"]],["u128"]]]],[11,"friendly_path","","Returns a path to this register file like…",26,[[["mutexguard"],["self"]],[["result",["string"]],["string"]]]],[11,"is_readable","origen::core::model::registers","",15,[[["self"]],["bool"]]],[11,"is_writeable","","",15,[[["self"]],["bool"]]],[11,"is_writable","","",15,[[["self"]],["bool"]]],[11,"is_unimplemented","","",15,[[["self"]],["bool"]]],[0,"timesets","origen::core::model","",null,null],[0,"timeset","origen::core::model::timesets","",null,null],[3,"SimpleTimeset","origen::core::model::timesets::timeset","",null,null],[12,"name","","",27,null],[12,"period","","",27,null],[12,"default_period","","",27,null],[3,"Timeset","","",null,null],[12,"name","","",28,null],[12,"model_id","","",28,null],[12,"id","","",28,null],[12,"period_as_string","","",28,null],[12,"default_period","","",28,null],[12,"wavetable_ids","","",28,null],[3,"Wavetable","","",null,null],[12,"name","","",29,null],[12,"model_id","","",29,null],[12,"timeset_id","","",29,null],[12,"id","","",29,null],[12,"period","","",29,null],[12,"wave_group_ids","","",29,null],[3,"WaveGroup","","",null,null],[12,"model_id","","",30,null],[12,"timeset_id","","",30,null],[12,"wavetable_id","","",30,null],[12,"id","","",30,null],[12,"name","","",30,null],[12,"wave_ids","","",30,null],[12,"derived_from","","",30,null],[3,"Wave","","",null,null],[12,"model_id","","",31,null],[12,"timeset_id","","",31,null],[12,"wavetable_id","","",31,null],[12,"wave_group_id","","",31,null],[12,"wave_id","","",31,null],[12,"events","","",31,null],[12,"pins","","",31,null],[12,"indicator","","",31,null],[3,"Event","","",null,null],[12,"wavetable_id","","",32,null],[12,"wave_id","","",32,null],[12,"event_id","","",32,null],[12,"event_index","","",32,null],[12,"action","","",32,null],[12,"at","","",32,null],[12,"unit","","",32,null],[4,"EventActions","","",null,null],[13,"DriveHigh","","",33,null],[13,"DriveLow","","",33,null],[13,"VerifyHigh","","",33,null],[13,"VerifyLow","","",33,null],[13,"VerifyZ","","",33,null],[13,"HighZ","","",33,null],[13,"Capture","","",33,null],[11,"new","","",28,[[["str"],["option",["box"]],["usize"],["box",["tostring"]],["option",["f64"]],["f64"]],["self"]]],[11,"eval_str","","",28,[[["self"]],["string"]]],[11,"eval","","",28,[[["option",["f64"]],["f64"],["self"]],[["error"],["f64"],["result",["f64","error"]]]]],[11,"register_wavetable","","",28,[[["str"],["self"],["usize"]],[["result",["wavetable","error"]],["wavetable"],["error"]]]],[11,"get_wavetable_id","","",28,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"contains_wavetable","","",28,[[["str"],["self"]],["bool"]]],[11,"new","","",29,[[["str"],["usize"]],[["error"],["result",["error"]]]]],[11,"get_wave_group_id","","",29,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"contains_wave_group","","",29,[[["str"],["self"]],["bool"]]],[11,"set_period","","",29,[[["option",["box"]],["self"],["box",["tostring"]]],[["result",["error"]],["error"]]]],[11,"register_wave_group","","",29,[[["str"],["usize"],["self"],["option",["vec"]],["vec",["usize"]]],[["error"],["result",["wavegroup","error"]],["wavegroup"]]]],[11,"eval","","",29,[[["option",["f64"]],["f64"],["self"]],[["result",["option","error"]],["option",["f64"]],["error"]]]],[11,"new_from_wavetable","","",30,[[["str"],["usize"],["wavetable"],["option",["vec"]],["vec",["usize"]]],[["error"],["result",["error"]]]]],[11,"register_wave","","",30,[[["str"],["self"],["usize"]],[["result",["wave","error"]],["error"],["wave"]]]],[11,"get_wave_id","","",30,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"contains_wave","","",30,[[["str"],["self"]],["bool"]]],[11,"get_waves_applied_to","","",30,[[["str"],["dut"],["self"]],[["string"],["vec",["string"]]]]],[11,"new","","",31,[[["str"],["usize"]],[["error"],["result",["error"]]]]],[11,"new_from_wave_group","","",31,[[["str"],["wavegroup"],["usize"]],[["error"],["result",["error"]]]]],[11,"apply_to","","",31,[[["self"],["string"],["vec",["string"]]],[["result",["error"]],["error"]]]],[11,"set_indicator","","",31,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_event_id","","",31,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"push_event","","",31,[[["box",["tostring"]],["string"],["usize"],["tostring"],["option",["string"]],["self"],["str"]],[["event"],["error"],["result",["event","error"]]]]],[11,"from_str","","",33,[[["str"]],[["error"],["result",["eventactions","error"]],["eventactions"]]]],[11,"as_str","","",33,[[["self"]],["str"]]],[11,"eval","","",32,[[["dut"],["option",["f64"]],["f64"],["self"]],[["error"],["f64"],["result",["f64","error"]]]]],[11,"set_action","","",32,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"add_timeset","origen::core::model","",6,[[["str"],["option",["box"]],["usize"],["box",["tostring"]],["option",["f64"]],["self"],["f64"]],[["error"],["result",["timeset","error"]],["timeset"]]]],[11,"get_timeset_id","","",6,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"contains_timeset","","",6,[[["str"],["self"]],["bool"]]],[11,"create_timeset","origen::core::dut","",3,[[["str"],["option",["box"]],["usize"],["box",["tostring"]],["option",["f64"]],["self"],["f64"]],[["error"],["result",["timeset","error"]],["timeset"]]]],[11,"create_wavetable","","",3,[[["str"],["self"],["usize"]],[["result",["wavetable","error"]],["wavetable"],["error"]]]],[11,"create_wave_group","","",3,[[["str"],["usize"],["self"],["option",["vec"]],["vec",["usize"]]],[["error"],["result",["wavegroup","error"]],["wavegroup"]]]],[11,"create_wave","","",3,[[["str"],["usize"],["vec",["string"]],["option",["vec"]],["self"]],[["wave"],["result",["wave","error"]],["error"]]]],[11,"create_event","","",3,[[["box",["tostring"]],["string"],["usize"],["tostring"],["option",["string"]],["self"],["str"]],[["result",["event","error"]],["event"],["error"]]]],[11,"new","origen::core::model","",6,[[["string"],["usize"],["u128"],["option",["usize"]],["option",["u128"]]],["model"]]],[11,"add_service","","",6,[[["str"],["self"],["usize"]],["result"]]],[11,"lookup","","",6,[[["str"],["self"]],[["result",["indexmap"]],["indexmap"]]]],[11,"console_header","","Returns the hierarchical name of the model and the offset…",6,[[["mutexguard"],["self"]]]],[11,"get_memory_map_id","","Get the ID for the given memory map name, throw an error…",6,[[["str"],["self"]],[["result",["usize"]],["usize"]]]],[11,"display_path","","Returns the path to this model for displaying to a user,…",6,[[["mutexguard"],["self"]],["string"]]],[11,"console_display","","",6,[[["mutexguard"],["self"]],[["result",["string"]],["string"]]]],[11,"parent","","Returns the parent of this model or None, normally meaning…",6,[[["mutexguard"],["self"]],[["option",["model"]],["result",["option"]]]]],[11,"address","","Returns the fully resolved address of the block which is…",6,[[["mutexguard"],["self"]],[["result",["u128"]],["u128"]]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",6,[[["mutexguard"],["self"]],[["result",["u128"]],["u128"]]]],[11,"friendly_path","","Returns a path to this block like \"dut.my_block\"",6,[[["mutexguard"],["self"]],[["result",["string"]],["string"]]]],[0,"os","origen::core","",null,null],[5,"on_windows","origen::core::os","",null,[[],["bool"]]],[5,"on_linux","","",null,[[],["bool"]]],[0,"status","origen::core","",null,null],[3,"Status","origen::core::status","",null,null],[12,"is_app_present","","When true, Origen is executing within an application…",34,null],[12,"root","","The full file system path to the application root (when…",34,null],[12,"origen_version","","The Origen version in a Semver object",34,null],[12,"start_time","","",34,null],[12,"home","","The full file system path to the user's home directory",34,null],[0,"term","origen::core","",null,null],[5,"green","origen::core::term","",null,[[["str"]]]],[5,"greenln","","",null,[[["str"]]]],[5,"red","","",null,[[["str"]]]],[5,"redln","","",null,[[["str"]]]],[5,"yellow","","",null,[[["str"]]]],[5,"yellowln","","",null,[[["str"]]]],[5,"cyan","","",null,[[["str"]]]],[5,"cyanln","","",null,[[["str"]]]],[5,"standardln","","",null,[[["str"]]]],[0,"utility","origen::core","",null,null],[5,"resolve_dir_from_app_root","origen::core::utility","Resolves a directory path from the current application…",null,[[["option",["string"]],["string"],["str"]],["pathbuf"]]],[0,"big_uint_helpers","","Helpers for working with BigUnits",null,null],[5,"bit_slice","origen::core::utility::big_uint_helpers","Returns the value of the given BigUint for the given bit…",null,[[["biguint"],["usize"]],[["result",["biguint"]],["biguint"]]]],[0,"location","origen::core::utility","",null,null],[3,"Location","origen::core::utility::location","Stores a location and implements some helpers for…",null,null],[12,"location","","The raw location",35,null],[11,"new","","",35,[[["str"]],["self"]]],[11,"url","","",35,[[["self"]],[["string"],["option",["string"]]]]],[11,"git","","",35,[[["self"]],[["string"],["option",["string"]]]]],[11,"git_https","","",35,[[["self"]],[["string"],["option",["string"]]]]],[11,"git_ssh","","",35,[[["self"]],[["string"],["option",["string"]]]]],[11,"path","","",35,[[["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[0,"logger","origen::core::utility","",null,null],[3,"Logger","origen::core::utility::logger","",null,null],[12,"output_file","","",36,null],[11,"debug","","",36,[[["str"],["self"]]]],[11,"debug_block","","",36,[[["vec"],["self"]]]],[11,"deprecated","","",36,[[["str"],["self"]]]],[11,"deprecated_block","","",36,[[["vec"],["self"]]]],[11,"error","","",36,[[["str"],["self"]]]],[11,"error_block","","",36,[[["vec"],["self"]]]],[11,"info","","",36,[[["str"],["self"]]]],[11,"info_block","","",36,[[["vec"],["self"]]]],[11,"log","","",36,[[["str"],["self"]]]],[11,"log_block","","",36,[[["vec"],["self"]]]],[11,"success","","",36,[[["str"],["self"]]]],[11,"success_block","","",36,[[["vec"],["self"]]]],[11,"warning","","",36,[[["str"],["self"]]]],[11,"warning_block","","",36,[[["vec"],["self"]]]],[11,"default_output_dir","","",36,[[],["pathbuf"]]],[11,"default_output_file","","",36,[[],["pathbuf"]]],[11,"default","","",36,[[],["logger"]]],[0,"producer","origen::core","",null,null],[3,"Producer","origen::core::producer","",null,null],[12,"jobs","","",37,null],[12,"running","","",37,null],[12,"completed","","",37,null],[12,"queued","","",37,null],[4,"OptionType","","",null,null],[13,"OptionString","","",38,null],[13,"OptionBool","","",38,null],[13,"OptionNum","","",38,null],[13,"OptionList","","",38,null],[4,"JobType","","",null,null],[13,"Generate","","",39,null],[13,"Program","","",39,null],[13,"Misc","","",39,null],[0,"job","","",null,null],[3,"Job","origen::core::producer::job","",null,null],[12,"command","","",40,null],[12,"results","","",40,null],[12,"id","","",40,null],[11,"new","origen::core::producer","",37,[[],["self"]]],[11,"create_pattern_job","","",37,[[["str"],["self"]],[["error"],["result",["job","error"]],["job"]]]],[0,"tester","origen::core","",null,null],[3,"Tester","origen::core::tester","",null,null],[12,"target_testers","","",41,null],[3,"RenderStatus","","",null,null],[12,"completed","","",42,null],[12,"external","","",42,null],[4,"TesterSource","","",null,null],[13,"Internal","","",43,null],[13,"External","","",43,null],[8,"Interceptor","","Trait which allows Rust-side implemented testers to…",null,null],[11,"cycle","","",44,[[["u32"],["node"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"set_timeset","","",44,[[["self"],["usize"],["node"]],[["result",["error"]],["error"]]]],[11,"clear_timeset","","",44,[[["self"],["node"]],[["result",["error"]],["error"]]]],[11,"cc","","",44,[[["str"],["node"],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"set_pin_header","","",44,[[["self"],["usize"],["node"]],[["result",["error"]],["error"]]]],[11,"clear_pin_header","","",44,[[["self"],["node"]],[["result",["error"]],["error"]]]],[8,"TesterAPI","","",null,null],[10,"name","","",45,[[["self"]],["string"]]],[10,"clone","","",45,[[["self"]],[["box",["testerapi"]],["testerapi"]]]],[10,"run","","",45,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"preprocess","","",45,[[["self"],["node"]],[["node"],["result",["node","error"]],["error"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"new","","",41,[[],["self"]]],[11,"_current_timeset_id","","",41,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"_current_pin_header_id","","",41,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"reset","","",41,[[["self"],["string"],["option",["string"]]],[["result",["error"]],["error"]]]],[11,"clear_dut_dependencies","","Clears all members which reference members on the current…",41,[[["self"],["string"],["option",["string"]]],[["result",["error"]],["error"]]]],[11,"reset_external_testers","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"reset_targets","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"register_external_tester","","",41,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_timeset","","",41,[[["dut"],["self"]],[["option",["timeset"]],["timeset"]]]],[11,"_get_timeset","","",41,[[["dut"],["self"]],[["error"],["result",["timeset","error"]],["timeset"]]]],[11,"set_timeset","","",41,[[["str"],["usize"],["dut"],["self"]],[["result",["error"]],["error"]]]],[11,"clear_timeset","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"get_pin_header","","",41,[[["dut"],["self"]],[["option",["pinheader"]],["pinheader"]]]],[11,"_get_pin_header","","",41,[[["dut"],["self"]],[["result",["pinheader","error"]],["pinheader"],["error"]]]],[11,"set_pin_header","","",41,[[["str"],["usize"],["dut"],["self"]],[["result",["error"]],["error"]]]],[11,"clear_pin_header","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"issue_callback_at","","",41,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"cc","","",41,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"cycle","","",41,[[["self"],["option",["usize"]],["usize"]],[["result",["error"]],["error"]]]],[11,"end_pattern","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"render_target_at","","Renders the output for the target at index i. Allows the…",41,[[["self"],["usize"]],[["error"],["renderstatus"],["result",["renderstatus","error"]]]]],[11,"target","","",41,[[["str"],["self"]],[["error"],["result",["testersource","error"]],["testersource"]]]],[11,"targets","","",41,[[["self"]],["vec"]]],[11,"targets_as_strs","","",41,[[["self"]],[["string"],["vec",["string"]]]]],[11,"clear_targets","","",41,[[["self"]],[["result",["error"]],["error"]]]],[11,"testers","","",41,[[["self"]],[["string"],["vec",["string"]]]]],[11,"new","","",42,[[],["self"]]],[0,"error","origen","",null,null],[3,"Error","origen::error","",null,null],[12,"msg","","",46,null],[5,"raises_error","","",null,[[["bool"]],["result"]]],[11,"new","","",46,[[["str"]],["error"]]],[0,"generator","origen","",null,null],[3,"TestManager","origen::generator","",null,null],[12,"ast","","",47,null],[0,"ast","","",null,null],[3,"Node","origen::generator::ast","",null,null],[12,"attrs","","",48,null],[12,"meta","","",48,null],[12,"children","","",48,null],[3,"AST","","An AST provides an API for constructing a node tree, when…",null,null],[4,"Attrs","","",null,null],[13,"_Inline","","",49,null],[13,"Integer","","",49,null],[13,"Float","","",49,null],[13,"String","","",49,null],[13,"Test","","",49,null],[13,"Comment","","",49,null],[13,"SetTimeset","","",49,null],[13,"ClearTimeset","","",49,null],[13,"SetPinHeader","","",49,null],[13,"ClearPinHeader","","",49,null],[13,"PinAction","","",49,null],[13,"RegWrite","","",49,null],[13,"RegVerify","","",49,null],[13,"JTAGWriteIR","","",49,null],[13,"JTAGVerifyIR","","",49,null],[13,"JTAGWriteDR","","",49,null],[13,"JTAGVerifyDR","","",49,null],[13,"Cycle","","",49,null],[13,"PatternEnd","","",49,null],[13,"Flow","","",49,null],[13,"STIL","","",49,null],[13,"STILUnknown","","",49,null],[13,"STILVersion","","",49,null],[13,"STILHeader","","",49,null],[13,"STILTitle","","",49,null],[13,"STILDate","","",49,null],[13,"STILSource","","",49,null],[13,"STILHistory","","",49,null],[13,"STILAnnotation","","",49,null],[13,"STILInclude","","",49,null],[13,"STILSignals","","",49,null],[13,"STILSignal","","",49,null],[13,"STILTermination","","",49,null],[13,"STILDefaultState","","",49,null],[13,"STILBase","","",49,null],[13,"STILAlignment","","",49,null],[13,"STILScanIn","","",49,null],[13,"STILScanOut","","",49,null],[13,"STILDataBitCount","","",49,null],[13,"STILSignalGroups","","",49,null],[13,"STILSignalGroup","","",49,null],[13,"STILSigRefExpr","","",49,null],[13,"STILTimeExpr","","",49,null],[13,"STILSIUnit","","",49,null],[13,"STILEngPrefix","","",49,null],[13,"STILAdd","","",49,null],[13,"STILSubtract","","",49,null],[13,"STILMultiply","","",49,null],[13,"STILDivide","","",49,null],[13,"STILParens","","",49,null],[13,"STILNumberWithUnit","","",49,null],[13,"STILPatternExec","","",49,null],[13,"STILCategoryRef","","",49,null],[13,"STILSelectorRef","","",49,null],[13,"STILTimingRef","","",49,null],[13,"STILPatternBurstRef","","",49,null],[13,"STILPatternBurst","","",49,null],[13,"STILSignalGroupsRef","","",49,null],[13,"STILMacroDefs","","",49,null],[13,"STILProcedures","","",49,null],[13,"STILScanStructuresRef","","",49,null],[13,"STILStart","","",49,null],[13,"STILStop","","",49,null],[13,"STILTerminations","","",49,null],[13,"STILTerminationItem","","",49,null],[13,"STILPatList","","",49,null],[13,"STILPat","","",49,null],[13,"STILLabel","","",49,null],[13,"STILTiming","","",49,null],[13,"STILWaveformTable","","",49,null],[13,"STILPeriod","","",49,null],[13,"STILInherit","","",49,null],[13,"STILSubWaveforms","","",49,null],[13,"STILSubWaveform","","",49,null],[13,"STILWaveforms","","",49,null],[13,"STILWaveform","","",49,null],[13,"STILWFChar","","",49,null],[13,"STILEvent","","",49,null],[13,"STILEventList","","",49,null],[13,"STILSpec","","",49,null],[13,"STILCategory","","",49,null],[13,"STILSpecItem","","",49,null],[13,"STILTypicalVar","","",49,null],[13,"STILSpecVar","","",49,null],[13,"STILSpecVarItem","","",49,null],[13,"STILVariable","","",49,null],[13,"STILSelector","","",49,null],[13,"STILSelectorItem","","",49,null],[13,"STILScanStructures","","",49,null],[13,"STILScanChain","","",49,null],[13,"STILScanLength","","",49,null],[13,"STILScanOutLength","","",49,null],[13,"STILScanCells","","",49,null],[13,"STILScanMasterClock","","",49,null],[13,"STILScanSlaveClock","","",49,null],[13,"STILScanInversion","","",49,null],[13,"STILScanInName","","",49,null],[13,"STILScanOutName","","",49,null],[13,"STILNot","","",49,null],[13,"STILPattern","","",49,null],[13,"STILTimeUnit","","",49,null],[13,"STILVector","","",49,null],[13,"STILCyclizedData","","",49,null],[13,"STILNonCyclizedData","","",49,null],[13,"STILRepeat","","",49,null],[13,"STILWaveformFormat","","",49,null],[13,"STILHexFormat","","",49,null],[13,"STILDecFormat","","",49,null],[13,"STILData","","",49,null],[13,"STILTimeValue","","",49,null],[13,"STILWaveformRef","","",49,null],[13,"STILCondition","","",49,null],[13,"STILCall","","",49,null],[13,"STILMacro","","",49,null],[13,"STILLoop","","",49,null],[13,"STILMatchLoop","","",49,null],[13,"STILGoto","","",49,null],[13,"STILBreakPoint","","",49,null],[13,"STILIDDQ","","",49,null],[13,"STILStopStatement","","",49,null],[11,"new","","Create a new AST with the given node as the top-level",50,[[],["ast"]]],[11,"unwrap","","Consumes the AST, converting it to a Node",50,[[["self"]],["node"]]],[11,"push","","Push a new terminal node into the AST",50,[[["node"],["self"]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",50,[[["node"],["self"]],["usize"]]],[11,"close","","Close the currently open node",50,[[["self"],["usize"]],["result"]]],[11,"replace","","Replace the node n - offset with the given node, use…",50,[[["node"],["self"],["usize"]],["result"]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",50,[[["node"],["self"],["usize"]],["result"]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",50,[[["self"],["usize"]],[["result",["node"]],["node"]]]],[11,"start","","Clear the current AST and start a new one with the given…",50,[[["node"],["self"]]]],[11,"process","","",50,[[["fnmut"],["self"]],["node"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"to_pickle","","Serializes the AST for import into Python",50,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_node","","Clones the current state of the AST into a Node, leaving…",50,[[["self"]],["node"]]],[11,"new","","",48,[[["attrs"]],["node"]]],[11,"unwrap","","",48,[[["self"]],[["node"],["option",["node"]]]]],[11,"process","","Returns a new node which is the output of the node…",48,[[["processor"],["self"]],[["result",["option"]],["option",["node"]]]]],[11,"new_with_meta","","",48,[[["string"],["usize"],["option",["string"]],["attrs"],["option",["usize"]]],["node"]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"to_pickle","","Serializes the AST for import into Python",48,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"add_child","","",48,[[["node"],["self"]]]],[11,"insert_child","","",48,[[["node"],["self"],["usize"]],["result"]]],[11,"replace_child","","Replace the child n - offset with the given node, use…",48,[[["node"],["self"],["usize"]],["result"]]],[11,"get_child","","Returns a copy of child n - offset, an offset of 0 means…",48,[[["self"],["usize"]],[["result",["node"]],["node"]]]],[11,"process_return_code","","",48,[[["return"],["self"],["processor"]],[["result",["option"]],["option",["node"]]]]],[11,"process_and_update_children","","Returns a new node which is a copy of self with its…",48,[[["processor"],["self"]],[["result",["node"]],["node"]]]],[11,"process_and_box_children","","Returns processed versions of the node's children, each…",48,[[["processor"],["self"]],[["result",["vec"]],["vec",["box"]]]]],[11,"process_children","","Returns processed versions of the node's children",48,[[["processor"],["self"]],[["result",["vec"]],["vec",["node"]]]]],[11,"replace_children","","Returns a new node which is a copy of self with its…",48,[[["vec",["box"]],["box",["node"]],["self"]],["node"]]],[11,"replace_attrs","","Returns a new node which is a copy of self with its attrs…",48,[[["self"],["attrs"]],["node"]]],[0,"processor","origen::generator","The processor API is intentionally placed in a separate…",null,null],[4,"Return","origen::generator::processor","All procesor handler methods should return this",null,null],[13,"None","","Deletes the node from the output AST.",51,null],[13,"Unmodified","","Clones the node (and all of its children) into the output…",51,null],[13,"ProcessChildren","","Clones the node but replaces it's current children with…",51,null],[13,"Replace","","Replace the node in the output AST with the given node.",51,null],[13,"Unwrap","","Removes the node and leaves its children in its place.",51,null],[13,"Inline","","Replace the node in the output AST with the given nodes,…",51,null],[13,"InlineBoxed","","Same as Inline, but accepts a vector of boxed nodes",51,null],[8,"Processor","","",null,null],[11,"on_node","","",52,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_end_of_block","","This will be called at the end of processing every node…",52,[[["self"],["node"]],[["return"],["result",["return"]]]]],[0,"processors","origen::generator","",null,null],[3,"CycleCombiner","origen::generator::processors","",null,null],[3,"PinActionCombiner","","Combines adjacent pin actions into a single pin action",null,null],[3,"ToString","","",null,null],[3,"UpcaseComments","","",null,null],[11,"run","","",53,[[["node"]],[["result",["node"]],["node"]]]],[11,"run","","",54,[[["node"]],[["result",["node"]],["node"]]]],[11,"advance_to_second_pass","","",54,[[["self"]]]],[11,"run","","",55,[[["node"]],["string"]]],[11,"run","","",56,[[["node"]],[["result",["node"]],["node"]]]],[0,"stil","origen::generator","",null,null],[3,"STIL","origen::generator::stil","",null,null],[12,"ast","","The un-processed AST representation of the given STIL code",57,null],[4,"SignalType","","",null,null],[13,"InOut","","",58,null],[13,"Out","","",58,null],[13,"In","","",58,null],[13,"Supply","","",58,null],[13,"Pseudo","","",58,null],[4,"Termination","","",null,null],[13,"TerminateHigh","","",59,null],[13,"TerminateLow","","",59,null],[13,"TerminateOff","","",59,null],[13,"TerminateUknown","","",59,null],[4,"State","","",null,null],[13,"U","","",60,null],[13,"D","","",60,null],[13,"Z","","",60,null],[13,"ForceUp","","",60,null],[13,"ForceDown","","",60,null],[13,"ForceOff","","",60,null],[4,"Base","","",null,null],[13,"Hex","","",61,null],[13,"Dec","","",61,null],[4,"Alignment","","",null,null],[13,"MSB","","",62,null],[13,"LSB","","",62,null],[4,"Selector","","",null,null],[13,"Min","","",63,null],[13,"Typ","","",63,null],[13,"Max","","",63,null],[13,"Meas","","",63,null],[11,"from_file","","",57,[[["path"]],[["origenresult",["stil"]],["stil"]]]],[11,"from_str","","",57,[[["str"],["option",["str"]]],[["origenresult",["stil"]],["stil"]]]],[11,"new","origen::generator","",47,[[],["testmanager"]]],[11,"start","","Starts a new test (deletes the current AST and starts a…",47,[[["str"],["self"]]]],[11,"push","","Push a new terminal node into the AST",47,[[["node"],["self"]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",47,[[["node"],["self"]],["usize"]]],[11,"close","","Close the currently open node",47,[[["self"],["usize"]],["result"]]],[11,"replace","","Replace the node n - offset with the given node, use…",47,[[["node"],["self"],["usize"]],["result"]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",47,[[["self"],["usize"]],[["result",["node"]],["node"]]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",47,[[["node"],["self"],["usize"]],["result"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"process","","",47,[[["fnmut"],["self"]],["node"]]],[11,"to_node","","",47,[[["self"]],["node"]]],[11,"to_pickle","","Serializes the AST for import into Python",47,[[["self"]],[["vec",["u8"]],["u8"]]]],[0,"services","origen","",null,null],[3,"Services","origen::services","",null,null],[4,"Service","","",null,null],[13,"None","","",64,null],[13,"JTAG","","",64,null],[0,"jtag","","",null,null],[3,"Service","origen::services::jtag","",null,null],[12,"ir_val","","",65,null],[11,"new","","",65,[[],["service"]]],[11,"write_ir","","",65,[[["value"],["self"]],["result"]]],[11,"verify_ir","","",65,[[["value"],["self"]],["result"]]],[11,"write_dr","","",65,[[["value"],["self"]],["result"]]],[11,"verify_dr","","",65,[[["value"],["self"]],["result"]]],[11,"new","origen::services","",66,[[],["services"]]],[11,"change","","",66,[[["self"]]]],[11,"add_service","","Adds the given service to the database, returning its…",66,[[["self"],["service"]],["usize"]]],[11,"get_mut_service","","Get a mutable reference to the service with the given ID",66,[[["self"],["usize"]],[["result",["service"]],["service"]]]],[11,"get_service","","Get a read-only reference to the service with the given…",66,[[["self"],["usize"]],[["result",["service"]],["service"]]]],[0,"testers","origen","",null,null],[3,"DummyRenderer","origen::testers","",null,null],[3,"DummyRendererWithInterceptors","","",null,null],[5,"available_testers","","",null,[[],[["string"],["vec",["string"]]]]],[5,"instantiate_tester","","",null,[[["str"]],[["option",["box"]],["box",["testerapi"]]]]],[0,"simulator","","",null,null],[3,"Renderer","origen::testers::simulator","",null,null],[0,"v93k","origen::testers","",null,null],[3,"Renderer","origen::testers::v93k","",null,null],[0,"built_info","origen","",null,null],[17,"CI_PLATFORM","origen::built_info","The Continuous Integration platform detected during…",null,null],[17,"PKG_VERSION","","The full version.",null,null],[17,"PKG_VERSION_MAJOR","","The major version.",null,null],[17,"PKG_VERSION_MINOR","","The minor version.",null,null],[17,"PKG_VERSION_PATCH","","The patch version.",null,null],[17,"PKG_VERSION_PRE","","The pre-release version.",null,null],[17,"PKG_AUTHORS","","A colon-separated list of authors.",null,null],[17,"PKG_NAME","","The name of the package.",null,null],[17,"PKG_DESCRIPTION","","The description.",null,null],[17,"PKG_HOMEPAGE","","The homepage.",null,null],[17,"TARGET","","The target triple that was being compiled for.",null,null],[17,"HOST","","The host triple of the rust compiler.",null,null],[17,"PROFILE","","`release` for release builds, `debug` for other builds.",null,null],[17,"RUSTC","","The compiler that cargo resolved to use.",null,null],[17,"RUSTDOC","","The documentation generator that cargo resolved to use.",null,null],[17,"OPT_LEVEL","","Value of OPT_LEVEL for the profile used during compilation.",null,null],[17,"NUM_JOBS","","The parallelism that was specified during compilation.",null,null],[17,"DEBUG","","Value of DEBUG for the profile used during compilation.",null,null],[17,"FEATURES","","The features that were enabled during compilation.",null,null],[17,"FEATURES_STR","","The features as a comma-separated string.",null,null],[17,"RUSTC_VERSION","","The output of `rustc -V`",null,null],[17,"RUSTDOC_VERSION","","The output of `rustdoc -V`",null,null],[17,"GIT_VERSION","","If the crate was compiled from within a git-repository,…",null,null],[17,"BUILT_TIME_UTC","","The built-time in RFC2822, UTC",null,null],[17,"CFG_TARGET_ARCH","","The target architecture, given by `cfg!(target_arch)`.",null,null],[17,"CFG_ENDIAN","","The endianness, given by `cfg!(target_endian)`.",null,null],[17,"CFG_ENV","","The toolchain-environment, given by `cfg!(target_env)`.",null,null],[17,"CFG_FAMILY","","The OS-family, given by `cfg!(target_family)`.",null,null],[17,"CFG_OS","","The operating system, given by `cfg!(target_os)`.",null,null],[17,"CFG_POINTER_WIDTH","","The pointer width, given by `cfg!(target_pointer_width)`.",null,null],[6,"Result","origen","",null,null],[17,"MODES","","The available Origen runtime modes",null,null],[14,"duplicate_error","","Returns an Origen Error with pre-formatted message…",null,null],[14,"backend_lookup_error","","Returns a error stating that the backend doesn't have an…",null,null],[14,"lookup_error","","",null,null],[14,"backend_fail","","",null,null],[14,"backend_expect","","",null,null],[14,"fail","","",null,null],[14,"node","","",null,null],[14,"push_pin_actions","","",null,null],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_py","","",67,[[["python"]],["u"]]],[11,"from_py","","",67,[[["python"],["t"]],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_py","","",68,[[["python"]],["u"]]],[11,"from_py","","",68,[[["python"],["t"]],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_py","","",69,[[["python"]],["u"]]],[11,"from_py","","",69,[[["python"],["t"]],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_py","","",70,[[["python"]],["u"]]],[11,"from_py","","",70,[[["python"],["t"]],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_py","","",71,[[["python"]],["u"]]],[11,"from_py","","",71,[[["python"],["t"]],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_py","","",72,[[["python"]],["u"]]],[11,"from_py","","",72,[[["python"],["t"]],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_py","","",73,[[["python"]],["u"]]],[11,"from_py","","",73,[[["python"],["t"]],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_py","","",74,[[["python"]],["u"]]],[11,"from_py","","",74,[[["python"],["t"]],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_py","","",75,[[["python"]],["u"]]],[11,"from_py","","",75,[[["python"],["t"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_py","","",0,[[["python"]],["u"]]],[11,"from_py","","",0,[[["python"],["t"]],["t"]]],[11,"from","origen::core::application::config","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_py","","",1,[[["python"]],["u"]]],[11,"from_py","","",1,[[["python"],["t"]],["t"]]],[11,"from","origen::core::config","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_py","","",76,[[["python"]],["u"]]],[11,"from_py","","",76,[[["python"],["t"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_py","","",2,[[["python"]],["u"]]],[11,"from_py","","",2,[[["python"],["t"]],["t"]]],[11,"from","origen::core::dut","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_py","","",3,[[["python"]],["u"]]],[11,"from_py","","",3,[[["python"],["t"]],["t"]]],[11,"from","origen::core::file_handler","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_py","","",4,[[["python"]],["u"]]],[11,"from_py","","",4,[[["python"],["t"]],["t"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_py","","",5,[[["python"]],["u"]]],[11,"from_py","","",5,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_py","","",6,[[["python"]],["u"]]],[11,"from_py","","",6,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::pins","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_py","","",14,[[["python"]],["u"]]],[11,"from_py","","",14,[[["python"],["t"]],["t"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_py","","",7,[[["python"]],["u"]]],[11,"from_py","","",7,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::pins::pin","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_py","","",8,[[["python"]],["u"]]],[11,"from_py","","",8,[[["python"],["t"]],["t"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_py","","",9,[[["python"]],["u"]]],[11,"from_py","","",9,[[["python"],["t"]],["t"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_py","","",10,[[["python"]],["u"]]],[11,"from_py","","",10,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::pins::pin_collection","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_py","","",11,[[["python"]],["u"]]],[11,"from_py","","",11,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::pins::pin_group","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_py","","",12,[[["python"]],["u"]]],[11,"from_py","","",12,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::pins::pin_header","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_py","","",13,[[["python"]],["u"]]],[11,"from_py","","",13,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_py","","",15,[[["python"]],["u"]]],[11,"from_py","","",15,[[["python"],["t"]],["t"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_py","","",16,[[["python"]],["u"]]],[11,"from_py","","",16,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::address_block","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_py","","",17,[[["python"]],["u"]]],[11,"from_py","","",17,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::bit","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_py","","",18,[[["python"]],["u"]]],[11,"from_py","","",18,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::bit_collection","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_py","","",19,[[["python"]],["u"]]],[11,"from_py","","",19,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::field","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_py","","",20,[[["python"]],["u"]]],[11,"from_py","","",20,[[["python"],["t"]],["t"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_py","","",21,[[["python"]],["u"]]],[11,"from_py","","",21,[[["python"],["t"]],["t"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_py","","",22,[[["python"]],["u"]]],[11,"from_py","","",22,[[["python"],["t"]],["t"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_py","","",23,[[["python"]],["u"]]],[11,"from_py","","",23,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::memory_map","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_py","","",24,[[["python"]],["u"]]],[11,"from_py","","",24,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::register","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_py","","",25,[[["python"]],["u"]]],[11,"from_py","","",25,[[["python"],["t"]],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"into_iter","","",77,[[],["i"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_py","","",77,[[["python"]],["u"]]],[11,"from_py","","",77,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::registers::register_file","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_py","","",26,[[["python"]],["u"]]],[11,"from_py","","",26,[[["python"],["t"]],["t"]]],[11,"from","origen::core::model::timesets::timeset","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_py","","",27,[[["python"]],["u"]]],[11,"from_py","","",27,[[["python"],["t"]],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_py","","",28,[[["python"]],["u"]]],[11,"from_py","","",28,[[["python"],["t"]],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_py","","",29,[[["python"]],["u"]]],[11,"from_py","","",29,[[["python"],["t"]],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_py","","",30,[[["python"]],["u"]]],[11,"from_py","","",30,[[["python"],["t"]],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_py","","",31,[[["python"]],["u"]]],[11,"from_py","","",31,[[["python"],["t"]],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_py","","",32,[[["python"]],["u"]]],[11,"from_py","","",32,[[["python"],["t"]],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_py","","",33,[[["python"]],["u"]]],[11,"from_py","","",33,[[["python"],["t"]],["t"]]],[11,"from","origen::core::status","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_py","","",34,[[["python"]],["u"]]],[11,"from_py","","",34,[[["python"],["t"]],["t"]]],[11,"from","origen::core::utility::location","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_py","","",35,[[["python"]],["u"]]],[11,"from_py","","",35,[[["python"],["t"]],["t"]]],[11,"from","origen::core::utility::logger","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_py","","",36,[[["python"]],["u"]]],[11,"from_py","","",36,[[["python"],["t"]],["t"]]],[11,"from","origen::core::producer","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_py","","",37,[[["python"]],["u"]]],[11,"from_py","","",37,[[["python"],["t"]],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_py","","",38,[[["python"]],["u"]]],[11,"from_py","","",38,[[["python"],["t"]],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_py","","",39,[[["python"]],["u"]]],[11,"from_py","","",39,[[["python"],["t"]],["t"]]],[11,"from","origen::core::producer::job","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_py","","",40,[[["python"]],["u"]]],[11,"from_py","","",40,[[["python"],["t"]],["t"]]],[11,"from","origen::core::tester","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_py","","",41,[[["python"]],["u"]]],[11,"from_py","","",41,[[["python"],["t"]],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_py","","",42,[[["python"]],["u"]]],[11,"from_py","","",42,[[["python"],["t"]],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_py","","",43,[[["python"]],["u"]]],[11,"from_py","","",43,[[["python"],["t"]],["t"]]],[11,"from","origen::error","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_py","","",46,[[["python"]],["u"]]],[11,"from_py","","",46,[[["python"],["t"]],["t"]]],[11,"from","origen::generator","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_py","","",47,[[["python"]],["u"]]],[11,"from_py","","",47,[[["python"],["t"]],["t"]]],[11,"from","origen::generator::ast","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_py","","",48,[[["python"]],["u"]]],[11,"from_py","","",48,[[["python"],["t"]],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_py","","",50,[[["python"]],["u"]]],[11,"from_py","","",50,[[["python"],["t"]],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_py","","",49,[[["python"]],["u"]]],[11,"from_py","","",49,[[["python"],["t"]],["t"]]],[11,"from","origen::generator::processor","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_py","","",51,[[["python"]],["u"]]],[11,"from_py","","",51,[[["python"],["t"]],["t"]]],[11,"from","origen::generator::processors","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_py","","",53,[[["python"]],["u"]]],[11,"from_py","","",53,[[["python"],["t"]],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_py","","",54,[[["python"]],["u"]]],[11,"from_py","","",54,[[["python"],["t"]],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_py","","",55,[[["python"]],["u"]]],[11,"from_py","","",55,[[["python"],["t"]],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_py","","",56,[[["python"]],["u"]]],[11,"from_py","","",56,[[["python"],["t"]],["t"]]],[11,"from","origen::generator::stil","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_py","","",57,[[["python"]],["u"]]],[11,"from_py","","",57,[[["python"],["t"]],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_py","","",58,[[["python"]],["u"]]],[11,"from_py","","",58,[[["python"],["t"]],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_py","","",59,[[["python"]],["u"]]],[11,"from_py","","",59,[[["python"],["t"]],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_py","","",60,[[["python"]],["u"]]],[11,"from_py","","",60,[[["python"],["t"]],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_py","","",61,[[["python"]],["u"]]],[11,"from_py","","",61,[[["python"],["t"]],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_py","","",62,[[["python"]],["u"]]],[11,"from_py","","",62,[[["python"],["t"]],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_py","","",63,[[["python"]],["u"]]],[11,"from_py","","",63,[[["python"],["t"]],["t"]]],[11,"from","origen::services","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_py","","",66,[[["python"]],["u"]]],[11,"from_py","","",66,[[["python"],["t"]],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_py","","",64,[[["python"]],["u"]]],[11,"from_py","","",64,[[["python"],["t"]],["t"]]],[11,"from","origen::services::jtag","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_py","","",65,[[["python"]],["u"]]],[11,"from_py","","",65,[[["python"],["t"]],["t"]]],[11,"from","origen::testers","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_py","","",78,[[["python"]],["u"]]],[11,"from_py","","",78,[[["python"],["t"]],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_py","","",79,[[["python"]],["u"]]],[11,"from_py","","",79,[[["python"],["t"]],["t"]]],[11,"from","origen::testers::simulator","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_py","","",80,[[["python"]],["u"]]],[11,"from_py","","",80,[[["python"],["t"]],["t"]]],[11,"from","origen::testers::v93k","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_py","","",81,[[["python"]],["u"]]],[11,"from_py","","",81,[[["python"],["t"]],["t"]]],[11,"clear_timeset","origen::testers::simulator","",80,[[["self"],["node"]],[["result",["error"]],["error"]]]],[11,"set_timeset","","",80,[[["self"],["usize"],["node"]],[["result",["error"]],["error"]]]],[11,"cycle","","",80,[[["u32"],["node"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cc","","",80,[[["str"],["node"],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"cycle","origen::testers","",79,[[["u32"],["node"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cc","","",79,[[["str"],["node"],["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"name","origen::testers::simulator","",80,[[["self"]],["string"]]],[11,"clone","","",80,[[["self"]],[["box",["testerapi"]],["testerapi"]]]],[11,"run","","",80,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"name","origen::testers::v93k","",81,[[["self"]],["string"]]],[11,"clone","","",81,[[["self"]],[["box",["testerapi"]],["testerapi"]]]],[11,"run","","",81,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"preprocess","","",81,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"name","origen::testers","",78,[[["self"]],["string"]]],[11,"clone","","",78,[[["self"]],[["box",["testerapi"]],["testerapi"]]]],[11,"run","","",78,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"name","","",79,[[["self"]],["string"]]],[11,"clone","","",79,[[["self"]],[["box",["testerapi"]],["testerapi"]]]],[11,"run","","",79,[[["self"],["node"]],[["node"],["result",["node"]]]]],[11,"on_node","origen::generator::processors","",53,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_end_of_block","","",53,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_node","","",54,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_node","","",55,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_node","","",56,[[["self"],["node"]],[["return"],["result",["return"]]]]],[11,"on_node","origen::testers::v93k","",81,[[["self"],["node"]],[["result",["return"]],["return"]]]],[11,"on_node","origen::testers","",78,[[["self"],["node"]],[["result",["return"]],["return"]]]],[11,"on_node","","",79,[[["self"],["node"]],[["result",["return"]],["return"]]]],[11,"from","origen::error","",46,[[["error"]],["self"]]],[11,"from","","",46,[[["lookuperror",["varerror"]],["varerror"]],["self"]]],[11,"next_back","origen::core::model::registers::register","",77,[[["self"]],[["summaryfield"],["option",["summaryfield"]]]]],[11,"next","origen::core::file_handler","",5,[[["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[11,"next","origen::core::model::registers::bit_collection","",19,[[["self"]],[["bit"],["option",["bit"]]]]],[11,"next","origen::core::model::registers::register","",77,[[["self"]],[["summaryfield"],["option",["summaryfield"]]]]],[11,"clone","origen::core::file_handler","",4,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["filehandler"]]],[11,"clone","origen::core::model::pins::pin","",9,[[["self"]],["pinactions"]]],[11,"clone","","",10,[[["self"]],["pinroles"]]],[11,"clone","","",8,[[["self"]],["pin"]]],[11,"clone","origen::core::model::pins::pin_collection","",11,[[["self"]],["pincollection"]]],[11,"clone","origen::core::model::pins::pin_group","",12,[[["self"]],["pingroup"]]],[11,"clone","origen::core::model::pins::pin_header","",13,[[["self"]],["pinheader"]]],[11,"clone","origen::core::model::pins","",7,[[["self"]],["endianness"]]],[11,"clone","","",14,[[["self"]],["statetracker"]]],[11,"clone","origen::core::model::registers::bit_collection","",19,[[["self"]],["bitcollection"]]],[11,"clone","origen::core::model::registers","",15,[[["self"]],["accesstype"]]],[11,"clone","","",16,[[["self"]],["bitorder"]]],[11,"clone","origen::core::model::timesets::timeset","",28,[[["self"]],["timeset"]]],[11,"clone","","",29,[[["self"]],["wavetable"]]],[11,"clone","","",30,[[["self"]],["wavegroup"]]],[11,"clone","","",31,[[["self"]],["wave"]]],[11,"clone","","",33,[[["self"]],["eventactions"]]],[11,"clone","","",32,[[["self"]],["event"]]],[11,"clone","origen::core::utility::location","",35,[[["self"]],["location"]]],[11,"clone","origen::core::tester","",43,[[["self"]],["testersource"]]],[11,"clone","origen::generator::ast","",50,[[["self"]],["ast"]]],[11,"clone","","",48,[[["self"]],["node"]]],[11,"clone","","",49,[[["self"]],["attrs"]]],[11,"clone","origen::generator::stil","",58,[[["self"]],["signaltype"]]],[11,"clone","","",59,[[["self"]],["termination"]]],[11,"clone","","",60,[[["self"]],["state"]]],[11,"clone","","",61,[[["self"]],["base"]]],[11,"clone","","",62,[[["self"]],["alignment"]]],[11,"clone","","",63,[[["self"]],["selector"]]],[11,"clone","origen::generator","",47,[[["self"]],["testmanager"]]],[11,"clone","origen::services::jtag","",65,[[["self"]],["service"]]],[11,"clone","origen::testers::simulator","",80,[[["self"]],["renderer"]]],[11,"clone","origen::testers::v93k","",81,[[["self"]],["renderer"]]],[11,"clone","origen::testers","",78,[[["self"]],["dummyrenderer"]]],[11,"clone","","",79,[[["self"]],["dummyrendererwithinterceptors"]]],[11,"default","origen::core::application::config","",1,[[],["config"]]],[11,"default","origen::core::config","",2,[[],["config"]]],[11,"default","origen::core::model::pins::pin","",8,[[],["pin"]]],[11,"default","origen::core::model::registers::address_block","",17,[[],["addressblock"]]],[11,"default","origen::core::model::registers::bit_collection","",19,[[],["bitcollection"]]],[11,"default","origen::core::model::registers::memory_map","",24,[[],["memorymap"]]],[11,"default","origen::core::model::registers::register","",25,[[],["register"]]],[11,"default","origen::core::model::registers::register_file","",26,[[],["registerfile"]]],[11,"default","origen::core::model::timesets::timeset","",28,[[],["self"]]],[11,"default","origen::core::status","",34,[[],["status"]]],[11,"default","origen::testers::simulator","",80,[[],["self"]]],[11,"default","origen::testers::v93k","",81,[[],["self"]]],[11,"default","origen::testers","",78,[[],["self"]]],[11,"default","","",79,[[],["self"]]],[11,"eq","origen::core::model::pins::pin","",9,[[["pinactions"],["self"]],["bool"]]],[11,"eq","origen::core::model::registers","",15,[[["accesstype"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["bitorder"]],["bool"]]],[11,"eq","origen::core::tester","",43,[[["self"],["testersource"]],["bool"]]],[11,"eq","","",45,[[["self"],["testersource"]],["bool"]]],[11,"eq","origen::generator::ast","",50,[[["self"],["node"]],["bool"]]],[11,"eq","","",50,[[["test"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["testmanager"]],["bool"]]],[11,"eq","","",48,[[["self"],["node"]],["bool"]]],[11,"ne","","",48,[[["self"],["node"]],["bool"]]],[11,"eq","","",48,[[["self"],["ast"]],["bool"]]],[11,"eq","","",49,[[["self"],["attrs"]],["bool"]]],[11,"ne","","",49,[[["self"],["attrs"]],["bool"]]],[11,"eq","origen::generator::stil","",58,[[["self"],["signaltype"]],["bool"]]],[11,"eq","","",59,[[["termination"],["self"]],["bool"]]],[11,"eq","","",60,[[["state"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["base"]],["bool"]]],[11,"eq","","",62,[[["alignment"],["self"]],["bool"]]],[11,"eq","","",63,[[["selector"],["self"]],["bool"]]],[11,"eq","origen::generator","",47,[[["self"],["ast"]],["bool"]]],[11,"eq","","",47,[[["self"],["node"]],["bool"]]],[11,"eq","origen","",75,[[["self"],["ast"]],["bool"]]],[11,"eq","","",75,[[["self"],["node"]],["bool"]]],[11,"deref","origen::core::config","",76,[[["self"]],["config"]]],[11,"deref","origen","",67,[[["self"]],["status"]]],[11,"deref","","",68,[[["self"]],["origenconfig"]]],[11,"deref","","",69,[[["self"]],["mutex"]]],[11,"deref","","",70,[[["self"]],["logger"]]],[11,"deref","","",71,[[["self"]],["mutex"]]],[11,"deref","","",72,[[["self"]],["mutex"]]],[11,"deref","","",73,[[["self"]],["mutex"]]],[11,"deref","","",74,[[["self"]],["mutex"]]],[11,"deref","","",75,[[["self"]],["testmanager"]]],[11,"fmt","origen::core::application::config","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::config","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::dut","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::file_handler","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::pins::pin","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::pins::pin_collection","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::pins::pin_group","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::pins::pin_header","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::pins","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::address_block","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::bit","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::bit_collection","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::field","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::memory_map","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::register","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers::register_file","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::registers","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model::timesets::timeset","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::model","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::utility::location","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::core::tester","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::error","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::generator::ast","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::generator::stil","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::generator","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","origen::services::jtag","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::services","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::testers::simulator","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::testers::v93k","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen::testers","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","origen","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","origen::core::model::registers","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","origen::error","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","origen::generator::ast","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","origen::generator","",47,[[["self"],["formatter"]],["result"]]],[11,"try_from","origen::core::model::pins::pin","",9,[[["u8"]],["result"]]],[11,"from_str","origen::core::model::registers","",15,[[["str"]],["result"]]],[11,"from_str","","",16,[[["str"]],["result"]]],[11,"from_str","origen::generator::stil","",58,[[["str"]],["result"]]],[11,"from_str","","",59,[[["str"]],["result"]]],[11,"from_str","","",60,[[["str"]],["result"]]],[11,"from_str","","",61,[[["str"]],["result"]]],[11,"from_str","","",62,[[["str"]],["result"]]],[11,"from_str","","",63,[[["str"]],["result"]]],[11,"description","origen::error","",46,[[["self"]],["str"]]],[11,"initialize","origen::core::config","",76,[[["self"]]]],[11,"initialize","origen","",67,[[["self"]]]],[11,"initialize","","",68,[[["self"]]]],[11,"initialize","","",69,[[["self"]]]],[11,"initialize","","",70,[[["self"]]]],[11,"initialize","","",71,[[["self"]]]],[11,"initialize","","",72,[[["self"]]]],[11,"initialize","","",73,[[["self"]]]],[11,"initialize","","",74,[[["self"]]]],[11,"initialize","","",75,[[["self"]]]],[11,"serialize","origen::core::model::pins::pin","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","origen::core::utility::location","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","origen::generator::ast","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","origen::generator::stil","",58,[[["self"],["__s"]],["result"]]],[11,"serialize","","",59,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"serialize","","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","","",63,[[["self"],["__s"]],["result"]]],[11,"deserialize","origen::core::application::config","",1,[[["__d"]],["result"]]],[11,"deserialize","origen::core::config","",2,[[["__d"]],["result"]]],[11,"deserialize","origen::core::model::pins::pin","",9,[[["__d"]],["result"]]],[11,"deserialize","origen::core::utility::location","",35,[[["__d"]],["result"]]]],"p":[[4,"Value"],[3,"Config"],[3,"Config"],[3,"Dut"],[3,"File"],[3,"FileHandler"],[3,"Model"],[4,"Endianness"],[3,"Pin"],[4,"PinActions"],[4,"PinRoles"],[3,"PinCollection"],[3,"PinGroup"],[3,"PinHeader"],[3,"StateTracker"],[4,"AccessType"],[4,"BitOrder"],[3,"AddressBlock"],[3,"Bit"],[3,"BitCollection"],[3,"Field"],[3,"SummaryField"],[3,"Reset"],[3,"EnumeratedValue"],[3,"MemoryMap"],[3,"Register"],[3,"RegisterFile"],[3,"SimpleTimeset"],[3,"Timeset"],[3,"Wavetable"],[3,"WaveGroup"],[3,"Wave"],[3,"Event"],[4,"EventActions"],[3,"Status"],[3,"Location"],[3,"Logger"],[3,"Producer"],[4,"OptionType"],[4,"JobType"],[3,"Job"],[3,"Tester"],[3,"RenderStatus"],[4,"TesterSource"],[8,"Interceptor"],[8,"TesterAPI"],[3,"Error"],[3,"TestManager"],[3,"Node"],[4,"Attrs"],[3,"AST"],[4,"Return"],[8,"Processor"],[3,"CycleCombiner"],[3,"PinActionCombiner"],[3,"ToString"],[3,"UpcaseComments"],[3,"STIL"],[4,"SignalType"],[4,"Termination"],[4,"State"],[4,"Base"],[4,"Alignment"],[4,"Selector"],[4,"Service"],[3,"Service"],[3,"Services"],[3,"STATUS"],[3,"ORIGEN_CONFIG"],[3,"APPLICATION_CONFIG"],[3,"LOGGER"],[3,"DUT"],[3,"TESTER"],[3,"PRODUCER"],[3,"SERVICES"],[3,"TEST"],[3,"CONFIG"],[3,"RegisterFieldIterator"],[3,"DummyRenderer"],[3,"DummyRendererWithInterceptors"],[3,"Renderer"],[3,"Renderer"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);