var searchIndex = JSON.parse('{\
"meta":{"doc":"","i":[[24,"IdGetters","meta","",null,null]],"p":[]},\
"origen":{"doc":"","i":[[3,"STATUS","origen","Provides status information derived from the runtime…",null,null],[3,"ORIGEN_CONFIG","","Provides configuration information derived from…",null,null],[3,"LOGGER","","",null,null],[3,"DUT","","The current device model, containing all metadata about…",null,null],[3,"TESTER","","The global tester model.",null,null],[3,"PRODUCER","","Producer",null,null],[3,"SERVICES","","Services owned by the current DUT, stored as a separate…",null,null],[3,"TEST","","Storage for the current test (pattern)",null,null],[3,"INTERFACE","","Storage for the current program generation run, can…",null,null],[3,"USER","","Provides info about the current user",null,null],[4,"Value","","",null,null],[13,"Bits","","",0,null],[13,"Data","","",0,null],[5,"initialize","","This is called immediately upon Origen booting",null,[[["option",4]]]],[5,"app","","",null,[[],[["option",4],["application",3]]]],[5,"dut","","",null,[[],[["dut",3],["mutexguard",3]]]],[5,"tester","","",null,[[],[["mutexguard",3],["tester",3]]]],[5,"producer","","",null,[[],[["mutexguard",3],["producer",3]]]],[5,"with_current_job","","Execute the given function with a reference to the current…",null,[[],["result",6]]],[5,"with_current_job_mut","","Execute the given function with a mutable reference to the…",null,[[],["result",6]]],[5,"services","","",null,[[],[["mutexguard",3],["services",3]]]],[5,"clean_mode","","Sanitizes the given mode string and returns it, but will…",null,[[],["string",3]]],[5,"prepare_for_target_load","","This will be called immediately before loading a fresh set…",null,[[]]],[5,"start_new_test","","Clears the current test (pattern) AST and starts a new…",null,[[["option",4],["string",3]]]],[0,"macros","","",null,null],[0,"core","","",null,null],[0,"application","origen::core","",null,null],[3,"Application","origen::core::application","Represents the current application, an instance of this is…",null,null],[12,"root","","The full file system path to the application root (when…",1,null],[0,"config","","",null,null],[3,"Config","origen::core::application::config","",null,null],[12,"name","","",2,null],[12,"target","","",2,null],[12,"mode","","",2,null],[12,"output_directory","","Don\'t use this unless you know what you\'re doing, use…",2,null],[12,"reference_directory","","Don\'t use this unless you know what you\'re doing, use…",2,null],[12,"website_output_directory","","",2,null],[12,"website_source_directory","","",2,null],[12,"website_release_location","","",2,null],[12,"website_release_name","","",2,null],[12,"root","","",2,null],[11,"refresh","","",2,[[]]],[11,"build","","Builds a new config from all application.toml files found…",2,[[["path",3]],["config",3]]],[0,"target","origen::core::application","A default target/env for an application can be set by…",null,null],[5,"clean_name","origen::core::application::target","Sanitizes the given target/env name and returns it, but…",null,[[],["string",3]]],[5,"matches","","Returns an array of possible target/environment files that…",null,[[],[["vec",3],["pathbuf",3]]]],[5,"get","","Gets the currently enabled targets",null,[[],[["option",4],["vec",3]]]],[5,"set","","Sets the targets, overriding any that may be present",null,[[["vec",3]]]],[5,"reset","","Resets (deletes) the target back to its default value",null,[[]]],[5,"add","","Enables additional targets in the workspace",null,[[["vec",3]]]],[5,"remove","","Disables currently enables targets in the workspace",null,[[["vec",3]]]],[5,"all","","Returns all files from the given directory",null,[[],[["vec",3],["pathbuf",3]]]],[5,"set_workspace","","Sets the given key and value (currently only a string is…",null,[[]]],[5,"set_workspace_array","","Sets an Array-of-Strings workspace variable",null,[[["vec",3],["string",3]]]],[5,"delete_val","","Deletes the given key (and its val) from…",null,[[]]],[11,"new","origen::core::application","",1,[[["pathbuf",3]],["application",3]]],[11,"version","","Returns the application version, read from…",1,[[],[["version",3],["result",6]]]],[11,"set_version","","Sets the application version by writing it out to…",1,[[["version",3]],["result",6]]],[11,"with_config","","Execute the given function with a reference to the…",1,[[],["result",6]]],[11,"with_config_mut","","Execute the given function with a reference to the…",1,[[],["result",6]]],[11,"name","","Returns the application name",1,[[],["string",3]]],[11,"app_dir","","Returns a path to the current application\'s \'app\' dir…",1,[[],["pathbuf",3]]],[11,"resolve_path","","Resolves a directory/file path relative to the…",1,[[["string",3],["option",4]],["pathbuf",3]]],[11,"_output_directory","","Don\'t use this unless you know what you\'re doing, use…",1,[[],["pathbuf",3]]],[11,"_reference_directory","","Don\'t use this unless you know what you\'re doing, use…",1,[[],["pathbuf",3]]],[11,"website_output_directory","","",1,[[],["pathbuf",3]]],[11,"website_source_directory","","",1,[[],["pathbuf",3]]],[0,"config","origen::core","Collects the main Origen configuration options from all…",null,null],[3,"CONFIG","origen::core::config","",null,null],[3,"Config","","",null,null],[12,"python_cmd","","",3,null],[12,"pkg_server","","",3,null],[12,"pkg_server_push","","",3,null],[12,"pkg_server_pull","","",3,null],[12,"some_val","","",3,null],[0,"dut","origen::core","",null,null],[3,"Dut","origen::core::dut","The DUT stores all objects associated with a particular…",null,null],[12,"name","","",4,null],[12,"models","","",4,null],[12,"bits","","",4,null],[12,"timesets","","",4,null],[12,"wavetables","","",4,null],[12,"wave_groups","","",4,null],[12,"waves","","",4,null],[12,"wave_events","","",4,null],[12,"pins","","",4,null],[12,"pin_groups","","",4,null],[12,"pin_headers","","",4,null],[12,"id_mappings","","",4,null],[12,"reg_descriptions","","Cache of descriptions parsed from reg definition files",4,null],[11,"get_timeset","","",4,[[],[["timeset",3],["option",4]]]],[11,"get_mut_timeset","","",4,[[],[["option",4],["timeset",3]]]],[11,"_get_timeset","","",4,[[],[["result",4],["timeset",3],["error",3]]]],[11,"_get_mut_timeset","","",4,[[],[["result",4],["error",3],["timeset",3]]]],[11,"_get_cloned_timeset","","",4,[[],[["result",4],["timeset",3],["error",3]]]],[11,"get_wavetable","","",4,[[],[["wavetable",3],["option",4]]]],[11,"get_mut_wavetable","","",4,[[],[["wavetable",3],["option",4]]]],[11,"_get_wavetable","","",4,[[],[["wavetable",3],["result",4],["error",3]]]],[11,"_get_mut_wavetable","","",4,[[],[["result",4],["wavetable",3],["error",3]]]],[11,"_get_cloned_wavetable","","",4,[[],[["result",4],["wavetable",3],["error",3]]]],[11,"get_wave_group","","",4,[[],[["option",4],["wavegroup",3]]]],[11,"get_mut_wave_group","","",4,[[],[["wavegroup",3],["option",4]]]],[11,"_get_wave_group","","",4,[[],[["result",4],["wavegroup",3],["error",3]]]],[11,"_get_mut_wave_group","","",4,[[],[["wavegroup",3],["result",4],["error",3]]]],[11,"_get_cloned_wave_group","","",4,[[],[["wavegroup",3],["result",4],["error",3]]]],[11,"get_wave","","",4,[[],[["option",4],["wave",3]]]],[11,"get_mut_wave","","",4,[[],[["wave",3],["option",4]]]],[11,"_get_wave","","",4,[[],[["error",3],["result",4],["wave",3]]]],[11,"_get_mut_wave","","",4,[[],[["wave",3],["result",4],["error",3]]]],[11,"_get_cloned_wave","","",4,[[],[["wave",3],["result",4],["error",3]]]],[11,"get_event","","",4,[[],[["event",3],["option",4]]]],[11,"get_mut_event","","",4,[[],[["option",4],["event",3]]]],[11,"_get_event","","",4,[[],[["error",3],["event",3],["result",4]]]],[11,"_get_mut_event","","",4,[[],[["event",3],["result",4],["error",3]]]],[11,"_get_cloned_event","","",4,[[],[["event",3],["result",4],["error",3]]]],[11,"get_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"get_mut_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"_get_pin","","",4,[[],[["result",4],["pin",3],["error",3]]]],[11,"_get_mut_pin","","",4,[[],[["error",3],["result",4],["pin",3]]]],[11,"_get_cloned_pin","","",4,[[],[["error",3],["result",4],["pin",3]]]],[11,"get_pin_group","","",4,[[],[["option",4],["pingroup",3]]]],[11,"get_mut_pin_group","","",4,[[],[["pingroup",3],["option",4]]]],[11,"_get_pin_group","","",4,[[],[["pingroup",3],["result",4],["error",3]]]],[11,"_get_mut_pin_group","","",4,[[],[["result",4],["pingroup",3],["error",3]]]],[11,"_get_cloned_pin_group","","",4,[[],[["result",4],["pingroup",3],["error",3]]]],[11,"get_pin_header","","",4,[[],[["option",4],["pinheader",3]]]],[11,"get_mut_pin_header","","",4,[[],[["option",4],["pinheader",3]]]],[11,"_get_pin_header","","",4,[[],[["pinheader",3],["result",4],["error",3]]]],[11,"_get_mut_pin_header","","",4,[[],[["pinheader",3],["error",3],["result",4]]]],[11,"_get_cloned_pin_header","","",4,[[],[["result",4],["error",3],["pinheader",3]]]],[11,"new","","",4,[[],["dut",3]]],[11,"change","","Change the DUT, this replaces the existing mode with a…",4,[[]]],[11,"mut_model","","Returns a mutable reference to the top-level model",4,[[],["model",3]]],[11,"model","","Returns an immutable reference to the top-level model",4,[[],["model",3]]],[11,"get_mut_model","","Get a mutable reference to the model with the given ID",4,[[],[["result",6],["model",3]]]],[11,"get_model","","Get a read-only reference to the model with the given ID,…",4,[[],[["model",3],["result",6]]]],[11,"get_mut_memory_map","","Get a mutable reference to the memory map with the given ID",4,[[],[["result",6],["memorymap",3]]]],[11,"get_memory_map","","Get a read-only reference to the memory map with the given…",4,[[],[["result",6],["memorymap",3]]]],[11,"get_mut_address_block","","Get a mutable reference to the address block with the…",4,[[],[["result",6],["addressblock",3]]]],[11,"get_address_block","","Get a read-only reference to the address block with the…",4,[[],[["result",6],["addressblock",3]]]],[11,"get_mut_register_file","","Get a mutable reference to the register file with the…",4,[[],[["result",6],["registerfile",3]]]],[11,"get_register_file","","Get a read-only reference to the register file with the…",4,[[],[["registerfile",3],["result",6]]]],[11,"get_mut_register","","Get a mutable reference to the register with the given ID",4,[[],[["register",3],["result",6]]]],[11,"get_register","","Get a read-only reference to the register with the given…",4,[[],[["result",6],["register",3]]]],[11,"get_mut_bit","","Get a mutable reference to the bit with the given ID",4,[[],[["result",6],["bit",3]]]],[11,"get_bit","","Get a read-only reference to the bit with the given ID,…",4,[[],[["result",6],["bit",3]]]],[11,"create_model","","Create a new model adding it to the existing parent model…",4,[[["option",4],["option",4]],["result",6]]],[11,"create_memory_map","","",4,[[["option",4]],["result",6]]],[11,"create_address_block","","",4,[[["option",4],["option",4],["accesstype",4],["option",4]],["result",6]]],[11,"create_reg","","",4,[[["option",4],["string",3],["option",4]],["result",6]]],[11,"create_test_bit","","Creates a bit for testing bit collections and so on, does…",4,[[]]],[11,"get_reg_description","","",4,[[],[["option",4],["string",3]]]],[0,"file_handler","origen::core","The file_handler is responsible for processing the file…",null,null],[3,"File","origen::core::file_handler","",null,null],[12,"file_obj","","",5,null],[12,"path","","",5,null],[3,"FileHandler","","This is an iterator + external API for consuming the file…",null,null],[11,"create","","Creates or overrides the given file and panics if the…",5,[[["pathbuf",3]]]],[11,"open","","Attempts to open the given file for reading, returning an…",5,[[["pathbuf",3]],["result",6]]],[11,"mkdir_p","","",5,[[["path",3]]]],[11,"write","","Writes content to the underlying file and panics if the…",5,[[]]],[11,"write_ln","","",5,[[]]],[11,"new","","",6,[[],["filehandler",3]]],[11,"init","","",6,[[["vec",3],["string",3]],["result",6]]],[11,"len","","",6,[[]]],[0,"lsf","origen::core","This module is responsible for abstracting and managing…",null,null],[5,"is_running_remotely","origen::core::lsf","",null,[[]]],[0,"model","origen::core","",null,null],[3,"Model","origen::core::model","",null,null],[12,"id","","",7,null],[12,"name","","",7,null],[12,"parent_id","","The only one without a parent is the top-level DUT model",7,null],[12,"sub_blocks","","All children of this block/model, which are themselves…",7,null],[12,"memory_maps","","All registers owned by this model are arranged within…",7,null],[12,"pins","","",7,null],[12,"pin_groups","","",7,null],[12,"pin_headers","","",7,null],[12,"timesets","","",7,null],[12,"address_unit_bits","","Represents the number of bits in an address increment…",7,null],[12,"offset","","The starting address of the block expressed in…",7,null],[12,"services","","",7,null],[0,"pins","","",null,null],[3,"StateTracker","origen::core::model::pins","",null,null],[4,"Endianness","","",null,null],[13,"LittleEndian","","",8,null],[13,"BigEndian","","",8,null],[0,"pin","","",null,null],[3,"Pin","origen::core::model::pins::pin","Model for single pin.",null,null],[12,"model_id","","",9,null],[12,"id","","",9,null],[12,"name","","",9,null],[12,"data","","",9,null],[12,"action","","The pin\'s current action. If no action is desired, the pin…",9,null],[12,"reset_action","","The pin\'s initial action and state. This will be applied…",9,null],[12,"reset_data","","",9,null],[12,"aliases","","--- Meta Data ---/// Any aliases this Pin has.",9,null],[12,"role","","",9,null],[12,"metadata","","",9,null],[12,"groups","","",9,null],[4,"PinActions","","List of supported pin actions.",null,null],[13,"Drive","","",10,null],[13,"Verify","","",10,null],[13,"Capture","","",10,null],[13,"HighZ","","",10,null],[4,"PinRoles","","Available Pin Roles",null,null],[13,"Standard","","",11,null],[13,"Power","","",11,null],[13,"Ground","","",11,null],[13,"Virtual","","",11,null],[13,"Other","","",11,null],[11,"from_str","","",10,[[],[["result",4],["pinactions",4],["error",3]]]],[11,"as_str","","",10,[[]]],[11,"as_char","","",10,[[]]],[11,"as_tester_char","","",10,[[]]],[11,"drive","","",9,[[["option",4]],[["result",4],["error",3]]]],[11,"verify","","",9,[[["option",4]],[["result",4],["error",3]]]],[11,"capture","","",9,[[],[["result",4],["error",3]]]],[11,"highz","","",9,[[],[["result",4],["error",3]]]],[11,"set_data","","",9,[[],[["result",4],["error",3]]]],[11,"reset","","",9,[[]]],[11,"add_metadata_id","","",9,[[],[["result",4],["error",3]]]],[11,"get_metadata_id","","",9,[[],["option",4]]],[11,"new","","",9,[[["pinactions",4],["string",3],["option",4],["option",4]],["pin",3]]],[0,"pin_collection","origen::core::model::pins","",null,null],[3,"PinCollection","origen::core::model::pins::pin_collection","Model for a collection (or group) of pins",null,null],[12,"pin_names","","",12,null],[12,"endianness","","",12,null],[12,"mask","","",12,null],[12,"model_id","","",12,null],[11,"new","","",12,[[["vec",3],["endianness",4],["option",4]],["pincollection",3]]],[11,"len","","",12,[[]]],[11,"slice_names","","",12,[[],[["pincollection",3],["result",4],["error",3]]]],[11,"is_little_endian","","",12,[[]]],[11,"is_big_endian","","",12,[[]]],[11,"drive_pin_collection","origen::core::dut","",4,[[["pincollection",3],["option",4]],[["result",4],["error",3]]]],[11,"verify_pin_collection","","",4,[[["pincollection",3],["option",4]],[["result",4],["error",3]]]],[11,"capture_pin_collection","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[11,"highz_pin_collection","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[11,"set_pin_collection_actions","","",4,[[["pincollection",3],["option",4],["pinactions",4]],[["result",4],["error",3]]]],[11,"get_pin_collection_reset_data","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[11,"get_pin_collection_reset_actions","","",4,[[["pincollection",3]],[["error",3],["result",4],["string",3]]]],[11,"reset_pin_collection","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[11,"set_pin_collection_data","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[11,"set_pin_collection_nonsticky_mask","","",4,[[["pincollection",3]],[["result",4],["error",3]]]],[0,"pin_group","origen::core::model::pins","",null,null],[3,"PinGroup","origen::core::model::pins::pin_group","",null,null],[12,"model_id","","",13,null],[12,"id","","",13,null],[12,"name","","",13,null],[12,"pin_names","","",13,null],[12,"endianness","","",13,null],[12,"mask","","",13,null],[11,"new","","",13,[[["option",4],["endianness",4],["string",3],["vec",3]],["pingroup",3]]],[11,"len","","",13,[[]]],[11,"is_little_endian","","",13,[[]]],[11,"is_big_endian","","",13,[[]]],[11,"get_pin_group_data","origen::core::dut","",4,[[],[["result",4],["error",3]]]],[11,"get_pin_group_reset_data","","",4,[[],[["result",4],["error",3]]]],[11,"reset_pin_group","","",4,[[],[["result",4],["error",3]]]],[11,"set_pin_group_data","","",4,[[],[["result",4],["error",3]]]],[11,"resolve_pin_group_names","","",4,[[],[["result",4],["error",3],["vec",3]]]],[11,"get_pin_group_actions","","Returns the pin actions as a string. E.g.: for an 8-pin…",4,[[],[["error",3],["result",4],["string",3]]]],[11,"get_pin_group_reset_actions","","",4,[[],[["error",3],["result",4],["string",3]]]],[11,"set_pin_group_actions","","",4,[[["option",4],["option",4],["pinactions",4]],[["result",4],["error",3]]]],[11,"drive_pin_group","","",4,[[["option",4],["option",4]],[["result",4],["error",3]]]],[11,"verify_pin_group","","",4,[[["option",4],["option",4]],[["result",4],["error",3]]]],[11,"capture_pin_group","","",4,[[["option",4]],[["result",4],["error",3]]]],[11,"highz_pin_group","","",4,[[["option",4]],[["result",4],["error",3]]]],[11,"slice_pin_group","","",4,[[],[["pincollection",3],["result",4],["error",3]]]],[0,"pin_header","origen::core::model::pins","",null,null],[3,"PinHeader","origen::core::model::pins::pin_header","",null,null],[12,"model_id","","",14,null],[12,"id","","",14,null],[12,"name","","",14,null],[12,"pin_names","","",14,null],[11,"new","","",14,[[["vec",3],["string",3]]]],[11,"create_pin_header","origen::core::dut","",4,[[["vec",3],["string",3]],[["error",3],["pinheader",3],["result",4]]]],[11,"register_pin_header","origen::core::model","",7,[[["vec",3],["string",3]],[["result",4],["error",3],["pinheader",3]]]],[11,"get_pin_header_id","","",7,[[],["option",4]]],[11,"register_pin","","",7,[[["endianness",4],["pinactions",4],["option",4],["option",4],["option",4]],[["result",4],["error",3]]]],[11,"register_pin_group","","",7,[[["option",4],["endianness",4],["string",3],["vec",3]],[["result",4],["pingroup",3],["error",3]]]],[11,"get_pin_id","","",7,[[],["option",4]]],[11,"get_pin_group_id","","",7,[[],["option",4]]],[11,"add_pin","origen::core::dut","",4,[[["option",4],["endianness",4],["string",3],["option",4],["option",4]],[["result",4],["pingroup",3],["error",3]]]],[11,"add_pin_alias","","",4,[[],[["result",4],["error",3]]]],[11,"group_pins_by_name","","",4,[[["option",4],["endianness",4],["string",3],["vec",3]],[["result",4],["pingroup",3],["error",3]]]],[11,"get_pin_data","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"get_pin_reset_data","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"reset_pin_names","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"set_pin_data","","",4,[[["vec",3],["option",4]],[["result",4],["error",3]]]],[11,"get_pin_actions","","",4,[[["vec",3]],[["error",3],["result",4],["string",3]]]],[11,"get_pin_reset_actions","","",4,[[["vec",3]],[["error",3],["result",4],["string",3]]]],[11,"set_pin_actions","","",4,[[["pinactions",4],["vec",3],["option",4],["option",4]],[["result",4],["error",3]]]],[11,"drive_pins","","",4,[[["vec",3],["option",4],["option",4]],[["result",4],["error",3]]]],[11,"verify_pins","","",4,[[["vec",3],["option",4],["option",4]],[["result",4],["error",3]]]],[11,"capture_pins","","",4,[[["vec",3],["option",4]],[["result",4],["error",3]]]],[11,"highz_pins","","",4,[[["vec",3],["option",4]],[["result",4],["error",3]]]],[11,"verify_names","","Given a group/collection of pin names, verify: * Each pin…",4,[[["vec",3]],[["result",4],["error",3],["vec",3]]]],[11,"collect","","",4,[[["option",4],["endianness",4],["string",3],["vec",3]],[["pincollection",3],["result",4],["error",3]]]],[11,"pin_names_contain","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"find_in_names","","",4,[[["vec",3]],[["result",4],["option",4],["error",3]]]],[11,"index_of","","Given a pin or alias name, finds either its name or alias…",4,[[],[["result",4],["option",4],["error",3]]]],[11,"resolve_to_physical_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"resolve_to_mut_physical_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"_resolve_to_physical_pin","","",4,[[],[["pin",3],["result",4],["error",3]]]],[11,"resolve_pin_names","","",4,[[["vec",3]],[["result",4],["error",3],["vec",3]]]],[11,"data_fits_in_pins","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"verify_data_fits","","",4,[[],[["result",4],["error",3]]]],[11,"verify_action_string_fits","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"pin_group_contains","","Given a pin name, check if the pin or any of its aliases…",4,[[],[["result",4],["error",3]]]],[11,"contains","","",4,[[]]],[11,"_contains","","",4,[[]]],[11,"_resolve_group_to_physical_pins","","",4,[[],[["result",4],["error",3],["vec",3]]]],[11,"new","origen::core::model::pins","Creates a new state storage container. Creating a new…",15,[[["option",4],["dut",3]]]],[11,"update","","Given a physical pin name, action, and data, updates the…",15,[[["option",4],["pinactions",4],["option",4],["dut",3]],[["result",4],["error",3]]]],[11,"as_strings","","Processes the current state into a vector of \'state…",15,[[],[["result",4],["error",3],["vec",3]]]],[11,"names","","",15,[[],[["string",3],["vec",3]]]],[0,"registers","origen::core::model","See section 3.5.1 in this doc for a good description of…",null,null],[4,"AccessType","origen::core::model::registers","",null,null],[13,"RO","","",16,null],[13,"RW","","",16,null],[13,"RC","","",16,null],[13,"RS","","",16,null],[13,"WRC","","",16,null],[13,"WRS","","",16,null],[13,"WC","","",16,null],[13,"WS","","",16,null],[13,"WSRC","","",16,null],[13,"WCRS","","",16,null],[13,"W1C","","",16,null],[13,"W1S","","",16,null],[13,"W1T","","",16,null],[13,"W0C","","",16,null],[13,"W0S","","",16,null],[13,"W0T","","",16,null],[13,"W1SRC","","",16,null],[13,"W1CRS","","",16,null],[13,"W0SRC","","",16,null],[13,"W0CRS","","",16,null],[13,"WO","","",16,null],[13,"WOC","","",16,null],[13,"WORZ","","",16,null],[13,"WOS","","",16,null],[13,"W1","","",16,null],[13,"WO1","","",16,null],[13,"DC","","",16,null],[13,"ROWZ","","",16,null],[13,"Unimplemented","","",16,null],[4,"BitOrder","","",null,null],[13,"LSB0","","",17,null],[13,"MSB0","","",17,null],[0,"address_block","","",null,null],[3,"AddressBlock","origen::core::model::registers::address_block","Represents a single, contiguous block of memory in a…",null,null],[12,"id","","",18,null],[12,"memory_map_id","","",18,null],[12,"name","","",18,null],[12,"offset","","The starting address of the address block expressed in…",18,null],[12,"range","","The number of addressable units in the address block.",18,null],[12,"width","","The maximum number of bits that can be accessed by a…",18,null],[12,"access","","",18,null],[12,"registers","","",18,null],[12,"register_files","","",18,null],[11,"model","","Returns an immutable reference to the parent model",18,[[["mutexguard",3]],[["model",3],["origenresult",6]]]],[11,"memory_map","","Returns an immutable reference to the parent memory map",18,[[["mutexguard",3]],[["origenresult",6],["memorymap",3]]]],[11,"address_unit_bits","","Returns the address_unit_bits size from the parent memory…",18,[[["mutexguard",3]],["origenresult",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",18,[[["mutexguard",3]],["origenresult",6]]],[11,"friendly_path","","Returns a path to this address_block like…",18,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[11,"get_register_id","","Get the ID from the given register name",18,[[],["origenresult",6]]],[11,"console_display","","",18,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[0,"bit","origen::core::model::registers","",null,null],[3,"Bit","origen::core::model::registers::bit","",null,null],[12,"id","","",19,null],[12,"register_id","","",19,null],[12,"overlay","","",19,null],[12,"overlay_snapshots","","",19,null],[12,"state","","The individual bits mean the following: 0 - Data value 1 -…",19,null],[12,"device_state","","The state we think the device has, only bits [2:0] are…",19,null],[12,"state_snapshots","","The state of the bit at the last reset",19,null],[12,"access","","",19,null],[12,"position","","",19,null],[17,"ZERO","","",null,null],[17,"ONE","","",null,null],[17,"UNDEFINED","","",null,null],[11,"snapshot","","",19,[[]]],[11,"is_changed","","",19,[[],["result",6]]],[11,"rollback","","",19,[[],["result",6]]],[11,"copy_state","","Copies the state (data and flags) and overlay attributes…",19,[[["bit",3]]]],[11,"clear_flags","","",19,[[]]],[11,"clear_verify_flag","","",19,[[]]],[11,"capture","","",19,[[]]],[11,"set_undefined","","Sets the bit\'s data value to X",19,[[]]],[11,"set_hiz","","Sets the bit\'s data value to Z",19,[[]]],[11,"has_known_value","","Returns true if not in X or Z state",19,[[]]],[11,"is_x","","",19,[[]]],[11,"is_z","","",19,[[]]],[11,"is_to_be_verified","","",19,[[]]],[11,"is_to_be_captured","","",19,[[]]],[11,"has_overlay","","",19,[[]]],[11,"is_readable","","",19,[[]]],[11,"is_writeable","","",19,[[]]],[11,"is_writable","","",19,[[]]],[11,"is_modified_since_reset","","",19,[[]]],[11,"state_char","","",19,[[]]],[11,"verify","","",19,[[],["result",6]]],[11,"is_update_required","","Returns true if the current bit state differs from the…",19,[[]]],[11,"update_device_state","","",19,[[],["result",6]]],[11,"data","","",19,[[],["result",6]]],[11,"set_data","","",19,[[]]],[11,"force_data","","Like set_data(), but will force the data value in the…",19,[[]]],[11,"get_overlay","","",19,[[],[["option",4],["string",3]]]],[11,"set_overlay","","",19,[[["option",4]]]],[11,"verify_enable_flag","","",19,[[]]],[11,"capture_enable_flag","","",19,[[]]],[11,"overlay_enable_flag","","",19,[[]]],[11,"reset","","Applies the given state value, making it the new reset…",19,[[]]],[0,"bit_collection","origen::core::model::registers","",null,null],[3,"BitCollection","origen::core::model::registers::bit_collection","",null,null],[12,"reg_id","","Optionally contains the ID of the reg that owns the bits",20,null],[12,"field","","Optionally contains the name of the field that owns the bits",20,null],[12,"whole_reg","","When true the BitCollection contains all bits of the…",20,null],[12,"whole_field","","When true the BitCollection contains all bits of the field…",20,null],[12,"bits","","",20,null],[12,"i","","Iterator index and vars",20,null],[12,"shift_left","","",20,null],[12,"shift_logical","","",20,null],[11,"for_bit_ids","","Creates a BitCollection from the given collection of bit…",20,[[["vec",3],["mutexguard",3]],["bitcollection",3]]],[11,"for_register","","Creates a BitCollection for the given register, normally…",20,[[["mutexguard",3],["register",3]],["bitcollection",3]]],[11,"for_field","","Creates a BitCollection for the given register field,…",20,[[["vec",3],["mutexguard",3]],["bitcollection",3]]],[11,"sort_bits","","Sort the bits in the collection by their position property",20,[[]]],[11,"position","","If the BitCollection contains > 1 bits, then this will…",20,[[]]],[11,"access","","Returns the access attribute of the BitCollection. This…",20,[[],[["result",6],["accesstype",4]]]],[11,"set_data","","",20,[[["biguint",3]]]],[11,"data","","Returns the data value of the BitCollection. This will…",20,[[],[["biguint",3],["result",6]]]],[11,"get_overlay","","Returns the overlay value of the BitCollection. This will…",20,[[],[["option",4],["result",6]]]],[11,"set_overlay","","Set the overlay value of the BitCollection.",20,[[["option",4]],["bitcollection",3]]],[11,"has_known_value","","Returns true if no contained bits are in X or Z state",20,[[]]],[11,"range","","Returns a new BitCollection containing the subset of bits…",20,[[],["bitcollection",3]]],[11,"clear_verify_flag","","Clears the verify flag on all bits in the collection",20,[[],["bitcollection",3]]],[11,"is_to_be_verified","","Returns true if any bits in the collection has their…",20,[[]]],[11,"is_to_be_captured","","Returns true if any bits in the collection has their…",20,[[]]],[11,"has_overlay","","Returns true if any bits in the collection has an overlay…",20,[[]]],[11,"is_writeable","","Returns true if any bits in the collection is writeable",20,[[]]],[11,"is_writable","","",20,[[]]],[11,"is_readable","","Returns true if any bits in the collection is readable",20,[[]]],[11,"is_update_required","","",20,[[]]],[11,"update_device_state","","Set the collection\'s device_state field to be the same as…",20,[[],[["bitcollection",3],["result",6]]]],[11,"clear_flags","","",20,[[],["bitcollection",3]]],[11,"capture","","",20,[[],["bitcollection",3]]],[11,"set_undefined","","",20,[[],["bitcollection",3]]],[11,"reset","","Resets the bits if the collection is for a whole bit field…",20,[[["mutexguard",3]],[["bitcollection",3],["result",6]]]],[11,"reset_val","","Returns the data value of the given reset type. This will…",20,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"is_modified_since_reset","","Returns true if the data value of any of the bits has been…",20,[[]]],[11,"is_in_reset_state","","Returns true if the data value of all bits matches that of…",20,[[["option",4],["mutexguard",3]],["result",6]]],[11,"snapshot","","Take a snapshot of the current state of all bits, the…",20,[[],[["bitcollection",3],["result",6]]]],[11,"is_changed","","Returns true if the state of any bits has changed vs. the…",20,[[],["result",6]]],[11,"rollback","","Rollback the state of all bits to the given snapshot. An…",20,[[],[["bitcollection",3],["result",6]]]],[11,"verify","","Trigger a verify operation on the register",20,[[["option",4],["biguint",3],["mutexguard",3]],[["result",6],["option",4]]]],[11,"set_verify_flag","","Equivalent to calling verify() but without invoking a…",20,[[["option",4],["biguint",3]],[["bitcollection",3],["result",6]]]],[11,"write","","Trigger a write operation on the register",20,[[["mutexguard",3]],[["result",6],["option",4]]]],[11,"reg","","Returns the Register object associated with the…",20,[[["mutexguard",3]],[["register",3],["result",6]]]],[11,"field","","Returns the bit Field object associated with the…",20,[[["mutexguard",3]],[["field",3],["result",6]]]],[11,"shift_left","","",20,[[],["result",6]]],[11,"shift_right","","",20,[[],["result",6]]],[11,"shift_out_left","","",20,[[],["bitcollection",3]]],[11,"shift_out_right","","",20,[[],["bitcollection",3]]],[11,"len","","",20,[[]]],[11,"verify_enables","","",20,[[],["biguint",3]]],[11,"capture_enables","","",20,[[],["biguint",3]]],[11,"overlay_enables","","",20,[[],["biguint",3]]],[11,"status_str","","",20,[[],[["result",6],["string",3]]]],[0,"field","origen::core::model::registers","",null,null],[3,"Field","origen::core::model::registers::field","Named collections of bits within a register",null,null],[12,"reg_id","","",21,null],[12,"name","","",21,null],[12,"description","","",21,null],[12,"offset","","Offset from the start of the register in bits.",21,null],[12,"width","","Width of the field in bits.",21,null],[12,"access","","",21,null],[12,"resets","","Contains any reset values defined for this field, if not…",21,null],[12,"enums","","",21,null],[12,"related_fields","","",21,null],[12,"filename","","The (Python) source file where the field was defined",21,null],[12,"lineno","","The (Python) source file line number where the field was…",21,null],[3,"SummaryField","","A lightweight version of a Field that is returned by the…",null,null],[12,"reg_id","","",22,null],[12,"name","","",22,null],[12,"offset","","",22,null],[12,"width","","Width of the field in bits.",22,null],[12,"access","","",22,null],[12,"spacer","","",22,null],[3,"Reset","","",null,null],[12,"value","","",23,null],[12,"mask","","",23,null],[3,"EnumeratedValue","","",null,null],[12,"name","","",24,null],[12,"description","","",24,null],[12,"value","","",24,null],[11,"add_enum","","",21,[[["biguint",3]],[["result",6],["enumeratedvalue",3]]]],[11,"add_reset","","",21,[[["biguint",3],["option",4]],[["reset",3],["result",6]]]],[11,"bit_ids","","Returns the bit IDs associated with the field, wrapped in…",21,[[["mutexguard",3]],["vec",3]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",21,[[["mutexguard",3]],["bitcollection",3]]],[11,"reset","","Applies the given reset type, if the field doesn\'t have a…",21,[[["mutexguard",3]]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",22,[[["mutexguard",3]],["bitcollection",3]]],[0,"memory_map","origen::core::model::registers","",null,null],[3,"MemoryMap","origen::core::model::registers::memory_map","",null,null],[12,"name","","",25,null],[12,"id","","",25,null],[12,"model_id","","",25,null],[12,"address_unit_bits","","Represents the number of bits of an address increment…",25,null],[12,"address_blocks","","",25,null],[11,"get_address_block_id","","Get the ID from the given address block name",25,[[],["origenresult",6]]],[11,"friendly_path","","Returns a path to this memory_map like…",25,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[11,"model","","Returns an immutable reference to the parent model",25,[[["mutexguard",3]],[["model",3],["origenresult",6]]]],[11,"console_display","","",25,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[0,"register","origen::core::model::registers","",null,null],[3,"Register","origen::core::model::registers::register","",null,null],[12,"id","","",26,null],[12,"address_block_id","","",26,null],[12,"register_file_id","","",26,null],[12,"name","","",26,null],[12,"description","","",26,null],[12,"dim","","The dimension of the register, defaults to 1.",26,null],[12,"offset","","Address offset from the start of the parent address block…",26,null],[12,"size","","The size of the register in bits.",26,null],[12,"access","","",26,null],[12,"fields","","",26,null],[12,"bit_ids","","Contains the IDs of all bits owned by the register",26,null],[12,"bit_order","","",26,null],[12,"filename","","The (Python) source file from which the register was defined",26,null],[12,"lineno","","The (Python) source file line number where the register…",26,null],[3,"RegisterFieldIterator","","An iterator for a register\'s fields which yields them in…",null,null],[11,"reset_val_for_bit","","Returns the reset value of the given bit index for the…",26,[[],[["result",6],["option",4]]]],[11,"field_for_bit","","Returns the field object that owns the given bit, an error…",26,[[],[["result",6],["option",4]]]],[11,"friendly_path","","Returns a path to this register like…",26,[[["mutexguard",3]],[["result",6],["string",3]]]],[11,"model","","Returns an immutable reference to the parent model",26,[[["mutexguard",3]],[["model",3],["result",6]]]],[11,"model_path","","Returns a path reference to the register\'s…",26,[[["mutexguard",3]],[["result",6],["string",3]]]],[11,"address","","Returns the fully-resolved address taking into account all…",26,[[["option",4],["mutexguard",3]],["result",6]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register\'s…",26,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",26,[[["mutexguard",3]],["result",6]]],[11,"fields","","Returns an iterator for the register\'s fields which yields…",26,[[],["registerfielditerator",3]]],[11,"reset","","Applies the given reset type to all fields, if the fields…",26,[[["mutexguard",3]]]],[11,"console_display","","",26,[[["bitorder",4],["mutexguard",3],["option",4]],[["origenresult",6],["string",3]]]],[11,"add_field","","",26,[[["option",4],["string",3],["option",4]],[["origenresult",6],["field",3]]]],[11,"bits","","Returns all bits owned by the register, wrapped in a…",26,[[["mutexguard",3]],["bitcollection",3]]],[11,"address_block","","Returns an immutable reference to the address block object…",26,[[["mutexguard",3]],[["addressblock",3],["result",6]]]],[11,"register_file","","Returns an immutable reference to the register file object…",26,[[["mutexguard",3]],[["option",4],["result",6]]]],[0,"register_file","origen::core::model::registers","",null,null],[3,"RegisterFile","origen::core::model::registers::register_file","Represents a groups of registers within an address block.…",null,null],[12,"id","","",27,null],[12,"address_block_id","","",27,null],[12,"register_file_id","","Optional, if this register file is a child of another…",27,null],[12,"name","","",27,null],[12,"description","","",27,null],[12,"dim","","The dimension of the register, defaults to 1.",27,null],[12,"offset","","The address offset from the containing address block or…",27,null],[12,"range","","The number of addressable units in the register file.",27,null],[12,"registers","","",27,null],[12,"register_files","","",27,null],[11,"get_register_id","","Get the ID from the given register name",27,[[],["result",6]]],[11,"address_block","","Returns an immutable reference to the address block object…",27,[[["mutexguard",3]],[["addressblock",3],["result",6]]]],[11,"register_file","","Returns an immutable reference to the register file object…",27,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register…",27,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",27,[[["mutexguard",3]],["result",6]]],[11,"friendly_path","","Returns a path to this register file like…",27,[[["mutexguard",3]],[["result",6],["string",3]]]],[11,"is_readable","origen::core::model::registers","",16,[[]]],[11,"is_writeable","","",16,[[]]],[11,"is_writable","","",16,[[]]],[11,"is_unimplemented","","",16,[[]]],[0,"timesets","origen::core::model","",null,null],[0,"timeset","origen::core::model::timesets","",null,null],[3,"SimpleTimeset","origen::core::model::timesets::timeset","",null,null],[12,"name","","",28,null],[12,"period","","",28,null],[12,"default_period","","",28,null],[3,"Timeset","","",null,null],[12,"name","","",29,null],[12,"model_id","","",29,null],[12,"id","","",29,null],[12,"period_as_string","","",29,null],[12,"default_period","","",29,null],[12,"wavetable_ids","","",29,null],[3,"Wavetable","","",null,null],[12,"name","","",30,null],[12,"model_id","","",30,null],[12,"timeset_id","","",30,null],[12,"id","","",30,null],[12,"period","","",30,null],[12,"wave_group_ids","","",30,null],[3,"WaveGroup","","",null,null],[12,"model_id","","",31,null],[12,"timeset_id","","",31,null],[12,"wavetable_id","","",31,null],[12,"id","","",31,null],[12,"name","","",31,null],[12,"wave_ids","","",31,null],[12,"derived_from","","",31,null],[3,"Wave","","",null,null],[12,"model_id","","",32,null],[12,"timeset_id","","",32,null],[12,"wavetable_id","","",32,null],[12,"wave_group_id","","",32,null],[12,"wave_id","","",32,null],[12,"events","","",32,null],[12,"pins","","",32,null],[12,"indicator","","",32,null],[3,"Event","","",null,null],[12,"wavetable_id","","",33,null],[12,"wave_id","","",33,null],[12,"event_id","","",33,null],[12,"event_index","","",33,null],[12,"action","","",33,null],[12,"at","","",33,null],[12,"unit","","",33,null],[4,"EventActions","","",null,null],[13,"DriveHigh","","",34,null],[13,"DriveLow","","",34,null],[13,"VerifyHigh","","",34,null],[13,"VerifyLow","","",34,null],[13,"VerifyZ","","",34,null],[13,"HighZ","","",34,null],[13,"Capture","","",34,null],[11,"new","","",29,[[["option",4],["option",4],["box",3]]]],[11,"eval_str","","",29,[[],["string",3]]],[11,"eval","","",29,[[["option",4]],[["result",4],["error",3]]]],[11,"register_wavetable","","",29,[[],[["error",3],["wavetable",3],["result",4]]]],[11,"get_wavetable_id","","",29,[[],["option",4]]],[11,"contains_wavetable","","",29,[[]]],[11,"new","","",30,[[],[["error",3],["result",4]]]],[11,"get_wave_group_id","","",30,[[],["option",4]]],[11,"contains_wave_group","","",30,[[]]],[11,"set_period","","",30,[[["option",4],["box",3]],[["result",4],["error",3]]]],[11,"register_wave_group","","",30,[[["vec",3],["option",4]],[["wavegroup",3],["error",3],["result",4]]]],[11,"eval","","",30,[[["option",4]],[["result",4],["option",4],["error",3]]]],[11,"new_from_wavetable","","",31,[[["wavetable",3],["vec",3],["option",4]],[["error",3],["result",4]]]],[11,"register_wave","","",31,[[],[["result",4],["wave",3],["error",3]]]],[11,"get_wave_id","","",31,[[],["option",4]]],[11,"contains_wave","","",31,[[]]],[11,"get_waves_applied_to","","",31,[[["dut",3]],[["string",3],["vec",3]]]],[11,"new","","",32,[[],[["error",3],["result",4]]]],[11,"new_from_wave_group","","",32,[[["wavegroup",3]],[["error",3],["result",4]]]],[11,"apply_to","","",32,[[["vec",3],["string",3]],[["result",4],["error",3]]]],[11,"set_indicator","","",32,[[],[["result",4],["error",3]]]],[11,"get_event_id","","",32,[[],["option",4]]],[11,"push_event","","",32,[[["tostring",8],["option",4],["box",3],["string",3]],[["event",3],["error",3],["result",4]]]],[11,"from_str","","",34,[[],[["error",3],["result",4],["eventactions",4]]]],[11,"as_str","","",34,[[]]],[11,"eval","","",33,[[["option",4],["dut",3]],[["result",4],["error",3]]]],[11,"set_action","","",33,[[],[["result",4],["error",3]]]],[11,"add_timeset","origen::core::model","",7,[[["option",4],["option",4],["box",3]],[["timeset",3],["result",4],["error",3]]]],[11,"get_timeset_id","","",7,[[],["option",4]]],[11,"contains_timeset","","",7,[[]]],[11,"create_timeset","origen::core::dut","",4,[[["option",4],["option",4],["box",3]],[["timeset",3],["result",4],["error",3]]]],[11,"create_wavetable","","",4,[[],[["wavetable",3],["result",4],["error",3]]]],[11,"create_wave_group","","",4,[[["vec",3],["option",4]],[["result",4],["wavegroup",3],["error",3]]]],[11,"create_wave","","",4,[[["option",4],["vec",3]],[["error",3],["result",4],["wave",3]]]],[11,"create_event","","",4,[[["tostring",8],["option",4],["box",3],["string",3]],[["result",4],["event",3],["error",3]]]],[11,"new","origen::core::model","",7,[[["option",4],["option",4],["string",3]],["model",3]]],[11,"add_service","","",7,[[],["result",6]]],[11,"lookup","","",7,[[],[["result",6],["indexmap",3]]]],[11,"console_header","","Returns the hierarchical name of the model and the offset…",7,[[["mutexguard",3]]]],[11,"get_memory_map_id","","Get the ID for the given memory map name, throw an error…",7,[[],["result",6]]],[11,"display_path","","Returns the path to this model for displaying to a user,…",7,[[["mutexguard",3]],["string",3]]],[11,"console_display","","",7,[[["mutexguard",3]],[["result",6],["string",3]]]],[11,"parent","","Returns the parent of this model or None, normally meaning…",7,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"address","","Returns the fully resolved address of the block which is…",7,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",7,[[["mutexguard",3]],["result",6]]],[11,"friendly_path","","Returns a path to this block like \\\"dut.my_block\\\"",7,[[["mutexguard",3]],[["result",6],["string",3]]]],[0,"os","origen::core","",null,null],[5,"on_windows","origen::core::os","",null,[[]]],[5,"on_linux","","",null,[[]]],[0,"producer","origen::core","",null,null],[3,"Producer","origen::core::producer","The producer is a singleton instantiated as…",null,null],[12,"jobs","","",35,null],[12,"running","","",35,null],[12,"completed","","",35,null],[12,"queued","","",35,null],[12,"flow_generated","","Will be set to true if any flow source files (with Flow()…",35,null],[4,"OptionType","","",null,null],[13,"OptionString","","",36,null],[13,"OptionBool","","",36,null],[13,"OptionNum","","",36,null],[13,"OptionList","","",36,null],[4,"JobType","","",null,null],[13,"Generate","","",37,null],[13,"Program","","",37,null],[13,"Misc","","",37,null],[0,"job","","",null,null],[3,"Job","origen::core::producer::job","A job represents the execution of an Origen application…",null,null],[12,"command","","",38,null],[12,"results","","",38,null],[12,"id","","",38,null],[12,"files","","A stack of source files executed by the job. The first one…",38,null],[11,"source_file","","Returns the file at the root of the job or None if the job…",38,[[],[["pathbuf",3],["option",4]]]],[11,"current_file","","Returns the current file being processed by the job or…",38,[[],[["pathbuf",3],["option",4]]]],[11,"command","","Rerturns the origen command that would be run to replicate…",38,[[],["string",3]]],[11,"resolve_file_reference","","Tries to resolve a reference to a file by the following…",38,[[["path",3],["vec",3],["option",4]],[["result",6],["pathbuf",3]]]],[11,"new","origen::core::producer","",35,[[]]],[11,"create_job","","Creates a new generate job (for either a pattern or a flow)",35,[[["path",3],["option",4]],[["result",4],["job",3],["error",3]]]],[11,"current_job","","",35,[[],[["job",3],["option",4]]]],[11,"current_job_mut","","",35,[[],[["job",3],["option",4]]]],[0,"reference_files","origen::core","This manages how generated files are saved as references.…",null,null],[5,"apply_ref","origen::core::reference_files","",null,[[["path",3]],["result",6]]],[5,"apply_all_new_refs","","",null,[[],["result",6]]],[5,"apply_all_changed_refs","","",null,[[],["result",6]]],[5,"create_changed_ref","","",null,[[["path",3]],["result",6]]],[5,"create_new_ref","","",null,[[["path",3]],["result",6]]],[5,"clear_save_refs","","",null,[[],["result",6]]],[0,"status","origen::core","",null,null],[3,"Status","origen::core::status","Exposes some status information about the runtime…",null,null],[12,"is_origen_present","","When true, Origen is executing within an origen…",39,null],[12,"is_app_present","","When true, Origen is executing within an application…",39,null],[12,"app","","When Origen is executing with the context of an…",39,null],[12,"origen_wksp_root","","When Origen is running within an Origen development…",39,null],[12,"origen_version","","The Origen version in a Semver object",39,null],[12,"start_time","","",39,null],[12,"home","","The full file system path to the user\'s home directory",39,null],[12,"log_level","","",39,null],[11,"unhandled_error_count","","Returns the number of unhandled errors that have been…",39,[[]]],[11,"inc_unhandled_error_count","","",39,[[]]],[11,"set_output_dir","","Set the base output dir to the given path, it is /output…",39,[[["path",3]]]],[11,"set_reference_dir","","Set the base reference dir to the given path, it is /.ref…",39,[[["path",3]]]],[11,"output_dir","","This is the main method to get the current output…",39,[[],["pathbuf",3]]],[11,"with_output_dir","","Execute the given function with a reference to the current…",39,[[],["result",6]]],[11,"reference_dir","","This is the main method to get the current reference…",39,[[],[["option",4],["pathbuf",3]]]],[11,"with_reference_dir","","Execute the given function with a reference to the current…",39,[[],["result",6]]],[0,"term","origen::core","",null,null],[5,"green","origen::core::term","",null,[[]]],[5,"greenln","","",null,[[]]],[5,"red","","",null,[[]]],[5,"redln","","",null,[[]]],[5,"yellow","","",null,[[]]],[5,"yellowln","","",null,[[]]],[5,"grey","","",null,[[]]],[5,"greyln","","",null,[[]]],[5,"teal","","",null,[[]]],[5,"tealln","","",null,[[]]],[5,"cyan","","",null,[[]]],[5,"cyanln","","",null,[[]]],[5,"standardln","","",null,[[]]],[0,"tester","origen::core","",null,null],[3,"Tester","origen::core::tester","",null,null],[12,"target_testers","","This is the testers that have been selected by the current…",40,null],[12,"stats","","Keeps track of some stats, like how many patterns have…",40,null],[3,"Stats","","",null,null],[12,"generated_pattern_files","","",41,null],[12,"changed_pattern_files","","",41,null],[12,"new_pattern_files","","",41,null],[12,"generated_program_files","","",41,null],[12,"changed_program_files","","",41,null],[12,"new_program_files","","",41,null],[4,"TesterSource","","",null,null],[13,"Internal","","",42,null],[13,"External","","",42,null],[8,"Interceptor","","Trait which allows Rust-side implemented testers to…",null,null],[11,"cycle","","",43,[[["node",3]],["result",6]]],[11,"set_timeset","","",43,[[["node",3]],["result",6]]],[11,"clear_timeset","","",43,[[["node",3]],["result",6]]],[11,"cc","","",43,[[["node",3]],["result",6]]],[11,"set_pin_header","","",43,[[["node",3]],["result",6]]],[11,"clear_pin_header","","",43,[[["node",3]],["result",6]]],[8,"TesterAPI","","",null,null],[10,"name","","",44,[[],["string",3]]],[10,"clone","","",44,[[],[["testerapi",8],["box",3]]]],[11,"render_pattern","","Render the given AST to an output, returning the path(s)…",44,[[["node",3]],[["result",6],["vec",3]]]],[11,"to_string","","",44,[[],["string",3]]],[11,"pattern_differ","","The tester should implement this to return a differ…",44,[[["path",3]],[["option",4],["differ",3]]]],[11,"to_string","","",42,[[],["string",3]]],[11,"to_pickle","","",41,[[],["vec",3]]],[11,"new","","",40,[[]]],[11,"_current_timeset_id","","",40,[[],["result",6]]],[11,"_current_pin_header_id","","",40,[[],["result",6]]],[11,"reset","","This will be called by Origen immediately before it is…",40,[[]]],[11,"register_external_tester","","",40,[[],["result",6]]],[11,"get_timeset","","",40,[[["dut",3]],[["timeset",3],["option",4]]]],[11,"_get_timeset","","",40,[[["dut",3]],[["timeset",3],["result",6]]]],[11,"set_timeset","","",40,[[["dut",3]],["result",6]]],[11,"clear_timeset","","",40,[[],["result",6]]],[11,"get_pin_header","","",40,[[["dut",3]],[["option",4],["pinheader",3]]]],[11,"_get_pin_header","","",40,[[["dut",3]],[["result",6],["pinheader",3]]]],[11,"set_pin_header","","",40,[[["dut",3]],["result",6]]],[11,"clear_pin_header","","",40,[[],["result",6]]],[11,"issue_callback_at","","",40,[[],["result",6]]],[11,"cc","","",40,[[],["result",6]]],[11,"cycle","","",40,[[["option",4]],["result",6]]],[11,"generate_pattern_header","","",40,[[["option",4],["vec",3]],["result",6]]],[11,"end_pattern","","",40,[[],["result",6]]],[11,"render_pattern_for_target_at","","Renders the output for the target at index i. Allows the…",40,[[],[["vec",3],["result",6]]]],[11,"target","","",40,[[],[["result",6],["testersource",4]]]],[11,"targets","","",40,[[],["vec",3]]],[11,"targets_as_strs","","",40,[[],[["string",3],["vec",3]]]],[11,"testers","","",40,[[],[["string",3],["vec",3]]]],[11,"prepare_for_generate","","This is called automatically at the very start of a…",40,[[],["result",6]]],[0,"user","origen::core","",null,null],[3,"User","origen::core::user","",null,null],[11,"current","","",45,[[],["user",3]]],[11,"id","","",45,[[],[["option",4],["string",3]]]],[11,"name","","",45,[[],[["option",4],["string",3]]]],[11,"set_name","","",45,[[]]],[11,"email","","",45,[[],[["option",4],["string",3]]]],[11,"set_email","","",45,[[]]],[11,"password","","",45,[[["option",4]],[["result",6],["string",3]]]],[0,"error","origen","",null,null],[3,"Error","origen::error","",null,null],[12,"msg","","",46,null],[5,"raises_error","","",null,[[],["result",6]]],[11,"new","","",46,[[],["error",3]]],[0,"generator","origen","",null,null],[3,"TestManager","origen::generator","",null,null],[12,"ast","","",47,null],[0,"ast","","",null,null],[3,"Node","origen::generator::ast","",null,null],[12,"attrs","","",48,null],[12,"meta","","",48,null],[12,"children","","",48,null],[3,"AST","","An AST provides an API for constructing a node tree, when…",null,null],[4,"Attrs","","",null,null],[13,"_Inline","","",49,null],[13,"Integer","","",49,null],[13,"Float","","",49,null],[13,"String","","",49,null],[13,"Test","","",49,null],[13,"Comment","","",49,null],[13,"SetTimeset","","",49,null],[13,"ClearTimeset","","",49,null],[13,"SetPinHeader","","",49,null],[13,"ClearPinHeader","","",49,null],[13,"PinAction","","",49,null],[13,"RegWrite","","",49,null],[13,"RegVerify","","",49,null],[13,"JTAGWriteIR","","",49,null],[13,"JTAGVerifyIR","","",49,null],[13,"JTAGWriteDR","","",49,null],[13,"JTAGVerifyDR","","",49,null],[13,"Cycle","","",49,null],[13,"PatternEnd","","",49,null],[13,"PatternHeader","","",49,null],[13,"TextSection","","",49,null],[13,"TextBoundaryLine","","",49,null],[13,"TextLine","","",49,null],[13,"Text","","",49,null],[13,"User","","",49,null],[13,"OrigenCommand","","",49,null],[13,"Timestamp","","",49,null],[13,"Mode","","",49,null],[13,"TargetsStacked","","",49,null],[13,"OS","","",49,null],[13,"AppRoot","","",49,null],[13,"OrigenVersion","","",49,null],[13,"OrigenRoot","","",49,null],[13,"Flow","","",49,null],[13,"STIL","","",49,null],[13,"STILUnknown","","",49,null],[13,"STILVersion","","",49,null],[13,"STILHeader","","",49,null],[13,"STILTitle","","",49,null],[13,"STILDate","","",49,null],[13,"STILSource","","",49,null],[13,"STILHistory","","",49,null],[13,"STILAnnotation","","",49,null],[13,"STILInclude","","",49,null],[13,"STILSignals","","",49,null],[13,"STILSignal","","",49,null],[13,"STILTermination","","",49,null],[13,"STILDefaultState","","",49,null],[13,"STILBase","","",49,null],[13,"STILAlignment","","",49,null],[13,"STILScanIn","","",49,null],[13,"STILScanOut","","",49,null],[13,"STILDataBitCount","","",49,null],[13,"STILSignalGroups","","",49,null],[13,"STILSignalGroup","","",49,null],[13,"STILSigRefExpr","","",49,null],[13,"STILTimeExpr","","",49,null],[13,"STILSIUnit","","",49,null],[13,"STILEngPrefix","","",49,null],[13,"STILAdd","","",49,null],[13,"STILSubtract","","",49,null],[13,"STILMultiply","","",49,null],[13,"STILDivide","","",49,null],[13,"STILParens","","",49,null],[13,"STILNumberWithUnit","","",49,null],[13,"STILPatternExec","","",49,null],[13,"STILCategoryRef","","",49,null],[13,"STILSelectorRef","","",49,null],[13,"STILTimingRef","","",49,null],[13,"STILPatternBurstRef","","",49,null],[13,"STILPatternBurst","","",49,null],[13,"STILSignalGroupsRef","","",49,null],[13,"STILMacroDefs","","",49,null],[13,"STILProcedures","","",49,null],[13,"STILScanStructuresRef","","",49,null],[13,"STILStart","","",49,null],[13,"STILStop","","",49,null],[13,"STILTerminations","","",49,null],[13,"STILTerminationItem","","",49,null],[13,"STILPatList","","",49,null],[13,"STILPat","","",49,null],[13,"STILLabel","","",49,null],[13,"STILTiming","","",49,null],[13,"STILWaveformTable","","",49,null],[13,"STILPeriod","","",49,null],[13,"STILInherit","","",49,null],[13,"STILSubWaveforms","","",49,null],[13,"STILSubWaveform","","",49,null],[13,"STILWaveforms","","",49,null],[13,"STILWaveform","","",49,null],[13,"STILWFChar","","",49,null],[13,"STILEvent","","",49,null],[13,"STILEventList","","",49,null],[13,"STILSpec","","",49,null],[13,"STILCategory","","",49,null],[13,"STILSpecItem","","",49,null],[13,"STILTypicalVar","","",49,null],[13,"STILSpecVar","","",49,null],[13,"STILSpecVarItem","","",49,null],[13,"STILVariable","","",49,null],[13,"STILSelector","","",49,null],[13,"STILSelectorItem","","",49,null],[13,"STILScanStructures","","",49,null],[13,"STILScanChain","","",49,null],[13,"STILScanLength","","",49,null],[13,"STILScanOutLength","","",49,null],[13,"STILScanCells","","",49,null],[13,"STILScanMasterClock","","",49,null],[13,"STILScanSlaveClock","","",49,null],[13,"STILScanInversion","","",49,null],[13,"STILScanInName","","",49,null],[13,"STILScanOutName","","",49,null],[13,"STILNot","","",49,null],[13,"STILPattern","","",49,null],[13,"STILTimeUnit","","",49,null],[13,"STILVector","","",49,null],[13,"STILCyclizedData","","",49,null],[13,"STILNonCyclizedData","","",49,null],[13,"STILRepeat","","",49,null],[13,"STILWaveformFormat","","",49,null],[13,"STILHexFormat","","",49,null],[13,"STILDecFormat","","",49,null],[13,"STILData","","",49,null],[13,"STILTimeValue","","",49,null],[13,"STILWaveformRef","","",49,null],[13,"STILCondition","","",49,null],[13,"STILCall","","",49,null],[13,"STILMacro","","",49,null],[13,"STILLoop","","",49,null],[13,"STILMatchLoop","","",49,null],[13,"STILGoto","","",49,null],[13,"STILBreakPoint","","",49,null],[13,"STILIDDQ","","",49,null],[13,"STILStopStatement","","",49,null],[11,"new","","Create a new AST with the given node as the top-level",50,[[],["ast",3]]],[11,"unwrap","","Consumes the AST, converting it to a Node",50,[[],["node",3]]],[11,"push","","Push a new terminal node into the AST",50,[[["node",3]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",50,[[["node",3]]]],[11,"close","","Close the currently open node",50,[[],["result",6]]],[11,"replace","","Replace the node n - offset with the given node, use…",50,[[["node",3]],["result",6]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",50,[[["node",3]],["result",6]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",50,[[],[["result",6],["node",3]]]],[11,"start","","Clear the current AST and start a new one with the given…",50,[[["node",3]]]],[11,"process","","",50,[[["fnmut",8]],["node",3]]],[11,"with_node","","Execute the given function which receives the a reference…",50,[[],["result",6]]],[11,"to_string","","",50,[[],["string",3]]],[11,"to_pickle","","Serializes the AST for import into Python",50,[[],["vec",3]]],[11,"to_node","","Clones the current state of the AST into a Node, leaving…",50,[[],["node",3]]],[11,"new","","",48,[[["attrs",4]],["node",3]]],[11,"unwrap","","",48,[[],[["option",4],["node",3]]]],[11,"process","","Returns a new node which is the output of the node…",48,[[["processor",8]],[["result",6],["option",4]]]],[11,"new_with_meta","","",48,[[["attrs",4],["option",4],["string",3],["option",4]],["node",3]]],[11,"to_string","","",48,[[],["string",3]]],[11,"to_pickle","","Serializes the AST for import into Python",48,[[],["vec",3]]],[11,"add_child","","",48,[[["node",3]]]],[11,"add_children","","",48,[[["vec",3],["node",3]]]],[11,"insert_child","","",48,[[["node",3]],["result",6]]],[11,"replace_child","","Replace the child n - offset with the given node, use…",48,[[["node",3]],["result",6]]],[11,"get_child","","Returns a copy of child n - offset, an offset of 0 means…",48,[[],[["result",6],["node",3]]]],[11,"process_return_code","","",48,[[["processor",8],["return",4]],[["result",6],["option",4]]]],[11,"process_and_update_children","","Returns a new node which is a copy of self with its…",48,[[["processor",8]],[["result",6],["node",3]]]],[11,"process_and_box_children","","Returns processed versions of the node\'s children, each…",48,[[["processor",8]],[["vec",3],["result",6]]]],[11,"process_children","","Returns processed versions of the node\'s children",48,[[["processor",8]],[["vec",3],["result",6]]]],[11,"replace_children","","Returns a new node which is a copy of self with its…",48,[[["vec",3],["box",3]],["node",3]]],[11,"replace_attrs","","Returns a new node which is a copy of self with its attrs…",48,[[["attrs",4]],["node",3]]],[0,"processor","origen::generator","The processor API is intentionally placed in a separate…",null,null],[4,"Return","origen::generator::processor","All procesor handler methods should return this",null,null],[13,"None","","Deletes the node from the output AST.",51,null],[13,"Unmodified","","Clones the node (and all of its children) into the output…",51,null],[13,"ProcessChildren","","Clones the node but replaces it\'s current children with…",51,null],[13,"Replace","","Replace the node in the output AST with the given node.",51,null],[13,"Unwrap","","Removes the node and leaves its children in its place.",51,null],[13,"Inline","","Replace the node in the output AST with the given nodes,…",51,null],[13,"InlineBoxed","","Same as Inline, but accepts a vector of boxed nodes",51,null],[13,"UnwrapWithProcessedChildren","","A combination of Unwrap and ProcessChildren, which will…",51,null],[13,"InlineWithProcessedChildren","","A combinatin of Inline and ProcessChildren which will add…",51,null],[8,"Processor","","",null,null],[11,"on_node","","",52,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","This will be called at the end of processing every node…",52,[[["node",3]],[["result",6],["return",4]]]],[0,"processors","origen::generator","",null,null],[3,"CycleCombiner","origen::generator::processors","",null,null],[3,"FlattenText","","Flattens nested text, textlines, text sections, etc. into…",null,null],[12,"boundary_string","","",53,null],[12,"boundary_length","","",53,null],[12,"indentation_length","","",53,null],[3,"PinActionCombiner","","Combines adjacent pin actions into a single pin action",null,null],[3,"ToString","","",null,null],[3,"UpcaseComments","","",null,null],[11,"run","","",54,[[["node",3]],[["result",6],["node",3]]]],[11,"run","","",53,[[["node",3]],[["result",6],["node",3]]]],[11,"run","","",55,[[["node",3]],[["result",6],["node",3]]]],[11,"advance_to_second_pass","","",55,[[]]],[11,"run","","",56,[[["node",3]],["string",3]]],[11,"run","","",57,[[["node",3]],[["result",6],["node",3]]]],[0,"stil","origen::generator","",null,null],[3,"STIL","origen::generator::stil","",null,null],[12,"ast","","The un-processed AST representation of the given STIL code",58,null],[4,"SignalType","","",null,null],[13,"InOut","","",59,null],[13,"Out","","",59,null],[13,"In","","",59,null],[13,"Supply","","",59,null],[13,"Pseudo","","",59,null],[4,"Termination","","",null,null],[13,"TerminateHigh","","",60,null],[13,"TerminateLow","","",60,null],[13,"TerminateOff","","",60,null],[13,"TerminateUnknown","","",60,null],[4,"State","","",null,null],[13,"U","","",61,null],[13,"D","","",61,null],[13,"Z","","",61,null],[13,"ForceUp","","",61,null],[13,"ForceDown","","",61,null],[13,"ForceOff","","",61,null],[4,"Base","","",null,null],[13,"Hex","","",62,null],[13,"Dec","","",62,null],[4,"Alignment","","",null,null],[13,"MSB","","",63,null],[13,"LSB","","",63,null],[4,"Selector","","",null,null],[13,"Min","","",64,null],[13,"Typ","","",64,null],[13,"Max","","",64,null],[13,"Meas","","",64,null],[11,"from_file","","",58,[[["path",3]],[["origenresult",6],["stil",3]]]],[11,"from_str","","",58,[[["option",4]],[["origenresult",6],["stil",3]]]],[11,"new","origen::generator","",47,[[],["testmanager",3]]],[11,"start","","Starts a new test (deletes the current AST and starts a…",47,[[]]],[11,"push","","Push a new terminal node into the AST",47,[[["node",3]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",47,[[["node",3]]]],[11,"close","","Close the currently open node",47,[[],["result",6]]],[11,"replace","","Replace the node n - offset with the given node, use…",47,[[["node",3]],["result",6]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",47,[[],[["result",6],["node",3]]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",47,[[["node",3]],["result",6]]],[11,"to_string","","",47,[[],["string",3]]],[11,"process","","",47,[[["fnmut",8]],["node",3]]],[11,"with_ast","","Execute the given function which receives the a reference…",47,[[],["result",6]]],[11,"to_node","","",47,[[],["node",3]]],[11,"to_pickle","","Serializes the AST for import into Python",47,[[],["vec",3]]],[0,"prog_gen","origen","",null,null],[3,"Interface","origen::prog_gen","The interface is a singleton which lives for the entire…",null,null],[11,"new","","",65,[[]]],[0,"revision_control","origen","",null,null],[3,"RevisionControl","origen::revision_control","",null,null],[3,"Credentials","","",null,null],[12,"username","","",66,null],[12,"password","","",66,null],[3,"Status","","",null,null],[12,"added","","",67,null],[12,"removed","","",67,null],[12,"changed","","",67,null],[12,"conflicted","","Files with merge conflicts",67,null],[0,"designsync","","",null,null],[3,"Designsync","origen::revision_control::designsync","",null,null],[12,"local","","Path to the local directory for the repository",68,null],[12,"remote","","Link to the remote vault",68,null],[11,"new","","",68,[[["path",3],["credentials",3],["option",4]],["designsync",3]]],[0,"git","origen::revision_control","",null,null],[3,"Git","origen::revision_control::git","",null,null],[12,"local","","Path to the local directory for the repository",69,null],[12,"remotes","","Link(s) to the remote repository",69,null],[5,"config","","Attempts to get the given attribute from the Git config.…",null,[[],[["option",4],["string",3]]]],[11,"new","","",69,[[["option",4],["path",3],["vec",3],["credentials",3]],["git",3]]],[11,"tag_exists_locally","","Returns true if the given tag name exists in the local repo",69,[[["repository",3]]]],[11,"remote_branch_exists","","Returns true if the given branch name exists in the remote…",69,[[["repository",3]]]],[11,"fetch","","Equivalent to calling \'git fetch\' within a repo, this will…",69,[[["option",4]],["origenresult",6]]],[8,"RevisionControlAPI","origen::revision_control","Defines a common minimum API that all revision control…",null,null],[10,"populate","","Initially populate the local directory with the remote,…",70,[[],["result",6]]],[10,"checkout","","Checkout the given version of the repository. If force is…",70,[[["path",3],["option",4]],["result",6]]],[10,"revert","","Reverts any local changes. Supplying a path to a directory…",70,[[["path",3],["option",4]],["result",6]]],[10,"status","","Returns a Status object which contains lists of all files…",70,[[["path",3],["option",4]],[["status",3],["result",6]]]],[10,"tag","","Tag the view in the local workspace. A tag message can be…",70,[[["option",4]],["result",6]]],[11,"is_modified","","Returns true if the workspace status is modified in any way",67,[[]]],[11,"new","","Returns a generic revision control driver which implements…",71,[[["option",4],["path",3],["vec",3],["credentials",3]],["revisioncontrol",3]]],[11,"git","","",71,[[["option",4],["path",3],["vec",3],["credentials",3]],["git",3]]],[11,"designsync","","",71,[[["option",4],["path",3],["vec",3],["credentials",3]],["designsync",3]]],[0,"services","origen","",null,null],[3,"Services","origen::services","",null,null],[4,"Service","","",null,null],[13,"None","","",72,null],[13,"JTAG","","",72,null],[0,"jtag","","",null,null],[3,"Service","origen::services::jtag","",null,null],[12,"ir_val","","",73,null],[11,"new","","",73,[[],["service",3]]],[11,"write_ir","","",73,[[["value",4]],["result",6]]],[11,"verify_ir","","",73,[[["value",4]],["result",6]]],[11,"write_dr","","",73,[[["value",4]],["result",6]]],[11,"verify_dr","","",73,[[["value",4]],["result",6]]],[11,"new","origen::services","",74,[[],["services",3]]],[11,"change","","",74,[[]]],[11,"add_service","","Adds the given service to the database, returning its…",74,[[["service",4]]]],[11,"get_mut_service","","Get a mutable reference to the service with the given ID",74,[[],[["result",6],["service",4]]]],[11,"get_service","","Get a read-only reference to the service with the given…",74,[[],[["result",6],["service",4]]]],[0,"testers","origen","",null,null],[3,"DummyRenderer","origen::testers","",null,null],[3,"DummyRendererWithInterceptors","","",null,null],[5,"instantiate_tester","","",null,[[],[["box",3],["option",4]]]],[0,"igxl","","",null,null],[0,"ultraflex","origen::testers::igxl","",null,null],[3,"UltraFlex","origen::testers::igxl::ultraflex","",null,null],[0,"simulator","origen::testers","",null,null],[3,"Renderer","origen::testers::simulator","",null,null],[0,"smt","origen::testers","",null,null],[0,"v93k","origen::testers::smt","",null,null],[0,"smt7","origen::testers::smt::v93k","",null,null],[3,"SMT7","origen::testers::smt::v93k::smt7","",null,null],[0,"pattern_renderer","","",null,null],[3,"Renderer","origen::testers::smt::v93k::smt7::pattern_renderer","",null,null],[11,"run","","",75,[[["node",3],["smt7",3]],[["vec",3],["result",6]]]],[0,"smt8","origen::testers::smt::v93k","",null,null],[17,"AVAILABLE_TESTERS","origen::testers","",null,null],[0,"utility","origen","",null,null],[5,"resolve_dir_from_app_root","origen::utility","Resolves a directory path from the current application…",null,[[["string",3],["option",4]],["pathbuf",3]]],[0,"big_uint_helpers","","Helpers for working with BigUnits",null,null],[5,"bit_slice","origen::utility::big_uint_helpers","Returns the value of the given BigUint for the given bit…",null,[[["biguint",3]],[["biguint",3],["result",6]]]],[0,"differ","origen::utility","",null,null],[3,"Differ","origen::utility::differ","A utility for diffing two different files, with the…",null,null],[12,"ignore_blank_lines","","",76,null],[11,"new","","",76,[[["path",3]]]],[11,"suspend_on","","Set the diff to suspend when the given pattern string is…",76,[[],["result",6]]],[11,"resume_on","","Set the diff to resume when the given pattern string is…",76,[[],["result",6]]],[11,"ignore_comments","","Ignore comments as defined by the given command char(s),…",76,[[],["result",6]]],[11,"has_diffs","","Returns true if diffs are found between the two files…",76,[[],["result",6]]],[0,"file_utils","origen::utility","",null,null],[5,"to_relative_path","origen::utility::file_utils","Returns the given abs path as a relative path. By default…",null,[[["path",3],["option",4]],[["result",6],["pathbuf",3]]]],[5,"with_dir","","Temporarily sets the current dir to the given dir for the…",null,[[["path",3]],["result",6]]],[5,"symlink","","Create a symlink, works on Linux or Windows. The dst path…",null,[[["asref",8],["path",3]],["result",6]]],[5,"mv","","Move a file or directory",null,[[["path",3]],["result",6]]],[5,"copy","","Copy the given file or directory to the given directory,…",null,[[["path",3]],["result",6]]],[5,"copy_contents","","Like copy, however if the source is a directory then its…",null,[[["path",3]],["result",6]]],[5,"_copy","","",null,[[["path",3]],["result",6]]],[0,"location","origen::utility","",null,null],[3,"Location","origen::utility::location","Stores a location and implements some helpers for…",null,null],[12,"location","","The raw location",77,null],[11,"new","","",77,[[]]],[11,"url","","",77,[[],[["option",4],["string",3]]]],[11,"git","","",77,[[],[["option",4],["string",3]]]],[11,"git_https","","",77,[[],[["option",4],["string",3]]]],[11,"git_ssh","","",77,[[],[["option",4],["string",3]]]],[11,"path","","",77,[[],[["option",4],["pathbuf",3]]]],[0,"logger","origen::utility","The Origen logger is implemented as a singleton and data…",null,null],[3,"Logger","origen::utility::logger","",null,null],[3,"Inner","","",null,null],[5,"log_dir","","",null,[[],["pathbuf",3]]],[11,"verbosity","","",78,[[]]],[11,"set_verbosity","","",78,[[],["result",6]]],[11,"set_status_ready","","This is called automatically by Origen during the boot…",78,[[]]],[11,"display","","This is the same as calling \'print!\' but with it also…",78,[[]]],[11,"displayln","","Like display!, but appends a newline, this is like calling…",78,[[]]],[11,"display_green","","See display",78,[[]]],[11,"display_greenln","","See displayln",78,[[]]],[11,"display_yellow","","See display",78,[[]]],[11,"display_yellowln","","See displayln",78,[[]]],[11,"display_cyan","","See display",78,[[]]],[11,"display_cyanln","","See displayln",78,[[]]],[11,"display_red","","See display",78,[[]]],[11,"display_redln","","See displayln",78,[[]]],[11,"display_block","","See display",78,[[["vec",3]]]],[11,"debug","","Log a debug message, this will be displayed in the…",78,[[]]],[11,"debug_block","","Log a debug message, this will be displayed in the…",78,[[["vec",3]]]],[11,"trace","","Log a trace (very low level) debug message, this will be…",78,[[]]],[11,"trace_block","","Log a trace (very low level) debug message, this will be…",78,[[["vec",3]]]],[11,"deprecated","","Log a deprecation warning message, this will be displayed…",78,[[]]],[11,"deprecated_block","","Log a deprecation warning message, this will be displayed…",78,[[["vec",3]]]],[11,"error","","Log an error message, this will always be displayed in the…",78,[[]]],[11,"error_block","","Log an error message, this will always be displayed in the…",78,[[["vec",3]]]],[11,"info","","Log an info message, this will be displayed in the…",78,[[]]],[11,"info_block","","Log an info message, this will be displayed in the…",78,[[["vec",3]]]],[11,"success","","Log a success message, this will be displayed in the…",78,[[]]],[11,"success_block","","Log a success message, this will be displayed in the…",78,[[["vec",3]]]],[11,"warning","","Log a warning message, this will be displayed in the…",78,[[]]],[11,"warning_block","","Log a warning message, this will be displayed in the…",78,[[["vec",3]]]],[11,"output_file","","Returns the path to the current log file",78,[[],["pathbuf",3]]],[11,"open_logfile","","See with_log which is the equivalent to calling…",78,[[["path",3],["option",4]],[["result",6],["pathbuf",3]]]],[11,"close_logfile","","",78,[[]]],[11,"with_logfile","","Send all logging to the given log file for the duration of…",78,[[["path",3],["option",4]],[["result",6],["pathbuf",3]]]],[11,"default","","",78,[[],["logger",3]]],[0,"command_helpers","origen::utility","",null,null],[5,"exec_and_capture","origen::utility::command_helpers","Executes the given command/args, returning all captured…",null,[[["vec",3],["option",4]],["result",6]]],[5,"log_stdout_and_stderr","","Log both stdout and stderr to the debug and error logs…",null,[[["option",4],["child",3],["fnmut",8]]]],[5,"log_stdout","","Log stdout to the debug log, optionally calling a callback…",null,[[["child",3],["fnmut",8],["option",4]]]],[5,"log_stderr","","Log stderr to the error log, optionally calling a callback…",null,[[["child",3],["fnmut",8],["option",4]]]],[0,"built_info","origen","",null,null],[17,"CI_PLATFORM","origen::built_info","The Continuous Integration platform detected during…",null,null],[17,"PKG_VERSION","","The full version.",null,null],[17,"PKG_VERSION_MAJOR","","The major version.",null,null],[17,"PKG_VERSION_MINOR","","The minor version.",null,null],[17,"PKG_VERSION_PATCH","","The patch version.",null,null],[17,"PKG_VERSION_PRE","","The pre-release version.",null,null],[17,"PKG_AUTHORS","","A colon-separated list of authors.",null,null],[17,"PKG_NAME","","The name of the package.",null,null],[17,"PKG_DESCRIPTION","","The description.",null,null],[17,"PKG_HOMEPAGE","","The homepage.",null,null],[17,"TARGET","","The target triple that was being compiled for.",null,null],[17,"HOST","","The host triple of the rust compiler.",null,null],[17,"PROFILE","","`release` for release builds, `debug` for other builds.",null,null],[17,"RUSTC","","The compiler that cargo resolved to use.",null,null],[17,"RUSTDOC","","The documentation generator that cargo resolved to use.",null,null],[17,"OPT_LEVEL","","Value of OPT_LEVEL for the profile used during compilation.",null,null],[17,"NUM_JOBS","","The parallelism that was specified during compilation.",null,null],[17,"DEBUG","","Value of DEBUG for the profile used during compilation.",null,null],[17,"FEATURES","","The features that were enabled during compilation.",null,null],[17,"FEATURES_STR","","The features as a comma-separated string.",null,null],[17,"RUSTC_VERSION","","The output of `rustc -V`",null,null],[17,"RUSTDOC_VERSION","","The output of `rustdoc -V`",null,null],[17,"CFG_TARGET_ARCH","","The target architecture, given by `cfg!(target_arch)`.",null,null],[17,"CFG_ENDIAN","","The endianness, given by `cfg!(target_endian)`.",null,null],[17,"CFG_ENV","","The toolchain-environment, given by `cfg!(target_env)`.",null,null],[17,"CFG_FAMILY","","The OS-family, given by `cfg!(target_family)`.",null,null],[17,"CFG_OS","","The operating system, given by `cfg!(target_os)`.",null,null],[17,"CFG_POINTER_WIDTH","","The pointer width, given by `cfg!(target_pointer_width)`.",null,null],[6,"Result","origen","",null,null],[17,"MODES","","The available Origen runtime modes",null,null],[14,"node","","",null,null],[14,"exit_success","","Exit the origen process with a passing exit code and a big…",null,null],[14,"exit_pass","","Exit the origen process with a passing exit code and a big…",null,null],[14,"exit_fail","","Exit the origen process with a failing exit code and a big…",null,null],[14,"exit_error","","Exit the origen process with a failing exit code and a big…",null,null],[14,"error","","Returns an Err with the given error message",null,null],[14,"display","","",null,null],[14,"displayln","","",null,null],[14,"display_green","","",null,null],[14,"display_greenln","","",null,null],[14,"display_yellow","","",null,null],[14,"display_yellowln","","",null,null],[14,"display_cyan","","",null,null],[14,"display_cyanln","","",null,null],[14,"display_red","","",null,null],[14,"display_redln","","",null,null],[14,"log_debug","","",null,null],[14,"log_info","","",null,null],[14,"log_deprecated","","",null,null],[14,"log_error","","",null,null],[14,"log_success","","",null,null],[14,"log_warning","","",null,null],[14,"log_trace","","",null,null],[14,"duplicate_error","","Returns an Origen Error with pre-formatted message…",null,null],[14,"backend_lookup_error","","Returns a error stating that the backend doesn\'t have an…",null,null],[14,"lookup_error","","",null,null],[14,"push_pin_actions","","",null,null],[14,"text","","",null,null],[14,"add_children","","",null,null],[14,"text_line","","",null,null],[14,"backend_fail","","",null,null],[14,"backend_expect","","",null,null],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_py","","",79,[[["python",3]]]],[11,"from_py","","",79,[[["python",3]]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_py","","",80,[[["python",3]]]],[11,"from_py","","",80,[[["python",3]]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_py","","",81,[[["python",3]]]],[11,"from_py","","",81,[[["python",3]]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_py","","",82,[[["python",3]]]],[11,"from_py","","",82,[[["python",3]]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_py","","",83,[[["python",3]]]],[11,"from_py","","",83,[[["python",3]]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_py","","",84,[[["python",3]]]],[11,"from_py","","",84,[[["python",3]]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_py","","",85,[[["python",3]]]],[11,"from_py","","",85,[[["python",3]]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_py","","",86,[[["python",3]]]],[11,"from_py","","",86,[[["python",3]]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_py","","",87,[[["python",3]]]],[11,"from_py","","",87,[[["python",3]]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_py","","",88,[[["python",3]]]],[11,"from_py","","",88,[[["python",3]]]],[11,"vzip","","",88,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from_py","","",0,[[["python",3]]]],[11,"vzip","","",0,[[]]],[11,"from","origen::core::application","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from_py","","",1,[[["python",3]]]],[11,"vzip","","",1,[[]]],[11,"from","origen::core::application::config","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_py","","",2,[[["python",3]]]],[11,"from_py","","",2,[[["python",3]]]],[11,"vzip","","",2,[[]]],[11,"from","origen::core::config","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_py","","",89,[[["python",3]]]],[11,"from_py","","",89,[[["python",3]]]],[11,"vzip","","",89,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from_py","","",3,[[["python",3]]]],[11,"vzip","","",3,[[]]],[11,"from","origen::core::dut","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from_py","","",4,[[["python",3]]]],[11,"vzip","","",4,[[]]],[11,"from","origen::core::file_handler","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from_py","","",5,[[["python",3]]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_py","","",6,[[["python",3]]]],[11,"from_py","","",6,[[["python",3]]]],[11,"vzip","","",6,[[]]],[11,"from","origen::core::model","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_py","","",7,[[["python",3]]]],[11,"from_py","","",7,[[["python",3]]]],[11,"vzip","","",7,[[]]],[11,"from","origen::core::model::pins","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_py","","",15,[[["python",3]]]],[11,"from_py","","",15,[[["python",3]]]],[11,"vzip","","",15,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_py","","",8,[[["python",3]]]],[11,"from_py","","",8,[[["python",3]]]],[11,"vzip","","",8,[[]]],[11,"from","origen::core::model::pins::pin","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from_py","","",9,[[["python",3]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_py","","",10,[[["python",3]]]],[11,"from_py","","",10,[[["python",3]]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_py","","",11,[[["python",3]]]],[11,"from_py","","",11,[[["python",3]]]],[11,"vzip","","",11,[[]]],[11,"from","origen::core::model::pins::pin_collection","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_py","","",12,[[["python",3]]]],[11,"from_py","","",12,[[["python",3]]]],[11,"vzip","","",12,[[]]],[11,"from","origen::core::model::pins::pin_group","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_py","","",13,[[["python",3]]]],[11,"from_py","","",13,[[["python",3]]]],[11,"vzip","","",13,[[]]],[11,"from","origen::core::model::pins::pin_header","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_py","","",14,[[["python",3]]]],[11,"from_py","","",14,[[["python",3]]]],[11,"vzip","","",14,[[]]],[11,"from","origen::core::model::registers","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_py","","",16,[[["python",3]]]],[11,"from_py","","",16,[[["python",3]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_py","","",17,[[["python",3]]]],[11,"from_py","","",17,[[["python",3]]]],[11,"vzip","","",17,[[]]],[11,"from","origen::core::model::registers::address_block","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_py","","",18,[[["python",3]]]],[11,"from_py","","",18,[[["python",3]]]],[11,"vzip","","",18,[[]]],[11,"from","origen::core::model::registers::bit","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_py","","",19,[[["python",3]]]],[11,"from_py","","",19,[[["python",3]]]],[11,"vzip","","",19,[[]]],[11,"from","origen::core::model::registers::bit_collection","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_py","","",20,[[["python",3]]]],[11,"from_py","","",20,[[["python",3]]]],[11,"vzip","","",20,[[]]],[11,"from","origen::core::model::registers::field","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_py","","",21,[[["python",3]]]],[11,"from_py","","",21,[[["python",3]]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_py","","",22,[[["python",3]]]],[11,"from_py","","",22,[[["python",3]]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_py","","",23,[[["python",3]]]],[11,"from_py","","",23,[[["python",3]]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_py","","",24,[[["python",3]]]],[11,"from_py","","",24,[[["python",3]]]],[11,"vzip","","",24,[[]]],[11,"from","origen::core::model::registers::memory_map","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_py","","",25,[[["python",3]]]],[11,"from_py","","",25,[[["python",3]]]],[11,"vzip","","",25,[[]]],[11,"from","origen::core::model::registers::register","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_py","","",26,[[["python",3]]]],[11,"from_py","","",26,[[["python",3]]]],[11,"vzip","","",26,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_py","","",90,[[["python",3]]]],[11,"from_py","","",90,[[["python",3]]]],[11,"vzip","","",90,[[]]],[11,"from","origen::core::model::registers::register_file","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_py","","",27,[[["python",3]]]],[11,"from_py","","",27,[[["python",3]]]],[11,"vzip","","",27,[[]]],[11,"from","origen::core::model::timesets::timeset","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_py","","",28,[[["python",3]]]],[11,"from_py","","",28,[[["python",3]]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_py","","",29,[[["python",3]]]],[11,"from_py","","",29,[[["python",3]]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_py","","",30,[[["python",3]]]],[11,"from_py","","",30,[[["python",3]]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_py","","",31,[[["python",3]]]],[11,"from_py","","",31,[[["python",3]]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_py","","",32,[[["python",3]]]],[11,"from_py","","",32,[[["python",3]]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_py","","",33,[[["python",3]]]],[11,"from_py","","",33,[[["python",3]]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_py","","",34,[[["python",3]]]],[11,"from_py","","",34,[[["python",3]]]],[11,"vzip","","",34,[[]]],[11,"from","origen::core::producer","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_py","","",35,[[["python",3]]]],[11,"from_py","","",35,[[["python",3]]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_py","","",36,[[["python",3]]]],[11,"from_py","","",36,[[["python",3]]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_py","","",37,[[["python",3]]]],[11,"from_py","","",37,[[["python",3]]]],[11,"vzip","","",37,[[]]],[11,"from","origen::core::producer::job","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_py","","",38,[[["python",3]]]],[11,"from_py","","",38,[[["python",3]]]],[11,"vzip","","",38,[[]]],[11,"from","origen::core::status","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_py","","",39,[[["python",3]]]],[11,"from_py","","",39,[[["python",3]]]],[11,"vzip","","",39,[[]]],[11,"from","origen::core::tester","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_py","","",40,[[["python",3]]]],[11,"from_py","","",40,[[["python",3]]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_py","","",41,[[["python",3]]]],[11,"from_py","","",41,[[["python",3]]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_py","","",42,[[["python",3]]]],[11,"from_py","","",42,[[["python",3]]]],[11,"vzip","","",42,[[]]],[11,"from","origen::core::user","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_py","","",45,[[["python",3]]]],[11,"from_py","","",45,[[["python",3]]]],[11,"vzip","","",45,[[]]],[11,"from","origen::error","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_py","","",46,[[["python",3]]]],[11,"from_py","","",46,[[["python",3]]]],[11,"vzip","","",46,[[]]],[11,"from","origen::generator","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_py","","",47,[[["python",3]]]],[11,"from_py","","",47,[[["python",3]]]],[11,"vzip","","",47,[[]]],[11,"from","origen::generator::ast","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_py","","",48,[[["python",3]]]],[11,"from_py","","",48,[[["python",3]]]],[11,"vzip","","",48,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_py","","",50,[[["python",3]]]],[11,"from_py","","",50,[[["python",3]]]],[11,"vzip","","",50,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_py","","",49,[[["python",3]]]],[11,"from_py","","",49,[[["python",3]]]],[11,"vzip","","",49,[[]]],[11,"from","origen::generator::processor","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_py","","",51,[[["python",3]]]],[11,"from_py","","",51,[[["python",3]]]],[11,"vzip","","",51,[[]]],[11,"from","origen::generator::processors","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_py","","",54,[[["python",3]]]],[11,"from_py","","",54,[[["python",3]]]],[11,"vzip","","",54,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_py","","",53,[[["python",3]]]],[11,"from_py","","",53,[[["python",3]]]],[11,"vzip","","",53,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_py","","",55,[[["python",3]]]],[11,"from_py","","",55,[[["python",3]]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_py","","",56,[[["python",3]]]],[11,"from_py","","",56,[[["python",3]]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_py","","",57,[[["python",3]]]],[11,"from_py","","",57,[[["python",3]]]],[11,"vzip","","",57,[[]]],[11,"from","origen::generator::stil","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_py","","",58,[[["python",3]]]],[11,"from_py","","",58,[[["python",3]]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_py","","",59,[[["python",3]]]],[11,"from_py","","",59,[[["python",3]]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_py","","",60,[[["python",3]]]],[11,"from_py","","",60,[[["python",3]]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_py","","",61,[[["python",3]]]],[11,"from_py","","",61,[[["python",3]]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_py","","",62,[[["python",3]]]],[11,"from_py","","",62,[[["python",3]]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_py","","",63,[[["python",3]]]],[11,"from_py","","",63,[[["python",3]]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_py","","",64,[[["python",3]]]],[11,"from_py","","",64,[[["python",3]]]],[11,"vzip","","",64,[[]]],[11,"from","origen::prog_gen","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_py","","",65,[[["python",3]]]],[11,"from_py","","",65,[[["python",3]]]],[11,"vzip","","",65,[[]]],[11,"from","origen::revision_control","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_py","","",71,[[["python",3]]]],[11,"from_py","","",71,[[["python",3]]]],[11,"vzip","","",71,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_py","","",66,[[["python",3]]]],[11,"from_py","","",66,[[["python",3]]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_py","","",67,[[["python",3]]]],[11,"from_py","","",67,[[["python",3]]]],[11,"vzip","","",67,[[]]],[11,"from","origen::revision_control::designsync","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_py","","",68,[[["python",3]]]],[11,"from_py","","",68,[[["python",3]]]],[11,"vzip","","",68,[[]]],[11,"from","origen::revision_control::git","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_py","","",69,[[["python",3]]]],[11,"from_py","","",69,[[["python",3]]]],[11,"vzip","","",69,[[]]],[11,"from","origen::services","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_py","","",74,[[["python",3]]]],[11,"from_py","","",74,[[["python",3]]]],[11,"vzip","","",74,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_py","","",72,[[["python",3]]]],[11,"from_py","","",72,[[["python",3]]]],[11,"vzip","","",72,[[]]],[11,"from","origen::services::jtag","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_py","","",73,[[["python",3]]]],[11,"from_py","","",73,[[["python",3]]]],[11,"vzip","","",73,[[]]],[11,"from","origen::testers","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_py","","",91,[[["python",3]]]],[11,"from_py","","",91,[[["python",3]]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_py","","",92,[[["python",3]]]],[11,"from_py","","",92,[[["python",3]]]],[11,"vzip","","",92,[[]]],[11,"from","origen::testers::igxl::ultraflex","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_py","","",93,[[["python",3]]]],[11,"from_py","","",93,[[["python",3]]]],[11,"vzip","","",93,[[]]],[11,"from","origen::testers::simulator","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_py","","",94,[[["python",3]]]],[11,"from_py","","",94,[[["python",3]]]],[11,"vzip","","",94,[[]]],[11,"from","origen::testers::smt::v93k::smt7","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_py","","",95,[[["python",3]]]],[11,"from_py","","",95,[[["python",3]]]],[11,"vzip","","",95,[[]]],[11,"from","origen::testers::smt::v93k::smt7::pattern_renderer","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_py","","",75,[[["python",3]]]],[11,"from_py","","",75,[[["python",3]]]],[11,"vzip","","",75,[[]]],[11,"from","origen::utility::differ","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_py","","",76,[[["python",3]]]],[11,"from_py","","",76,[[["python",3]]]],[11,"vzip","","",76,[[]]],[11,"from","origen::utility::location","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_py","","",77,[[["python",3]]]],[11,"from_py","","",77,[[["python",3]]]],[11,"vzip","","",77,[[]]],[11,"from","origen::utility::logger","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_py","","",78,[[["python",3]]]],[11,"from_py","","",78,[[["python",3]]]],[11,"vzip","","",78,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_py","","",96,[[["python",3]]]],[11,"from_py","","",96,[[["python",3]]]],[11,"vzip","","",96,[[]]],[11,"clear_timeset","origen::testers::simulator","",94,[[["node",3]],[["result",4],["error",3]]]],[11,"set_timeset","","",94,[[["node",3]],[["result",4],["error",3]]]],[11,"cycle","","",94,[[["node",3]],[["result",4],["error",3]]]],[11,"cc","","",94,[[["node",3]],[["result",4],["error",3]]]],[11,"cycle","origen::testers","",92,[[["node",3]],[["result",4],["error",3]]]],[11,"cc","","",92,[[["node",3]],[["result",4],["error",3]]]],[11,"name","origen::testers::igxl::ultraflex","",93,[[],["string",3]]],[11,"clone","","",93,[[],[["testerapi",8],["box",3]]]],[11,"name","origen::testers::simulator","",94,[[],["string",3]]],[11,"clone","","",94,[[],[["testerapi",8],["box",3]]]],[11,"render_pattern","","",94,[[["node",3]],[["result",6],["vec",3]]]],[11,"name","origen::testers::smt::v93k::smt7","",95,[[],["string",3]]],[11,"clone","","",95,[[],[["testerapi",8],["box",3]]]],[11,"render_pattern","","",95,[[["node",3]],[["vec",3],["result",6]]]],[11,"pattern_differ","","",95,[[["path",3]],[["option",4],["differ",3]]]],[11,"name","origen::testers","",91,[[],["string",3]]],[11,"clone","","",91,[[],[["testerapi",8],["box",3]]]],[11,"render_pattern","","",91,[[["node",3]],[["result",6],["vec",3]]]],[11,"name","","",92,[[],["string",3]]],[11,"clone","","",92,[[],[["testerapi",8],["box",3]]]],[11,"render_pattern","","",92,[[["node",3]],[["result",6],["vec",3]]]],[11,"on_node","origen::generator::processors","",54,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","",54,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",53,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","",53,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",55,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",56,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",57,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","origen::testers::smt::v93k::smt7::pattern_renderer","",75,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","origen::testers","",91,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",92,[[["node",3]],[["result",6],["return",4]]]],[11,"populate","origen::revision_control::designsync","",68,[[],["result",6]]],[11,"checkout","","",68,[[["path",3],["option",4]],["result",6]]],[11,"revert","","",68,[[["path",3],["option",4]],["result",6]]],[11,"status","","",68,[[["path",3],["option",4]],[["status",3],["result",6]]]],[11,"tag","","",68,[[["option",4]],["result",6]]],[11,"populate","origen::revision_control::git","",69,[[],["origenresult",6]]],[11,"revert","","",69,[[["path",3],["option",4]],["origenresult",6]]],[11,"checkout","","",69,[[["path",3],["option",4]],["origenresult",6]]],[11,"status","","Returns an Origen RC status, which does not go into as…",69,[[["path",3],["option",4]],[["status",3],["origenresult",6]]]],[11,"tag","","",69,[[["option",4]],["origenresult",6]]],[11,"populate","origen::revision_control","",71,[[],["result",6]]],[11,"checkout","","",71,[[["path",3],["option",4]],["result",6]]],[11,"revert","","",71,[[["path",3],["option",4]],["result",6]]],[11,"status","","",71,[[["path",3],["option",4]],[["status",3],["result",6]]]],[11,"tag","","",71,[[["option",4]],["result",6]]],[11,"from","origen::error","",46,[[["error",3]]]],[11,"from","","",46,[[["lookuperror",3],["varerror",4]]]],[11,"from","","",46,[[["error",3]]]],[11,"from","","",46,[[["error",3]]]],[11,"from","","",46,[[["error",4]]]],[11,"from","","",46,[[["semvererror",4]]]],[11,"next_back","origen::core::model::registers::register","",90,[[],[["summaryfield",3],["option",4]]]],[11,"next","origen::core::file_handler","",6,[[],[["option",4],["pathbuf",3]]]],[11,"next","origen::core::model::registers::bit_collection","",20,[[],[["option",4],["bit",3]]]],[11,"next","origen::core::model::registers::register","",90,[[],[["summaryfield",3],["option",4]]]],[11,"clone","origen::core::file_handler","",5,[[]]],[11,"clone","","",6,[[],["filehandler",3]]],[11,"clone","origen::core::model::pins::pin","",10,[[],["pinactions",4]]],[11,"clone","","",11,[[],["pinroles",4]]],[11,"clone","","",9,[[],["pin",3]]],[11,"clone","origen::core::model::pins::pin_collection","",12,[[],["pincollection",3]]],[11,"clone","origen::core::model::pins::pin_group","",13,[[],["pingroup",3]]],[11,"clone","origen::core::model::pins::pin_header","",14,[[],["pinheader",3]]],[11,"clone","origen::core::model::pins","",8,[[],["endianness",4]]],[11,"clone","","",15,[[],["statetracker",3]]],[11,"clone","origen::core::model::registers::bit_collection","",20,[[],["bitcollection",3]]],[11,"clone","origen::core::model::registers","",16,[[],["accesstype",4]]],[11,"clone","","",17,[[],["bitorder",4]]],[11,"clone","origen::core::model::timesets::timeset","",29,[[],["timeset",3]]],[11,"clone","","",30,[[],["wavetable",3]]],[11,"clone","","",31,[[],["wavegroup",3]]],[11,"clone","","",32,[[],["wave",3]]],[11,"clone","","",34,[[],["eventactions",4]]],[11,"clone","","",33,[[],["event",3]]],[11,"clone","origen::core::tester","",42,[[],["testersource",4]]],[11,"clone","origen::generator::ast","",50,[[],["ast",3]]],[11,"clone","","",48,[[],["node",3]]],[11,"clone","","",49,[[],["attrs",4]]],[11,"clone","origen::generator::stil","",59,[[],["signaltype",4]]],[11,"clone","","",60,[[],["termination",4]]],[11,"clone","","",61,[[],["state",4]]],[11,"clone","","",62,[[],["base",4]]],[11,"clone","","",63,[[],["alignment",4]]],[11,"clone","","",64,[[],["selector",4]]],[11,"clone","origen::generator","",47,[[],["testmanager",3]]],[11,"clone","origen::revision_control","",66,[[],["credentials",3]]],[11,"clone","","",67,[[],["status",3]]],[11,"clone","origen::services::jtag","",73,[[],["service",3]]],[11,"clone","origen::testers::igxl::ultraflex","",93,[[],["ultraflex",3]]],[11,"clone","origen::testers::simulator","",94,[[],["renderer",3]]],[11,"clone","origen::testers::smt::v93k::smt7::pattern_renderer","",75,[[],["renderer",3]]],[11,"clone","origen::testers::smt::v93k::smt7","",95,[[],["smt7",3]]],[11,"clone","origen::testers","",91,[[],["dummyrenderer",3]]],[11,"clone","","",92,[[],["dummyrendererwithinterceptors",3]]],[11,"clone","origen::utility::location","",77,[[],["location",3]]],[11,"default","origen::core::config","",3,[[],["config",3]]],[11,"default","origen::core::model::pins::pin","",9,[[],["pin",3]]],[11,"default","origen::core::model::registers::address_block","",18,[[],["addressblock",3]]],[11,"default","origen::core::model::registers::bit_collection","",20,[[],["bitcollection",3]]],[11,"default","origen::core::model::registers::memory_map","",25,[[],["memorymap",3]]],[11,"default","origen::core::model::registers::register","",26,[[],["register",3]]],[11,"default","origen::core::model::registers::register_file","",27,[[],["registerfile",3]]],[11,"default","origen::core::model::timesets::timeset","",29,[[]]],[11,"default","origen::core::status","",39,[[],["status",3]]],[11,"default","origen::core::tester","",41,[[],["stats",3]]],[11,"default","origen::revision_control","",66,[[],["credentials",3]]],[11,"default","","",67,[[],["status",3]]],[11,"default","origen::testers::igxl::ultraflex","",93,[[]]],[11,"default","origen::testers::simulator","",94,[[]]],[11,"default","origen::testers::smt::v93k::smt7","",95,[[]]],[11,"default","origen::testers","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","origen::utility::logger","",96,[[],["inner",3]]],[11,"eq","origen::core::model::pins::pin","",10,[[["pinactions",4]]]],[11,"eq","origen::core::model::registers","",16,[[["accesstype",4]]]],[11,"eq","","",17,[[["bitorder",4]]]],[11,"eq","origen::core::tester","",42,[[["testersource",4]]]],[11,"eq","","",44,[[["testersource",4]]]],[11,"eq","origen::generator::ast","",50,[[["node",3]]]],[11,"eq","","",50,[[["test",3]]]],[11,"eq","","",50,[[["testmanager",3]]]],[11,"eq","","",48,[[["node",3]]]],[11,"ne","","",48,[[["node",3]]]],[11,"eq","","",48,[[["ast",3]]]],[11,"eq","","",49,[[["attrs",4]]]],[11,"ne","","",49,[[["attrs",4]]]],[11,"eq","origen::generator::stil","",59,[[["signaltype",4]]]],[11,"eq","","",60,[[["termination",4]]]],[11,"eq","","",61,[[["state",4]]]],[11,"eq","","",62,[[["base",4]]]],[11,"eq","","",63,[[["alignment",4]]]],[11,"eq","","",64,[[["selector",4]]]],[11,"eq","origen::generator","",47,[[["ast",3]]]],[11,"eq","","",47,[[["node",3]]]],[11,"eq","origen","",86,[[["ast",3]]]],[11,"eq","","",86,[[["node",3]]]],[11,"deref","origen::core::config","",89,[[],["config",3]]],[11,"deref","origen","",79,[[],["status",3]]],[11,"deref","","",80,[[],["origenconfig",3]]],[11,"deref","","",81,[[],["logger",3]]],[11,"deref","","",82,[[],["mutex",3]]],[11,"deref","","",83,[[],["mutex",3]]],[11,"deref","","",84,[[],["mutex",3]]],[11,"deref","","",85,[[],["mutex",3]]],[11,"deref","","",86,[[],["testmanager",3]]],[11,"deref","","",87,[[],["interface",3]]],[11,"deref","","",88,[[],["user",3]]],[11,"fmt","origen::core::application::config","",2,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::config","",3,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::dut","",4,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::file_handler","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_collection","",12,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_group","",13,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_header","",14,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::address_block","",18,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::bit","",19,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::bit_collection","",20,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::field","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::memory_map","",25,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::register","",26,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::register_file","",27,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::timesets::timeset","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model","",7,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::tester","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","origen::error","",46,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::stil","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator","",47,[[["formatter",3]],["result",6]]],[11,"fmt","origen::revision_control","",67,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::jtag","",73,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services","",72,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::igxl::ultraflex","",93,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::simulator","",94,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::smt::v93k::smt7::pattern_renderer","",75,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::smt::v93k::smt7","",95,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","origen::utility::location","",77,[[["formatter",3]],["result",6]]],[11,"fmt","origen","",86,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers","",16,[[["formatter",3]],["result",6]]],[11,"fmt","origen::error","",46,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator","",47,[[["formatter",3]],["result",6]]],[11,"try_from","origen::core::model::pins::pin","",10,[[],["result",4]]],[11,"from_str","origen::core::model::registers","",16,[[],["result",4]]],[11,"from_str","","",17,[[],["result",4]]],[11,"from_str","origen::generator::stil","",59,[[],["result",4]]],[11,"from_str","","",60,[[],["result",4]]],[11,"from_str","","",61,[[],["result",4]]],[11,"from_str","","",62,[[],["result",4]]],[11,"from_str","","",63,[[],["result",4]]],[11,"from_str","","",64,[[],["result",4]]],[11,"description","origen::error","",46,[[]]],[11,"initialize","origen::core::config","",89,[[]]],[11,"initialize","origen","",79,[[]]],[11,"initialize","","",80,[[]]],[11,"initialize","","",81,[[]]],[11,"initialize","","",82,[[]]],[11,"initialize","","",83,[[]]],[11,"initialize","","",84,[[]]],[11,"initialize","","",85,[[]]],[11,"initialize","","",86,[[]]],[11,"initialize","","",87,[[]]],[11,"initialize","","",88,[[]]],[11,"serialize","origen::core::model::pins::pin","",10,[[],["result",4]]],[11,"serialize","origen::core::tester","",41,[[],["result",4]]],[11,"serialize","origen::generator::ast","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","origen::generator::stil","",59,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","origen::utility::location","",77,[[],["result",4]]],[11,"deserialize","origen::core::application::config","",2,[[],["result",4]]],[11,"deserialize","origen::core::config","",3,[[],["result",4]]],[11,"deserialize","origen::core::model::pins::pin","",10,[[],["result",4]]],[11,"deserialize","origen::utility::location","",77,[[],["result",4]]]],"p":[[4,"Value"],[3,"Application"],[3,"Config"],[3,"Config"],[3,"Dut"],[3,"File"],[3,"FileHandler"],[3,"Model"],[4,"Endianness"],[3,"Pin"],[4,"PinActions"],[4,"PinRoles"],[3,"PinCollection"],[3,"PinGroup"],[3,"PinHeader"],[3,"StateTracker"],[4,"AccessType"],[4,"BitOrder"],[3,"AddressBlock"],[3,"Bit"],[3,"BitCollection"],[3,"Field"],[3,"SummaryField"],[3,"Reset"],[3,"EnumeratedValue"],[3,"MemoryMap"],[3,"Register"],[3,"RegisterFile"],[3,"SimpleTimeset"],[3,"Timeset"],[3,"Wavetable"],[3,"WaveGroup"],[3,"Wave"],[3,"Event"],[4,"EventActions"],[3,"Producer"],[4,"OptionType"],[4,"JobType"],[3,"Job"],[3,"Status"],[3,"Tester"],[3,"Stats"],[4,"TesterSource"],[8,"Interceptor"],[8,"TesterAPI"],[3,"User"],[3,"Error"],[3,"TestManager"],[3,"Node"],[4,"Attrs"],[3,"AST"],[4,"Return"],[8,"Processor"],[3,"FlattenText"],[3,"CycleCombiner"],[3,"PinActionCombiner"],[3,"ToString"],[3,"UpcaseComments"],[3,"STIL"],[4,"SignalType"],[4,"Termination"],[4,"State"],[4,"Base"],[4,"Alignment"],[4,"Selector"],[3,"Interface"],[3,"Credentials"],[3,"Status"],[3,"Designsync"],[3,"Git"],[8,"RevisionControlAPI"],[3,"RevisionControl"],[4,"Service"],[3,"Service"],[3,"Services"],[3,"Renderer"],[3,"Differ"],[3,"Location"],[3,"Logger"],[3,"STATUS"],[3,"ORIGEN_CONFIG"],[3,"LOGGER"],[3,"DUT"],[3,"TESTER"],[3,"PRODUCER"],[3,"SERVICES"],[3,"TEST"],[3,"INTERFACE"],[3,"USER"],[3,"CONFIG"],[3,"RegisterFieldIterator"],[3,"DummyRenderer"],[3,"DummyRendererWithInterceptors"],[3,"UltraFlex"],[3,"Renderer"],[3,"SMT7"],[3,"Inner"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);