initSidebarItems({"constant":[["MODES","The available Origen runtime modes"]],"enum":[["Value",""]],"fn":[["app",""],["clean_mode","Sanitizes the given mode string and returns it, but will exit the process if it is invalid"],["dut",""],["initialize","This is called immediately upon Origen booting"],["prepare_for_target_load","This will be called immediately before loading a fresh set of targets. Everything required to clear previous state from the existing targets should be initiated from here."],["producer",""],["services",""],["start_new_test","Clears the current test (pattern) AST and starts a new one, this will be called by the producer before loading the next pattern source file"],["tester",""],["with_current_job","Execute the given function with a reference to the current job. Returns an error if there is no current job, otherwise the result of the given function."],["with_current_job_mut","Execute the given function with a mutable reference to the current job. Returns an error if there is no current job, otherwise the result of the given function."]],"macro":[["add_children",""],["backend_expect",""],["backend_fail",""],["backend_lookup_error","Returns a error stating that the backend doesn't have an expected ID. This signals a bug somewhere and should only be used when we're expecting something to exists."],["display",""],["display_cyan",""],["display_cyanln",""],["display_green",""],["display_greenln",""],["display_red",""],["display_redln",""],["display_yellow",""],["display_yellowln",""],["displayln",""],["duplicate_error","Returns an Origen Error with pre-formatted message comlaining that someting already exists."],["error","Returns an Err with the given error message"],["exit_error","Exit the origen process with a failing exit code and a big ERROR banner"],["exit_fail","Exit the origen process with a failing exit code and a big FAIL banner"],["exit_pass","Exit the origen process with a passing exit code and a big PASS banner"],["exit_success","Exit the origen process with a passing exit code and a big SUCCESS banner"],["log_debug",""],["log_deprecated",""],["log_error",""],["log_info",""],["log_success",""],["log_trace",""],["log_warning",""],["lookup_error",""],["node",""],["push_pin_actions",""],["text",""],["text_line",""]],"mod":[["built_info",""],["core",""],["error",""],["generator",""],["macros",""],["prog_gen",""],["revision_control",""],["services",""],["testers",""],["utility",""]],"struct":[["DUT","The current device model, containing all metadata about hierarchy, regs, pins, specs, timing, etc. and responsible for maintaining the current state of the DUT (regs, pins, etc.)"],["INTERFACE","Storage for the current program generation run, can include multiple flows"],["LOGGER",""],["ORIGEN_CONFIG","Provides configuration information derived from origen.toml files found in the Origen installation and application file system paths"],["PRODUCER","Producer"],["SERVICES","Services owned by the current DUT, stored as a separate collection to avoid having to get a mutable ref on the DUT if the service needs mutation"],["STATUS","Provides status information derived from the runtime environment, e.g. if an app is present If an app is present then its Application struct is stored in here. Things like the current output and reference directories should be derived from here."],["TEST","Storage for the current test (pattern)"],["TESTER","The global tester model."],["USER","Provides info about the current user"]],"type":[["Result",""]]});