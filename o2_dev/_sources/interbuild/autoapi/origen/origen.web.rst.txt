==============
``origen.web``
==============

.. automodule:: origen.web

   .. contents::
      :local:


Submodules
==========

.. toctree::

   origen.web.origen_sphinx_extension
   origen.web.rustdoc
   origen.web.shorthand

.. currentmodule:: origen.web


Functions
=========

- :py:func:`clean`:
  Runs ``clean`` on any extension which supports it.

- :py:func:`get_sphinx_config_out_of_app`:
  Uses introspection/metaprogramming principles to discern Sphinx's ``conf.py``

- :py:func:`release`:
  General purpose release script that should cover basic cases.

- :py:func:`run_cmd`:
  Entry point for the ``web`` command. The subcommand and any arguments will be processed here then handed off

- :py:func:`run_sphinx`:
  Launches the Sphinx-build command with the necessary options and monitors the output.

- :py:func:`site_built`:
  Returns true if some static site pages are found in the applications web output directory. False otherwise.

- :py:func:`sphinx_cmd`:
  Given that we're running ``web:build``, processes the arguments and returns a command executing *sphinx build* with

- :py:func:`sphinx_extension_mods`:
  Returns a list of :sphinx_extensions:`Sphinx extensions <>` currently in ``conf.py`` as the actual modules.

- :py:func:`sphinx_extensions`:
  Returns a list of :sphinx_extensions:`Sphinx extensions <>` currently in ``conf.py`` as strings.

- :py:func:`sphinx_make`:
  Returns the path to the makefile created from ``sphinx quickstart``

- :py:func:`view_cmd`:
  Undocumented.


.. autofunction:: clean

.. autofunction:: get_sphinx_config_out_of_app

.. autofunction:: release

.. autofunction:: run_cmd

.. autofunction:: run_sphinx

.. autofunction:: site_built

.. autofunction:: sphinx_cmd

.. autofunction:: sphinx_extension_mods

.. autofunction:: sphinx_extensions

.. autofunction:: sphinx_make

.. autofunction:: view_cmd
