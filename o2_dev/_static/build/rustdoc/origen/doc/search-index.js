var searchIndex = JSON.parse('{\
"meta":{"doc":"","i":[[24,"IdGetters","meta","",null,null]],"p":[]},\
"origen":{"doc":"","i":[[3,"STATUS","origen","Provides status information derived from the runtime…",null,null],[3,"ORIGEN_CONFIG","","Provides configuration information derived from…",null,null],[3,"LOGGER","","",null,null],[3,"DUT","","The current device model, containing all metadata about…",null,null],[3,"TESTER","","The global tester model.",null,null],[3,"PRODUCER","","Producer",null,null],[3,"SERVICES","","Services owned by the current DUT, stored as a separate…",null,null],[3,"TEST","","Storage for the current test (pattern)",null,null],[3,"FLOW","","This is analogous to the TEST for test program duration,…",null,null],[3,"SESSIONS","","",null,null],[3,"LDAPS","","",null,null],[3,"USERS","","",null,null],[3,"MAILER","","",null,null],[4,"Value","","",null,null],[13,"Bits","","",0,null],[13,"Data","","",0,null],[5,"initialize","","This is called immediately upon Origen booting",null,[[["string",3],["option",4],["option",4]]]],[5,"app","","",null,[[],[["option",4],["application",3]]]],[5,"dut","","",null,[[],[["mutexguard",3],["dut",3]]]],[5,"tester","","",null,[[],[["mutexguard",3],["tester",3]]]],[5,"producer","","",null,[[],[["mutexguard",3],["producer",3]]]],[5,"sessions","","",null,[[],[["mutexguard",3],["sessions",3]]]],[5,"with_user_session","","",null,[[["string",3],["option",4]],["result",6]]],[5,"ldaps","","",null,[[],[["mutexguard",3],["ldaps",3]]]],[5,"users","","",null,[[],[["users",3],["rwlockreadguard",3]]]],[5,"users_mut","","",null,[[],[["users",3],["rwlockwriteguard",3]]]],[5,"with_current_user","","",null,[[],["result",6]]],[5,"with_user","","",null,[[],["result",6]]],[5,"mailer","","",null,[[],[["mailer",3],["rwlockreadguard",3]]]],[5,"mailer_mut","","",null,[[],[["mailer",3],["rwlockwriteguard",3]]]],[5,"with_current_job","","Execute the given function with a reference to the current…",null,[[],["result",6]]],[5,"with_current_job_mut","","Execute the given function with a mutable reference to the…",null,[[],["result",6]]],[5,"services","","",null,[[],[["mutexguard",3],["services",3]]]],[5,"clean_mode","","Sanitizes the given mode string and returns it, but will…",null,[[],["string",3]]],[5,"prepare_for_target_load","","This will be called immediately before loading a fresh set…",null,[[]]],[5,"start_new_test","","Clears the current test (pattern) AST and starts a new…",null,[[["string",3],["option",4]]]],[0,"macros","","",null,null],[0,"core","","",null,null],[0,"application","origen::core","",null,null],[3,"Application","origen::core::application","Represents the current application, an instance of this is…",null,null],[12,"root","","The full file system path to the application root (when…",1,null],[0,"config","","",null,null],[3,"Config","origen::core::application::config","",null,null],[12,"name","","",2,null],[12,"target","","",2,null],[12,"mode","","",2,null],[12,"output_directory","","Don\'t use this unless you know what you\'re doing, use…",2,null],[12,"reference_directory","","Don\'t use this unless you know what you\'re doing, use…",2,null],[12,"website_output_directory","","",2,null],[12,"website_source_directory","","",2,null],[12,"website_release_location","","",2,null],[12,"website_release_name","","",2,null],[12,"root","","",2,null],[11,"refresh","","",2,[[]]],[11,"check_defaults","","",2,[[["path",3]]]],[11,"build","","Builds a new config from all application.toml files found…",2,[[["path",3]],["config",3]]],[0,"target","origen::core::application","A default target/env for an application can be set by…",null,null],[5,"clean_name","origen::core::application::target","Sanitizes the given target/env name and returns it, but…",null,[[],["string",3]]],[5,"matches","","Returns an array of possible target/environment files that…",null,[[],[["pathbuf",3],["vec",3]]]],[5,"get","","Gets the currently enabled targets",null,[[],[["option",4],["vec",3]]]],[5,"set","","Sets the targets, overriding any that may be present",null,[[["vec",3]]]],[5,"reset","","Resets (deletes) the target back to its default value",null,[[]]],[5,"add","","Enables additional targets in the workspace",null,[[["vec",3]]]],[5,"remove","","Disables currently enables targets in the workspace",null,[[["vec",3]]]],[5,"all","","Returns all files from the given directory",null,[[],[["pathbuf",3],["vec",3]]]],[5,"set_workspace","","Sets the given key and value (currently only a string is…",null,[[]]],[5,"set_workspace_array","","Sets an Array-of-Strings workspace variable",null,[[["vec",3],["string",3]]]],[5,"delete_val","","Deletes the given key (and its val) from…",null,[[]]],[11,"new","origen::core::application","",1,[[["pathbuf",3]],["application",3]]],[11,"version","","Returns the application version, read from…",1,[[],[["result",6],["version",3]]]],[11,"set_version","","Sets the application version by writing it out to…",1,[[["version",3]],["result",6]]],[11,"with_config","","Execute the given function with a reference to the…",1,[[],["result",6]]],[11,"with_config_mut","","Execute the given function with a reference to the…",1,[[],["result",6]]],[11,"name","","Returns the application name",1,[[],["string",3]]],[11,"app_dir","","Returns a path to the current application\'s \'app\' dir…",1,[[],["pathbuf",3]]],[11,"resolve_path","","Resolves a directory/file path relative to the…",1,[[["option",4],["string",3]],["pathbuf",3]]],[11,"_output_directory","","Don\'t use this unless you know what you\'re doing, use…",1,[[],["pathbuf",3]]],[11,"_reference_directory","","Don\'t use this unless you know what you\'re doing, use…",1,[[],["pathbuf",3]]],[11,"website_output_directory","","",1,[[],["pathbuf",3]]],[11,"website_source_directory","","",1,[[],["pathbuf",3]]],[0,"config","origen::core","Collects the main Origen configuration options from all…",null,null],[3,"CONFIG","origen::core::config","",null,null],[3,"Config","","",null,null],[12,"python_cmd","","",3,null],[12,"pkg_server","","",3,null],[12,"pkg_server_push","","",3,null],[12,"pkg_server_pull","","",3,null],[12,"some_val","","",3,null],[12,"mailer_server","","",3,null],[12,"mailer_port","","",3,null],[12,"mailer_auth","","",3,null],[12,"mailer_domain","","",3,null],[12,"mailer_auth_email","","",3,null],[12,"mailer_auth_password","","",3,null],[12,"ldaps","","",3,null],[12,"default_encryption_key","","",3,null],[12,"default_encryption_nonce","","",3,null],[12,"user__default_dataset","","",3,null],[12,"user__datasets","","",3,null],[12,"user__password_auth_attempts","","",3,null],[12,"user__cache_passwords","","",3,null],[12,"user__password_reasons","","",3,null],[12,"password_encryption_key","","",3,null],[12,"password_encryption_nonce","","",3,null],[12,"user__dataset_mappings","","",3,null],[12,"service_users","","",3,null],[7,"DEFAULT_ENCRYPTION_KEY","","Default keys generated from…",null,null],[7,"DEFAULT_ENCRYPTION_NONCE","","default_encryption_nonce: ORIGEN NONCE",null,null],[11,"get_service_user","","",3,[[],[["option",4],["result",6]]]],[0,"dut","origen::core","",null,null],[3,"Dut","origen::core::dut","The DUT stores all objects associated with a particular…",null,null],[12,"name","","",4,null],[12,"models","","",4,null],[12,"bits","","",4,null],[12,"timesets","","",4,null],[12,"wavetables","","",4,null],[12,"wave_groups","","",4,null],[12,"waves","","",4,null],[12,"wave_events","","",4,null],[12,"pins","","",4,null],[12,"pin_groups","","",4,null],[12,"pin_headers","","",4,null],[12,"id_mappings","","",4,null],[12,"reg_descriptions","","Cache of descriptions parsed from reg definition files",4,null],[11,"get_timeset","","",4,[[],[["timeset",3],["option",4]]]],[11,"get_mut_timeset","","",4,[[],[["option",4],["timeset",3]]]],[11,"_get_timeset","","",4,[[],[["result",4],["error",3],["timeset",3]]]],[11,"_get_mut_timeset","","",4,[[],[["result",4],["timeset",3],["error",3]]]],[11,"_get_cloned_timeset","","",4,[[],[["error",3],["timeset",3],["result",4]]]],[11,"get_wavetable","","",4,[[],[["wavetable",3],["option",4]]]],[11,"get_mut_wavetable","","",4,[[],[["option",4],["wavetable",3]]]],[11,"_get_wavetable","","",4,[[],[["result",4],["wavetable",3],["error",3]]]],[11,"_get_mut_wavetable","","",4,[[],[["result",4],["wavetable",3],["error",3]]]],[11,"_get_cloned_wavetable","","",4,[[],[["wavetable",3],["result",4],["error",3]]]],[11,"get_wave_group","","",4,[[],[["wavegroup",3],["option",4]]]],[11,"get_mut_wave_group","","",4,[[],[["option",4],["wavegroup",3]]]],[11,"_get_wave_group","","",4,[[],[["wavegroup",3],["result",4],["error",3]]]],[11,"_get_mut_wave_group","","",4,[[],[["result",4],["wavegroup",3],["error",3]]]],[11,"_get_cloned_wave_group","","",4,[[],[["result",4],["wavegroup",3],["error",3]]]],[11,"get_wave","","",4,[[],[["wave",3],["option",4]]]],[11,"get_mut_wave","","",4,[[],[["option",4],["wave",3]]]],[11,"_get_wave","","",4,[[],[["wave",3],["error",3],["result",4]]]],[11,"_get_mut_wave","","",4,[[],[["wave",3],["result",4],["error",3]]]],[11,"_get_cloned_wave","","",4,[[],[["result",4],["wave",3],["error",3]]]],[11,"get_event","","",4,[[],[["option",4],["event",3]]]],[11,"get_mut_event","","",4,[[],[["event",3],["option",4]]]],[11,"_get_event","","",4,[[],[["result",4],["event",3],["error",3]]]],[11,"_get_mut_event","","",4,[[],[["result",4],["error",3],["event",3]]]],[11,"_get_cloned_event","","",4,[[],[["error",3],["event",3],["result",4]]]],[11,"get_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"get_mut_pin","","",4,[[],[["pin",3],["option",4]]]],[11,"_get_pin","","",4,[[],[["result",4],["error",3],["pin",3]]]],[11,"_get_mut_pin","","",4,[[],[["result",4],["pin",3],["error",3]]]],[11,"_get_cloned_pin","","",4,[[],[["result",4],["pin",3],["error",3]]]],[11,"get_pin_group","","",4,[[],[["pingroup",3],["option",4]]]],[11,"get_mut_pin_group","","",4,[[],[["option",4],["pingroup",3]]]],[11,"_get_pin_group","","",4,[[],[["pingroup",3],["error",3],["result",4]]]],[11,"_get_mut_pin_group","","",4,[[],[["result",4],["error",3],["pingroup",3]]]],[11,"_get_cloned_pin_group","","",4,[[],[["error",3],["result",4],["pingroup",3]]]],[11,"get_pin_header","","",4,[[],[["option",4],["pinheader",3]]]],[11,"get_mut_pin_header","","",4,[[],[["pinheader",3],["option",4]]]],[11,"_get_pin_header","","",4,[[],[["error",3],["pinheader",3],["result",4]]]],[11,"_get_mut_pin_header","","",4,[[],[["result",4],["error",3],["pinheader",3]]]],[11,"_get_cloned_pin_header","","",4,[[],[["error",3],["pinheader",3],["result",4]]]],[11,"new","","",4,[[],["dut",3]]],[11,"change","","Change the DUT, this replaces the existing mode with a…",4,[[]]],[11,"mut_model","","Returns a mutable reference to the top-level model",4,[[],["model",3]]],[11,"model","","Returns an immutable reference to the top-level model",4,[[],["model",3]]],[11,"get_mut_model","","Get a mutable reference to the model with the given ID",4,[[],[["result",6],["model",3]]]],[11,"get_model","","Get a read-only reference to the model with the given ID,…",4,[[],[["model",3],["result",6]]]],[11,"get_mut_memory_map","","Get a mutable reference to the memory map with the given ID",4,[[],[["memorymap",3],["result",6]]]],[11,"get_memory_map","","Get a read-only reference to the memory map with the given…",4,[[],[["result",6],["memorymap",3]]]],[11,"get_mut_address_block","","Get a mutable reference to the address block with the…",4,[[],[["addressblock",3],["result",6]]]],[11,"get_address_block","","Get a read-only reference to the address block with the…",4,[[],[["addressblock",3],["result",6]]]],[11,"get_mut_register_file","","Get a mutable reference to the register file with the…",4,[[],[["registerfile",3],["result",6]]]],[11,"get_register_file","","Get a read-only reference to the register file with the…",4,[[],[["result",6],["registerfile",3]]]],[11,"get_mut_register","","Get a mutable reference to the register with the given ID",4,[[],[["result",6],["register",3]]]],[11,"get_register","","Get a read-only reference to the register with the given…",4,[[],[["register",3],["result",6]]]],[11,"get_mut_bit","","Get a mutable reference to the bit with the given ID",4,[[],[["result",6],["bit",3]]]],[11,"get_bit","","Get a read-only reference to the bit with the given ID,…",4,[[],[["bit",3],["result",6]]]],[11,"create_model","","Create a new model adding it to the existing parent model…",4,[[["option",4],["option",4]],["result",6]]],[11,"create_memory_map","","",4,[[["option",4]],["result",6]]],[11,"create_address_block","","",4,[[["option",4],["option",4],["option",4],["accesstype",4]],["result",6]]],[11,"create_reg","","",4,[[["option",4],["option",4],["string",3]],["result",6]]],[11,"create_test_bit","","Creates a bit for testing bit collections and so on, does…",4,[[]]],[11,"get_reg_description","","",4,[[],[["string",3],["option",4]]]],[0,"file_handler","origen::core","The file_handler is responsible for processing the file…",null,null],[3,"File","origen::core::file_handler","",null,null],[12,"file_obj","","",5,null],[12,"path","","",5,null],[3,"FileHandler","","This is an iterator + external API for consuming the file…",null,null],[11,"create","","Creates or overrides the given file and panics if the…",5,[[["pathbuf",3]]]],[11,"open","","Attempts to open the given file for reading, returning an…",5,[[["pathbuf",3]],["result",6]]],[11,"mkdir_p","","",5,[[["path",3]]]],[11,"write","","Writes content to the underlying file and panics if the…",5,[[]]],[11,"write_ln","","",5,[[]]],[11,"new","","",6,[[],["filehandler",3]]],[11,"init","","",6,[[["vec",3],["string",3]],["result",6]]],[11,"len","","",6,[[]]],[0,"lsf","origen::core","This module is responsible for abstracting and managing…",null,null],[5,"is_running_remotely","origen::core::lsf","",null,[[]]],[0,"metadata","origen::core","",null,null],[4,"Metadata","origen::core::metadata","",null,null],[13,"String","","",7,null],[13,"Usize","","",7,null],[13,"BigInt","","",7,null],[13,"BigUint","","",7,null],[13,"Bool","","",7,null],[13,"Float","","",7,null],[13,"Vec","","",7,null],[13,"Serialized","","",7,null],[11,"to_class_str","","",7,[[]]],[11,"to_toml_value","","",7,[[],[["result",6],["value",4]]]],[11,"as_string","","",7,[[],[["string",3],["result",6]]]],[11,"as_bigint","","",7,[[],[["bigint",3],["result",6]]]],[11,"as_biguint","","",7,[[],[["result",6],["biguint",3]]]],[11,"as_bool","","",7,[[],["result",6]]],[11,"as_float","","",7,[[],["result",6]]],[11,"as_vec","","",7,[[],[["result",6],["vec",3]]]],[0,"model","origen::core","",null,null],[3,"Model","origen::core::model","",null,null],[12,"id","","",8,null],[12,"name","","",8,null],[12,"parent_id","","The only one without a parent is the top-level DUT model",8,null],[12,"sub_blocks","","All children of this block/model, which are themselves…",8,null],[12,"memory_maps","","All registers owned by this model are arranged within…",8,null],[12,"pins","","",8,null],[12,"pin_groups","","",8,null],[12,"pin_headers","","",8,null],[12,"timesets","","",8,null],[12,"address_unit_bits","","Represents the number of bits in an address increment…",8,null],[12,"offset","","The starting address of the block expressed in…",8,null],[12,"services","","",8,null],[0,"pins","","",null,null],[3,"PinCollection","origen::core::model::pins","",null,null],[3,"StateTracker","","",null,null],[4,"Endianness","","",null,null],[13,"LittleEndian","","",9,null],[13,"BigEndian","","",9,null],[0,"pin","","",null,null],[3,"Resolver","origen::core::model::pins::pin","",null,null],[3,"PinAction","","Single \'action\' applicable to a pin",null,null],[12,"action","","",10,null],[3,"Pin","","Model for single pin.",null,null],[12,"model_id","","",11,null],[12,"id","","",11,null],[12,"name","","",11,null],[12,"data","","",11,null],[12,"action","","",11,null],[12,"reset_action","","",11,null],[12,"aliases","","--- Meta Data ---/// Any aliases this Pin has.",11,null],[12,"role","","",11,null],[12,"metadata","","",11,null],[12,"groups","","",11,null],[4,"PinRoles","","Available Pin Roles",null,null],[13,"Standard","","",12,null],[13,"Power","","",12,null],[13,"Ground","","",12,null],[13,"Virtual","","",12,null],[13,"Other","","",12,null],[8,"ResolvePinActions","","",null,null],[10,"pin_action_resolver","","",13,[[["string",3]],["resolver",3]]],[10,"mut_pin_action_resolver","","",13,[[["string",3]],["resolver",3]]],[11,"resolve_pin_action","","",13,[[["pinaction",3],["string",3]],[["string",3],["option",4]]]],[11,"_resolve_pin_action","","",13,[[["pinaction",3],["string",3]],[["string",3],["result",6]]]],[11,"resolve_pin_actions","","",13,[[["string",3],["vec",3]],[["vec",3],["option",4]]]],[11,"update_mapping","","",13,[[["string",3],["pinaction",3]]]],[11,"new","","",14,[[]]],[11,"resolve","","",14,[[["pinaction",3]],[["string",3],["option",4]]]],[11,"update_mapping","","",14,[[["string",3],["pinaction",3]]]],[11,"resolve_all","","",14,[[["vec",3]],[["vec",3],["option",4]]]],[11,"mapping","","",14,[[],["indexmap",3]]],[11,"new","","",10,[[["display",8],["asref",8]]]],[11,"checked_new","","",10,[[["display",8],["asref",8]],["result",6]]],[11,"from_delimiter_optional","","",10,[[["display",8],["asref",8]],["result",6]]],[11,"standard_actions","","",10,[[],[["string",3],["hashmap",3]]]],[11,"is_standard","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from_action_str","","",10,[[],[["result",6],["vec",3]]]],[11,"push_to_string","","",10,[[["string",3]],["result",6]]],[11,"to_action_string","","",10,[[["vec",3]],[["string",3],["result",6]]]],[11,"to_bool","","",10,[[],["result",6]]],[11,"to_bool_unchecked","","",10,[[]]],[11,"to_logic","","",10,[[],["result",6]]],[11,"to_logic_unchecked","","",10,[[]]],[11,"to_data","","",10,[[["pinaction",3],["vec",3]],[["result",6],["biguint",3]]]],[11,"to_data_unchecked","","",10,[[["pinaction",3],["vec",3]],["biguint",3]]],[11,"drive_high","","",10,[[]]],[11,"drive_low","","",10,[[]]],[11,"verify_high","","",10,[[]]],[11,"verify_low","","",10,[[]]],[11,"capture","","",10,[[]]],[11,"highz","","",10,[[]]],[11,"add_metadata_id","","",11,[[],["result",6]]],[11,"get_metadata_id","","",11,[[],["option",4]]],[11,"new","","",11,[[["option",4],["string",3],["pinaction",3]],["pin",3]]],[0,"pin_group","origen::core::model::pins","",null,null],[3,"PinGroup","origen::core::model::pins::pin_group","",null,null],[12,"model_id","","",15,null],[12,"id","","",15,null],[12,"name","","",15,null],[12,"endianness","","",15,null],[12,"pin_ids","","",15,null],[11,"new","","",15,[[["vec",3],["option",4],["endianness",4]],["pingroup",3]]],[11,"len","","",15,[[]]],[11,"is_little_endian","","",15,[[]]],[11,"is_big_endian","","",15,[[]]],[11,"to_identifier","","",15,[[]]],[11,"pin_names","","",15,[[["dut",3]],[["vec",3],["result",6]]]],[11,"update","","",15,[[["transaction",3],["dut",3]],["result",6]]],[11,"get_actions","","",15,[[["dut",3]],[["vec",3],["result",6]]]],[11,"get_reset_actions","","",15,[[["dut",3]],[["vec",3],["result",6]]]],[11,"reset","","",15,[[["dut",3]],["result",6]]],[11,"set_action","","",15,[[["pinaction",3],["dut",3]],["result",6]]],[11,"set_actions","","",15,[[["vec",3],["dut",3]],["result",6]]],[11,"slice","","",15,[[],[["result",6],["pinstore",3]]]],[0,"pin_header","origen::core::model::pins","",null,null],[3,"PinHeader","origen::core::model::pins::pin_header","",null,null],[12,"model_id","","",16,null],[12,"id","","",16,null],[12,"name","","",16,null],[12,"pin_names","","",16,null],[11,"new","","",16,[[["vec",3],["string",3]]]],[11,"create_pin_header","origen::core::dut","",4,[[["vec",3],["string",3]],[["result",4],["pinheader",3],["error",3]]]],[11,"register_pin_header","origen::core::model","",8,[[["vec",3],["string",3]],[["error",3],["result",4],["pinheader",3]]]],[11,"get_pin_header_id","","",8,[[],["option",4]]],[0,"pin_store","origen::core::model::pins","",null,null],[3,"PinStore","origen::core::model::pins::pin_store","Model for an anonymous pin group",null,null],[12,"endianness","","",17,null],[12,"pin_ids","","",17,null],[11,"new","","",17,[[["vec",3],["option",4],["endianness",4]]]],[11,"from_grp_identifiers","","",17,[[["vec",3],["dut",3]],["result",6]]],[11,"len","","",17,[[]]],[11,"slice_names","","",17,[[],[["result",6],["pinstore",3]]]],[11,"is_little_endian","","",17,[[]]],[11,"is_big_endian","","",17,[[]]],[11,"pin_names","","",17,[[["dut",3]],[["vec",3],["result",6]]]],[11,"contains_identifier","","",17,[[["dut",3]],["result",6]]],[11,"update","","",17,[[["transaction",3],["dut",3]],["result",6]]],[11,"get_actions","","",17,[[["dut",3]],[["vec",3],["result",6]]]],[11,"get_reset_actions","","",17,[[["dut",3]],[["vec",3],["result",6]]]],[11,"reset","","",17,[[["dut",3]],["result",6]]],[11,"set_action","","",17,[[["pinaction",3],["dut",3]],["result",6]]],[11,"set_actions","","",17,[[["vec",3],["dut",3]],["result",6]]],[6,"PinGroupIdendifer","origen::core::model::pins","",null,null],[11,"from_group","","",18,[[["dut",3]],["result",6]]],[11,"from_pin_store","","",18,[[["dut",3],["pinstore",3]],["result",6]]],[11,"from_pin_group","","",18,[[["dut",3],["pingroup",3]],["result",6]]],[11,"pin_names","","",18,[[],[["vec",3],["string",3]]]],[11,"contains_group_identifier","","",18,[[["pingroupidendifer",6],["dut",3]],["result",6]]],[11,"as_ids","","",18,[[],["vec",3]]],[11,"drive_high","","Applies the drive-high symbol to all the pins on this bus…",18,[[]]],[11,"drive_high_nodes","","Applies the drive-high symbol to all the pins on this bus…",18,[[],[["node",3],["vec",3]]]],[11,"drive_low","","Identical to \\\"drive_high\\\" except uses the drive-low symbol…",18,[[]]],[11,"drive_low_nodes","","Identical to \\\"drive_low_nodes\\\" except uses the drive-low…",18,[[],[["node",3],["vec",3]]]],[11,"drive","","Drives all pins to either the drive-high character, if…",18,[[]]],[11,"drive_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"verify_high","","",18,[[]]],[11,"verify_high_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"verify_low","","",18,[[]]],[11,"verify_low_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"verify","","",18,[[]]],[11,"verify_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"capture","","",18,[[]]],[11,"capture_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"highz","","",18,[[]]],[11,"highz_nodes","","",18,[[],[["node",3],["vec",3]]]],[11,"set_action","","Sets all the pins in this bus to an arbitrary action,…",18,[[]]],[11,"set_actions","","",18,[[["vec",3]],["result",6]]],[11,"set_action_nodes","","Sets all the pins in this bus to an arbitrary action,…",18,[[],[["node",3],["vec",3]]]],[11,"set_from_transaction","","Sets the pin actions per the given transaction Differs…",18,[[["transaction",3]],["result",6]]],[11,"set_from_transaction_nodes","","",18,[[["transaction",3]],[["result",6],["vec",3]]]],[11,"get_actions","","",18,[[],[["pinaction",3],["vec",3]]]],[11,"get_reset_actions","","",18,[[],[["pinaction",3],["vec",3]]]],[11,"reset","","",18,[[]]],[11,"push_transaction","","Generates a transaction on the pin bus and pushes the…",18,[[["transaction",3]],["result",6]]],[11,"push_transaction_nodes","","Generate a transaction on the pin bus. The data, data…",18,[[["transaction",3]],[["result",6],["vec",3]]]],[11,"cycle","","Push a cycle to the AST",18,[[]]],[11,"cycles","","",18,[[]]],[11,"repeat","","Add number of compressed cycles indicated by count",18,[[]]],[11,"repeat2","","Repeat with two arguments - count and compressable",18,[[]]],[11,"register_pin","origen::core::model","",8,[[["option",4],["option",4],["pinaction",3],["endianness",4]],[["result",4],["error",3]]]],[11,"register_pin_group","","",8,[[["vec",3],["option",4],["endianness",4]],[["error",3],["result",4],["pingroup",3]]]],[11,"get_pin_id","","",8,[[],["option",4]]],[11,"get_pin_group_id","","",8,[[],["option",4]]],[11,"add_pin","origen::core::dut","",4,[[["endianness",4],["option",4],["option",4],["option",4],["vec",3]],[["pingroup",3],["result",4],["error",3]]]],[11,"add_pin_alias","","",4,[[],[["result",4],["error",3]]]],[11,"group_pins_by_name","","",4,[[["option",4],["vec",3],["string",3],["endianness",4]],[["pingroup",3],["result",4],["error",3]]]],[11,"verify_names","","Given a group/collection of pin names, verify: * Each pin…",4,[[["vec",3]],[["vec",3],["error",3],["result",4]]]],[11,"collect_grp_ids_as_pin_ids","","",4,[[["vec",3]],[["result",6],["vec",3]]]],[11,"collect","","",4,[[["option",4],["vec",3],["endianness",4]],[["pinstore",3],["error",3],["result",4]]]],[11,"pin_names_contain","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"find_in_names","","",4,[[["vec",3]],[["error",3],["option",4],["result",4]]]],[11,"index_of","","Given a pin or alias name, finds either its name or alias…",4,[[],[["error",3],["option",4],["result",4]]]],[11,"resolve_to_physical_pin","","",4,[[],[["option",4],["pin",3]]]],[11,"data_fits_in_pins","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"verify_data_fits","","",4,[[],[["result",4],["error",3]]]],[11,"verify_action_string_fits","","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"pin_group_contains","","Given a pin name, check if the pin or any of its aliases…",4,[[],[["result",4],["error",3]]]],[11,"contains","","",4,[[]]],[11,"_contains","","",4,[[]]],[11,"_resolve_group_to_physical_pins","","",4,[[],[["vec",3],["error",3],["result",4]]]],[11,"_resolve_groups_to_physical_pin_ids","","",4,[[["vec",3]],[["result",4],["vec",3],["error",3]]]],[11,"_resolve_to_flattened_pins","","",4,[[["vec",3]],[["vec",3],["error",3],["result",4]]]],[11,"pin_group_to_ids","","Given a pin group name and model ID, converts it to a…",4,[[],[["result",4],["error",3]]]],[11,"new","origen::core::model::pins","Creates a new state storage container. Creating a new…",19,[[["option",4],["dut",3]]]],[11,"update","","Given a physical pin name, action, and data, updates the…",19,[[["vec",3],["dut",3]],[["result",4],["error",3]]]],[11,"to_symbols","","Processes the current state into a vector of \'state…",19,[[["string",3],["timeset",3],["dut",3]],[["vec",3],["error",3],["result",4]]]],[11,"names","","",19,[[],[["vec",3],["string",3]]]],[11,"contains_action","","",19,[[["pinaction",3]]]],[0,"registers","origen::core::model","See section 3.5.1 in this doc for a good description of…",null,null],[4,"AccessType","origen::core::model::registers","",null,null],[13,"RO","","",20,null],[13,"RW","","",20,null],[13,"RC","","",20,null],[13,"RS","","",20,null],[13,"WRC","","",20,null],[13,"WRS","","",20,null],[13,"WC","","",20,null],[13,"WS","","",20,null],[13,"WSRC","","",20,null],[13,"WCRS","","",20,null],[13,"W1C","","",20,null],[13,"W1S","","",20,null],[13,"W1T","","",20,null],[13,"W0C","","",20,null],[13,"W0S","","",20,null],[13,"W0T","","",20,null],[13,"W1SRC","","",20,null],[13,"W1CRS","","",20,null],[13,"W0SRC","","",20,null],[13,"W0CRS","","",20,null],[13,"WO","","",20,null],[13,"WOC","","",20,null],[13,"WORZ","","",20,null],[13,"WOS","","",20,null],[13,"W1","","",20,null],[13,"WO1","","",20,null],[13,"DC","","",20,null],[13,"ROWZ","","",20,null],[13,"Unimplemented","","",20,null],[4,"BitOrder","","",null,null],[13,"LSB0","","",21,null],[13,"MSB0","","",21,null],[0,"address_block","","",null,null],[3,"AddressBlock","origen::core::model::registers::address_block","Represents a single, contiguous block of memory in a…",null,null],[12,"id","","",22,null],[12,"memory_map_id","","",22,null],[12,"name","","",22,null],[12,"offset","","The starting address of the address block expressed in…",22,null],[12,"range","","The number of addressable units in the address block.",22,null],[12,"width","","The maximum number of bits that can be accessed by a…",22,null],[12,"access","","",22,null],[12,"registers","","",22,null],[12,"register_files","","",22,null],[11,"model","","Returns an immutable reference to the parent model",22,[[["mutexguard",3]],[["model",3],["origenresult",6]]]],[11,"memory_map","","Returns an immutable reference to the parent memory map",22,[[["mutexguard",3]],[["origenresult",6],["memorymap",3]]]],[11,"address_unit_bits","","Returns the address_unit_bits size from the parent memory…",22,[[["mutexguard",3]],["origenresult",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",22,[[["mutexguard",3]],["origenresult",6]]],[11,"friendly_path","","Returns a path to this address_block like…",22,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[11,"get_register_id","","Get the ID from the given register name",22,[[],["origenresult",6]]],[11,"console_display","","",22,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[0,"bit","origen::core::model::registers","",null,null],[3,"Bit","origen::core::model::registers::bit","",null,null],[12,"id","","",23,null],[12,"register_id","","",23,null],[12,"overlay","","",23,null],[12,"overlay_snapshots","","",23,null],[12,"state","","The individual bits mean the following: 0 - Data value 1 -…",23,null],[12,"device_state","","The state we think the device has, only bits [2:0] are…",23,null],[12,"state_snapshots","","The state of the bit at the last reset",23,null],[12,"access","","",23,null],[12,"position","","",23,null],[17,"ZERO","","",null,null],[17,"ONE","","",null,null],[17,"UNDEFINED","","",null,null],[11,"snapshot","","",23,[[]]],[11,"is_changed","","",23,[[],["result",6]]],[11,"rollback","","",23,[[],["result",6]]],[11,"copy_state","","Copies the state (data and flags) and overlay attributes…",23,[[["bit",3]]]],[11,"clear_flags","","",23,[[]]],[11,"clear_verify_flag","","",23,[[]]],[11,"capture","","",23,[[]]],[11,"set_undefined","","Sets the bit\'s data value to X",23,[[]]],[11,"set_hiz","","Sets the bit\'s data value to Z",23,[[]]],[11,"has_known_value","","Returns true if not in X or Z state",23,[[]]],[11,"is_x","","",23,[[]]],[11,"is_z","","",23,[[]]],[11,"is_to_be_verified","","",23,[[]]],[11,"is_to_be_captured","","",23,[[]]],[11,"has_overlay","","",23,[[]]],[11,"is_readable","","",23,[[]]],[11,"is_writeable","","",23,[[]]],[11,"is_writable","","",23,[[]]],[11,"is_modified_since_reset","","",23,[[]]],[11,"state_char","","",23,[[]]],[11,"verify","","",23,[[],["result",6]]],[11,"is_update_required","","Returns true if the current bit state differs from the…",23,[[]]],[11,"update_device_state","","",23,[[],["result",6]]],[11,"data","","",23,[[],["result",6]]],[11,"set_data","","",23,[[]]],[11,"force_data","","Like set_data(), but will force the data value in the…",23,[[]]],[11,"get_overlay","","",23,[[],[["string",3],["option",4]]]],[11,"set_overlay","","",23,[[["option",4]]]],[11,"verify_enable_flag","","",23,[[]]],[11,"capture_enable_flag","","",23,[[]]],[11,"overlay_enable_flag","","",23,[[]]],[11,"reset","","Applies the given state value, making it the new reset…",23,[[]]],[0,"bit_collection","origen::core::model::registers","",null,null],[3,"BitCollection","origen::core::model::registers::bit_collection","",null,null],[12,"reg_id","","Optionally contains the ID of the reg that owns the bits",24,null],[12,"field","","Optionally contains the name of the field that owns the bits",24,null],[12,"whole_reg","","When true the BitCollection contains all bits of the…",24,null],[12,"whole_field","","When true the BitCollection contains all bits of the field…",24,null],[12,"bits","","",24,null],[12,"i","","Iterator index and vars",24,null],[12,"shift_left","","",24,null],[12,"shift_logical","","",24,null],[11,"for_bit_ids","","Creates a BitCollection from the given collection of bit…",24,[[["vec",3],["mutexguard",3]],["bitcollection",3]]],[11,"for_register","","Creates a BitCollection for the given register, normally…",24,[[["register",3],["mutexguard",3]],["bitcollection",3]]],[11,"for_field","","Creates a BitCollection for the given register field,…",24,[[["vec",3],["mutexguard",3]],["bitcollection",3]]],[11,"sort_bits","","Sort the bits in the collection by their position property",24,[[]]],[11,"position","","If the BitCollection contains > 1 bits, then this will…",24,[[]]],[11,"access","","Returns the access attribute of the BitCollection. This…",24,[[],[["accesstype",4],["result",6]]]],[11,"set_data","","",24,[[["biguint",3]]]],[11,"data","","Returns the data value of the BitCollection. This will…",24,[[],[["result",6],["biguint",3]]]],[11,"get_overlay","","Returns the overlay value of the BitCollection. This will…",24,[[],[["option",4],["result",6]]]],[11,"set_overlay","","Set the overlay value of the BitCollection.",24,[[["option",4]],["bitcollection",3]]],[11,"has_known_value","","Returns true if no contained bits are in X or Z state",24,[[]]],[11,"range","","Returns a new BitCollection containing the subset of bits…",24,[[],["bitcollection",3]]],[11,"clear_verify_flag","","Clears the verify flag on all bits in the collection",24,[[],["bitcollection",3]]],[11,"is_to_be_verified","","Returns true if any bits in the collection has their…",24,[[]]],[11,"is_to_be_captured","","Returns true if any bits in the collection has their…",24,[[]]],[11,"has_overlay","","Returns true if any bits in the collection has an overlay…",24,[[]]],[11,"is_writeable","","Returns true if any bits in the collection is writeable",24,[[]]],[11,"is_writable","","",24,[[]]],[11,"is_readable","","Returns true if any bits in the collection is readable",24,[[]]],[11,"is_update_required","","",24,[[]]],[11,"update_device_state","","Set the collection\'s device_state field to be the same as…",24,[[],[["result",6],["bitcollection",3]]]],[11,"clear_flags","","",24,[[],["bitcollection",3]]],[11,"capture","","",24,[[],["bitcollection",3]]],[11,"set_undefined","","",24,[[],["bitcollection",3]]],[11,"reset","","Resets the bits if the collection is for a whole bit field…",24,[[["mutexguard",3]],[["result",6],["bitcollection",3]]]],[11,"reset_val","","Returns the data value of the given reset type. This will…",24,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"is_modified_since_reset","","Returns true if the data value of any of the bits has been…",24,[[]]],[11,"is_in_reset_state","","Returns true if the data value of all bits matches that of…",24,[[["mutexguard",3],["option",4]],["result",6]]],[11,"snapshot","","Take a snapshot of the current state of all bits, the…",24,[[],[["result",6],["bitcollection",3]]]],[11,"is_changed","","Returns true if the state of any bits has changed vs. the…",24,[[],["result",6]]],[11,"rollback","","Rollback the state of all bits to the given snapshot. An…",24,[[],[["result",6],["bitcollection",3]]]],[11,"verify","","Trigger a verify operation on the register",24,[[["option",4],["mutexguard",3],["biguint",3]],[["option",4],["result",6]]]],[11,"to_verify_node","","",24,[[["option",4],["mutexguard",3],["biguint",3]],[["result",6],["option",4]]]],[11,"to_verify_transaction","","",24,[[["option",4],["mutexguard",3],["biguint",3]],[["transaction",3],["result",6]]]],[11,"set_verify_flag","","Equivalent to calling verify() but without invoking a…",24,[[["option",4],["biguint",3]],[["result",6],["bitcollection",3]]]],[11,"write","","Trigger a write operation on the register",24,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"to_write_node","","",24,[[["mutexguard",3]],[["result",6],["option",4]]]],[11,"to_write_transaction","","",24,[[["mutexguard",3]],[["transaction",3],["result",6]]]],[11,"reg","","Returns the Register object associated with the…",24,[[["mutexguard",3]],[["register",3],["result",6]]]],[11,"field","","Returns the bit Field object associated with the…",24,[[["mutexguard",3]],[["result",6],["field",3]]]],[11,"shift_left","","",24,[[],["result",6]]],[11,"shift_right","","",24,[[],["result",6]]],[11,"shift_out_left","","",24,[[],["bitcollection",3]]],[11,"shift_out_right","","",24,[[],["bitcollection",3]]],[11,"len","","",24,[[]]],[11,"verify_enables","","",24,[[],["biguint",3]]],[11,"capture_enables","","",24,[[],["biguint",3]]],[11,"overlay_enables","","",24,[[],["biguint",3]]],[11,"status_str","","",24,[[],[["string",3],["result",6]]]],[0,"field","origen::core::model::registers","",null,null],[3,"Field","origen::core::model::registers::field","Named collections of bits within a register",null,null],[12,"reg_id","","",25,null],[12,"name","","",25,null],[12,"description","","",25,null],[12,"offset","","Offset from the start of the register in bits.",25,null],[12,"width","","Width of the field in bits.",25,null],[12,"access","","",25,null],[12,"resets","","Contains any reset values defined for this field, if not…",25,null],[12,"enums","","",25,null],[12,"related_fields","","",25,null],[12,"filename","","The (Python) source file where the field was defined",25,null],[12,"lineno","","The (Python) source file line number where the field was…",25,null],[3,"SummaryField","","A lightweight version of a Field that is returned by the…",null,null],[12,"reg_id","","",26,null],[12,"name","","",26,null],[12,"offset","","",26,null],[12,"width","","Width of the field in bits.",26,null],[12,"access","","",26,null],[12,"spacer","","",26,null],[3,"Reset","","",null,null],[12,"value","","",27,null],[12,"mask","","",27,null],[3,"EnumeratedValue","","",null,null],[12,"name","","",28,null],[12,"description","","",28,null],[12,"value","","",28,null],[11,"add_enum","","",25,[[["biguint",3]],[["enumeratedvalue",3],["result",6]]]],[11,"add_reset","","",25,[[["option",4],["biguint",3]],[["result",6],["reset",3]]]],[11,"bit_ids","","Returns the bit IDs associated with the field, wrapped in…",25,[[["mutexguard",3]],["vec",3]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",25,[[["mutexguard",3]],["bitcollection",3]]],[11,"reset","","Applies the given reset type, if the field doesn\'t have a…",25,[[["mutexguard",3]]]],[11,"bits","","Returns the bits associated with the field, wrapped in a…",26,[[["mutexguard",3]],["bitcollection",3]]],[0,"macro_api","origen::core::model::registers","",null,null],[0,"memory_map","","",null,null],[3,"MemoryMap","origen::core::model::registers::memory_map","",null,null],[12,"name","","",29,null],[12,"id","","",29,null],[12,"model_id","","",29,null],[12,"address_unit_bits","","Represents the number of bits of an address increment…",29,null],[12,"address_blocks","","",29,null],[11,"get_address_block_id","","Get the ID from the given address block name",29,[[],["origenresult",6]]],[11,"friendly_path","","Returns a path to this memory_map like…",29,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[11,"model","","Returns an immutable reference to the parent model",29,[[["mutexguard",3]],[["model",3],["origenresult",6]]]],[11,"console_display","","",29,[[["mutexguard",3]],[["origenresult",6],["string",3]]]],[0,"register","origen::core::model::registers","",null,null],[3,"Register","origen::core::model::registers::register","",null,null],[12,"id","","",30,null],[12,"address_block_id","","",30,null],[12,"register_file_id","","",30,null],[12,"name","","",30,null],[12,"description","","",30,null],[12,"dim","","The dimension of the register, defaults to 1.",30,null],[12,"offset","","Address offset from the start of the parent address block…",30,null],[12,"size","","The size of the register in bits.",30,null],[12,"access","","",30,null],[12,"fields","","",30,null],[12,"bit_ids","","Contains the IDs of all bits owned by the register",30,null],[12,"bit_order","","",30,null],[12,"filename","","The (Python) source file from which the register was defined",30,null],[12,"lineno","","The (Python) source file line number where the register…",30,null],[3,"RegisterFieldIterator","","An iterator for a register\'s fields which yields them in…",null,null],[3,"FieldContainer","","",null,null],[12,"name","","",31,null],[12,"description","","",31,null],[12,"offset","","",31,null],[12,"width","","",31,null],[12,"access","","",31,null],[12,"resets","","",31,null],[12,"enums","","",31,null],[12,"filename","","",31,null],[12,"lineno","","",31,null],[3,"ResetVal","","",null,null],[12,"name","","",32,null],[12,"value","","",32,null],[12,"mask","","",32,null],[3,"FieldEnum","","",null,null],[12,"name","","",33,null],[12,"description","","",33,null],[12,"value","","",33,null],[11,"reset_val_for_bit","","Returns the reset value of the given bit index for the…",30,[[],[["result",6],["option",4]]]],[11,"field_for_bit","","Returns the field object that owns the given bit, an error…",30,[[],[["result",6],["option",4]]]],[11,"friendly_path","","Returns a path to this register like…",30,[[["mutexguard",3]],[["string",3],["result",6]]]],[11,"model","","Returns an immutable reference to the parent model",30,[[["mutexguard",3]],[["result",6],["model",3]]]],[11,"model_path","","Returns a path reference to the register\'s…",30,[[["mutexguard",3]],[["string",3],["result",6]]]],[11,"address","","Returns the fully-resolved address taking into account all…",30,[[["option",4],["mutexguard",3]],["result",6]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register\'s…",30,[[["mutexguard",3]],["result",6]]],[11,"width","","",30,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",30,[[["mutexguard",3]],["result",6]]],[11,"fields","","Returns an iterator for the register\'s fields which yields…",30,[[],["registerfielditerator",3]]],[11,"reset","","Applies the given reset type to all fields, if the fields…",30,[[["mutexguard",3]]]],[11,"console_display","","",30,[[["option",4],["bitorder",4],["mutexguard",3]],[["origenresult",6],["string",3]]]],[11,"add_field","","",30,[[["option",4],["string",3],["option",4]],[["field",3],["origenresult",6]]]],[11,"bits","","Returns all bits owned by the register, wrapped in a…",30,[[["mutexguard",3]],["bitcollection",3]]],[11,"address_block","","Returns an immutable reference to the address block object…",30,[[["mutexguard",3]],[["addressblock",3],["result",6]]]],[11,"register_file","","Returns an immutable reference to the register file object…",30,[[["mutexguard",3]],[["result",6],["option",4]]]],[11,"add_reg","","",30,[[["option",4],["dut",3],["option",4],["fieldcontainer",3],["vec",3],["option",4],["option",4],["string",3],["vec",3]],["result",6]]],[11,"materialize","","",30,[[["vec",3],["option",4],["dut",3],["option",4],["vec",3],["fieldcontainer",3]],["result",6]]],[11,"internal_new","","",31,[[["vec",3],["option",4],["fieldenum",3],["vec",3]]]],[11,"new","","",32,[[["option",4]]]],[11,"new","","",33,[[["string",3]]]],[0,"register_file","origen::core::model::registers","",null,null],[3,"RegisterFile","origen::core::model::registers::register_file","Represents a groups of registers within an address block.…",null,null],[12,"id","","",34,null],[12,"address_block_id","","",34,null],[12,"register_file_id","","Optional, if this register file is a child of another…",34,null],[12,"name","","",34,null],[12,"description","","",34,null],[12,"dim","","The dimension of the register, defaults to 1.",34,null],[12,"offset","","The address offset from the containing address block or…",34,null],[12,"range","","The number of addressable units in the register file.",34,null],[12,"registers","","",34,null],[12,"register_files","","",34,null],[11,"get_register_id","","Get the ID from the given register name",34,[[],["result",6]]],[11,"address_block","","Returns an immutable reference to the address block object…",34,[[["mutexguard",3]],[["addressblock",3],["result",6]]]],[11,"register_file","","Returns an immutable reference to the register file object…",34,[[["mutexguard",3]],[["result",6],["option",4]]]],[11,"address_unit_bits","","Returns the address_unit_bits size that the register…",34,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",34,[[["mutexguard",3]],["result",6]]],[11,"friendly_path","","Returns a path to this register file like…",34,[[["mutexguard",3]],[["string",3],["result",6]]]],[11,"is_readable","origen::core::model::registers","",20,[[]]],[11,"is_writeable","","",20,[[]]],[11,"is_writable","","",20,[[]]],[11,"is_unimplemented","","",20,[[]]],[0,"timesets","origen::core::model","",null,null],[0,"timeset","origen::core::model::timesets","",null,null],[3,"SimpleTimeset","origen::core::model::timesets::timeset","",null,null],[12,"name","","",35,null],[12,"period","","",35,null],[12,"default_period","","",35,null],[3,"Timeset","","",null,null],[12,"name","","",36,null],[12,"model_id","","",36,null],[12,"id","","",36,null],[12,"period_as_string","","",36,null],[12,"default_period","","",36,null],[12,"wavetable_ids","","",36,null],[12,"pin_action_resolvers","","",36,null],[3,"Wavetable","","",null,null],[12,"name","","",37,null],[12,"model_id","","",37,null],[12,"timeset_id","","",37,null],[12,"id","","",37,null],[12,"period","","",37,null],[12,"wave_group_ids","","",37,null],[3,"WaveGroup","","",null,null],[12,"model_id","","",38,null],[12,"timeset_id","","",38,null],[12,"wavetable_id","","",38,null],[12,"id","","",38,null],[12,"name","","",38,null],[12,"wave_ids","","",38,null],[12,"derived_from","","",38,null],[3,"Wave","","",null,null],[12,"model_id","","",39,null],[12,"timeset_id","","",39,null],[12,"wavetable_id","","",39,null],[12,"wave_group_id","","",39,null],[12,"wave_id","","",39,null],[12,"events","","",39,null],[12,"applied_pin_ids","","",39,null],[12,"indicator","","",39,null],[3,"Event","","",null,null],[12,"wavetable_id","","",40,null],[12,"wave_id","","",40,null],[12,"event_id","","",40,null],[12,"event_index","","",40,null],[12,"action","","",40,null],[12,"at","","",40,null],[12,"unit","","",40,null],[4,"EventActions","","",null,null],[13,"DriveHigh","","",41,null],[13,"DriveLow","","",41,null],[13,"VerifyHigh","","",41,null],[13,"VerifyLow","","",41,null],[13,"VerifyZ","","",41,null],[13,"HighZ","","",41,null],[13,"Capture","","",41,null],[5,"default_resolver","","",null,[[],["pinactionsresolver",3]]],[11,"new","","",36,[[["box",3],["option",4],["option",4],["vec",3],["testersource",4]]]],[11,"eval_str","","",36,[[],["string",3]]],[11,"activate_wavetable","","",36,[[],[["result",4],["error",3]]]],[11,"clear_active_wavetable","","",36,[[]]],[11,"active_wavetable","","",36,[[["dut",3]],[["string",3],["option",4]]]],[11,"eval","","",36,[[["option",4]],[["result",4],["error",3]]]],[11,"register_wavetable","","",36,[[],[["result",4],["wavetable",3],["error",3]]]],[11,"get_wavetable_id","","",36,[[],["option",4]]],[11,"contains_wavetable","","",36,[[]]],[11,"new","","",37,[[],[["result",4],["error",3]]]],[11,"apply_wave_to","","",37,[[]]],[11,"applied_waves","","Returns all the wave IDs, including inherited ones, which…",37,[[["vec",3],["vec",3],["dut",3]],[["hashmap",3],["error",3],["result",4]]]],[11,"wave_ids_for","","",37,[[["vec",3],["dut",3]],[["option",4],["hashmap",3]]]],[11,"get_wave_group_id","","",37,[[],["option",4]]],[11,"contains_wave_group","","",37,[[]]],[11,"set_period","","",37,[[["box",3],["option",4]],[["result",4],["error",3]]]],[11,"register_wave_group","","",37,[[["vec",3],["option",4]],[["wavegroup",3],["error",3],["result",4]]]],[11,"eval","","",37,[[["option",4]],[["error",3],["option",4],["result",4]]]],[11,"new_from_wavetable","","",38,[[["wavetable",3],["vec",3],["option",4]],[["result",4],["error",3]]]],[11,"register_wave","","",38,[[],[["result",4],["wave",3],["error",3]]]],[11,"get_wave_id","","",38,[[],["option",4]]],[11,"contains_wave","","",38,[[]]],[11,"new","","",39,[[],[["result",4],["error",3]]]],[11,"new_from_wave_group","","",39,[[["wavegroup",3]],[["result",4],["error",3]]]],[11,"set_indicator","","",39,[[],[["result",4],["error",3]]]],[11,"get_event_id","","",39,[[],["option",4]]],[11,"push_event","","",39,[[["box",3],["option",4],["tostring",8],["string",3]],[["result",4],["event",3],["error",3]]]],[11,"from_str","","",41,[[],[["result",4],["eventactions",4],["error",3]]]],[11,"as_str","","",41,[[]]],[11,"eval","","",40,[[["option",4],["dut",3]],[["result",4],["error",3]]]],[11,"set_action","","",40,[[],[["result",4],["error",3]]]],[11,"apply_wave_id_to_pins","origen::core::dut","",4,[[["vec",3]],[["result",4],["error",3]]]],[11,"add_timeset","origen::core::model","",8,[[["box",3],["option",4],["option",4],["vec",3],["testersource",4]],[["result",4],["timeset",3],["error",3]]]],[11,"get_timeset_id","","",8,[[],["option",4]]],[11,"contains_timeset","","",8,[[]]],[11,"create_timeset","origen::core::dut","",4,[[["box",3],["option",4],["option",4],["vec",3],["testersource",4]],[["error",3],["result",4],["timeset",3]]]],[11,"create_wavetable","","",4,[[],[["wavetable",3],["result",4],["error",3]]]],[11,"create_wave_group","","",4,[[["vec",3],["option",4]],[["wavegroup",3],["error",3],["result",4]]]],[11,"create_wave","","",4,[[["option",4],["vec",3]],[["wave",3],["result",4],["error",3]]]],[11,"create_event","","",4,[[["box",3],["option",4],["tostring",8],["string",3]],[["result",4],["event",3],["error",3]]]],[11,"new","origen::core::model","",8,[[["string",3],["option",4],["option",4]],["model",3]]],[11,"add_service","","",8,[[],["result",6]]],[11,"lookup","","",8,[[],[["indexmap",3],["result",6]]]],[11,"console_header","","Returns the hierarchical name of the model and the offset…",8,[[["mutexguard",3]]]],[11,"get_memory_map_id","","Get the ID for the given memory map name, throw an error…",8,[[],["result",6]]],[11,"display_path","","Returns the path to this model for displaying to a user,…",8,[[["mutexguard",3]],["string",3]]],[11,"console_display","","",8,[[["mutexguard",3]],[["string",3],["result",6]]]],[11,"parent","","Returns the parent of this model or None, normally meaning…",8,[[["mutexguard",3]],[["option",4],["result",6]]]],[11,"address","","Returns the fully resolved address of the block which is…",8,[[["mutexguard",3]],["result",6]]],[11,"bit_address","","Returns the fully-resolved address taking into account all…",8,[[["mutexguard",3]],["result",6]]],[11,"friendly_path","","Returns a path to this block like \\\"dut.my_block\\\"",8,[[["mutexguard",3]],[["string",3],["result",6]]]],[0,"os","origen::core","",null,null],[5,"on_windows","origen::core::os","",null,[[]]],[5,"on_linux","","",null,[[]]],[0,"producer","origen::core","",null,null],[3,"Producer","origen::core::producer","The producer is a singleton instantiated as…",null,null],[12,"jobs","","",42,null],[12,"running","","",42,null],[12,"completed","","",42,null],[12,"queued","","",42,null],[12,"flow_generated","","Will be set to true if any flow source files (with Flow()…",42,null],[4,"OptionType","","",null,null],[13,"OptionString","","",43,null],[13,"OptionBool","","",43,null],[13,"OptionNum","","",43,null],[13,"OptionList","","",43,null],[4,"JobType","","",null,null],[13,"Generate","","",44,null],[13,"Program","","",44,null],[13,"Misc","","",44,null],[0,"job","","",null,null],[3,"Job","origen::core::producer::job","A job represents the execution of an Origen application…",null,null],[12,"command","","",45,null],[12,"results","","",45,null],[12,"id","","",45,null],[12,"files","","A stack of source files executed by the job. The first one…",45,null],[11,"source_file","","Returns the file at the root of the job or None if the job…",45,[[],[["pathbuf",3],["option",4]]]],[11,"current_file","","Returns the current file being processed by the job or…",45,[[],[["pathbuf",3],["option",4]]]],[11,"command","","Rerturns the origen command that would be run to replicate…",45,[[],["string",3]]],[11,"resolve_file_reference","","Tries to resolve a reference to a file by the following…",45,[[["vec",3],["option",4],["path",3]],[["pathbuf",3],["result",6]]]],[11,"new","origen::core::producer","",42,[[]]],[11,"create_job","","Creates a new generate job (for either a pattern or a flow)",42,[[["option",4],["path",3]],[["result",4],["job",3],["error",3]]]],[11,"current_job","","",42,[[],[["job",3],["option",4]]]],[11,"current_job_mut","","",42,[[],[["option",4],["job",3]]]],[0,"reference_files","origen::core","This manages how generated files are saved as references.…",null,null],[5,"apply_ref","origen::core::reference_files","",null,[[["path",3]],["result",6]]],[5,"apply_all_new_refs","","",null,[[],["result",6]]],[5,"apply_all_changed_refs","","",null,[[],["result",6]]],[5,"create_changed_ref","","",null,[[["path",3]],["result",6]]],[5,"create_new_ref","","",null,[[["path",3]],["result",6]]],[5,"clear_save_refs","","",null,[[],["result",6]]],[0,"status","origen::core","",null,null],[3,"Status","origen::core::status","Exposes some status information about the runtime…",null,null],[12,"is_origen_present","","When true, Origen is executing within an origen…",46,null],[12,"is_app_present","","When true, Origen is executing within an application…",46,null],[12,"app","","When Origen is executing with the context of an…",46,null],[12,"origen_wksp_root","","When Origen is running within an Origen development…",46,null],[12,"origen_version","","The Origen version in a Semver object",46,null],[12,"start_time","","",46,null],[12,"home","","The full file system path to the user\'s home directory",46,null],[12,"log_level","","",46,null],[12,"is_app_in_origen_dev_mode","","When true it means that Origen is running within an app…",46,null],[4,"Operation","","",null,null],[13,"None","","",47,null],[13,"Convert","","",47,null],[13,"Generate","","",47,null],[13,"GeneratePattern","","",47,null],[13,"GenerateFlow","","",47,null],[13,"Compile","","",47,null],[13,"Interactive","","",47,null],[13,"Web","","",47,null],[13,"AppCommand","","",47,null],[5,"search_for_from_pwd","","",null,[[["vec",3]]]],[5,"search_for","","",null,[[["path",3],["vec",3]]]],[5,"get_home_dir","","",null,[[],["pathbuf",3]]],[11,"register_custom_tester","","",46,[[]]],[11,"custom_tester_ids","","",46,[[],[["vec",3],["string",3]]]],[11,"generate_unique_id","","Returns an ID that it guaranteed unique across threads and…",46,[[]]],[11,"push_testers_eq","","Corresponds to the start of a tester specific block of…",46,[[["vec",3],["supportedtester",4]],["origenresult",6]]],[11,"push_testers_neq","","Corresponds to the start of a tester except (tester not…",46,[[["vec",3],["supportedtester",4]],["origenresult",6]]],[11,"pop_testers_eq","","Corresponds to the end of a tester specific block, returns…",46,[[],["origenresult",6]]],[11,"pop_testers_neq","","Corresponds to the end of a tester exclusion block,…",46,[[],["origenresult",6]]],[11,"unhandled_error_count","","Returns the number of unhandled errors that have been…",46,[[]]],[11,"inc_unhandled_error_count","","",46,[[]]],[11,"set_debug_enabled","","",46,[[]]],[11,"is_debug_enabled","","",46,[[]]],[11,"set_operation","","",46,[[["operation",4]]]],[11,"operation","","",46,[[],["operation",4]]],[11,"set_cli_location","","",46,[[["string",3],["option",4]]]],[11,"cli_location","","",46,[[],[["pathbuf",3],["option",4]]]],[11,"set_output_dir","","Set the base output dir to the given path, it is /output…",46,[[["path",3]]]],[11,"set_reference_dir","","Set the base reference dir to the given path, it is /.ref…",46,[[["path",3]]]],[11,"output_dir","","This is the main method to get the current output…",46,[[],["pathbuf",3]]],[11,"with_output_dir","","Execute the given function with a reference to the current…",46,[[],["origenresult",6]]],[11,"reference_dir","","This is the main method to get the current reference…",46,[[],[["pathbuf",3],["option",4]]]],[11,"with_reference_dir","","Execute the given function with a reference to the current…",46,[[],["origenresult",6]]],[0,"term","origen::core","",null,null],[5,"green","origen::core::term","",null,[[]]],[5,"greenln","","",null,[[]]],[5,"red","","",null,[[]]],[5,"redln","","",null,[[]]],[5,"yellow","","",null,[[]]],[5,"yellowln","","",null,[[]]],[5,"grey","","",null,[[]]],[5,"greyln","","",null,[[]]],[5,"teal","","",null,[[]]],[5,"tealln","","",null,[[]]],[5,"cyan","","",null,[[]]],[5,"cyanln","","",null,[[]]],[5,"standardln","","",null,[[]]],[0,"tester","origen::core","",null,null],[3,"Tester","origen::core::tester","",null,null],[12,"target_testers","","This is the testers that have been selected by the current…",48,null],[12,"stats","","Keeps track of some stats, like how many patterns have…",48,null],[3,"Stats","","",null,null],[12,"generated_pattern_files","","",49,null],[12,"changed_pattern_files","","",49,null],[12,"new_pattern_files","","",49,null],[12,"generated_program_files","","",49,null],[12,"changed_program_files","","",49,null],[12,"new_program_files","","",49,null],[4,"TesterSource","","",null,null],[13,"Internal","","",50,null],[13,"External","","",50,null],[8,"Interceptor","","Trait which allows Rust-side implemented testers to…",null,null],[11,"cycle","","",51,[[["node",3]],["result",6]]],[11,"set_timeset","","",51,[[["node",3]],["result",6]]],[11,"clear_timeset","","",51,[[["node",3]],["result",6]]],[11,"cc","","",51,[[["node",3]],["result",6]]],[11,"set_pin_header","","",51,[[["node",3]],["result",6]]],[11,"clear_pin_header","","",51,[[["node",3]],["result",6]]],[8,"TesterID","","",null,null],[10,"id","","",52,[[],["supportedtester",4]]],[11,"name","","Returns the id() as a String in most cases, but may be…",52,[[],["string",3]]],[8,"TesterAPI","","",null,null],[11,"render_pattern","","Render the given AST to an output, returning the path(s)…",53,[[["node",3]],[["result",6],["vec",3]]]],[11,"render_program","","Render the test program to an output, returning the…",53,[[],[["result",6],["vec",3]]]],[11,"pattern_differ","","The tester should implement this to return a differ…",53,[[["path",3]],[["option",4],["box",3]]]],[11,"program_differ","","",53,[[["path",3]],[["option",4],["box",3]]]],[11,"pin_action_resolver","","",53,[[],[["resolver",3],["option",4]]]],[11,"output_dir","","Returns a path to the tester-specific output directory, it…",53,[[],[["pathbuf",3],["result",6]]]],[8,"TesterAPIClone","","",null,null],[10,"clone_box","","",54,[[],[["box",3],["testerapi",8]]]],[11,"name","","",50,[[],["string",3]]],[11,"id","","",50,[[],["supportedtester",4]]],[11,"to_pickle","","",49,[[],["vec",3]]],[11,"new","","",48,[[]]],[11,"start_tester_eq_block","","Starts a new tester-specific section in the current…",48,[[["vec",3],["supportedtester",4]],["result",6]]],[11,"end_tester_eq_block","","Ends an open tester-specific section in the current…",48,[[],["result",6]]],[11,"start_tester_neq_block","","Like start_tester_eq_block, but the contained block will…",48,[[["vec",3],["supportedtester",4]],["result",6]]],[11,"end_tester_neq_block","","",48,[[],["result",6]]],[11,"custom_tester_ids","","",48,[[],[["vec",3],["string",3]]]],[11,"_current_timeset_id","","",48,[[],["result",6]]],[11,"_current_pin_header_id","","",48,[[],["result",6]]],[11,"reset","","This will be called by Origen immediately before it is…",48,[[]]],[11,"register_external_tester","","",48,[[],[["supportedtester",4],["result",6]]]],[11,"get_timeset","","",48,[[["dut",3]],[["timeset",3],["option",4]]]],[11,"_get_timeset","","",48,[[["dut",3]],[["result",6],["timeset",3]]]],[11,"set_timeset","","",48,[[["dut",3]],["result",6]]],[11,"clear_timeset","","",48,[[],["result",6]]],[11,"get_pin_header","","",48,[[["dut",3]],[["option",4],["pinheader",3]]]],[11,"_get_pin_header","","",48,[[["dut",3]],[["result",6],["pinheader",3]]]],[11,"set_pin_header","","",48,[[["dut",3]],["result",6]]],[11,"clear_pin_header","","",48,[[],["result",6]]],[11,"issue_callback_at","","",48,[[],["result",6]]],[11,"cc","","",48,[[],["result",6]]],[11,"cycle","","",48,[[["option",4]],["result",6]]],[11,"generate_pattern_header","","",48,[[["option",4],["vec",3]],["result",6]]],[11,"end_pattern","","",48,[[],["result",6]]],[11,"render_pattern_for_target_at","","Renders the output for the target at index i. Allows the…",48,[[],[["result",6],["vec",3]]]],[11,"render_program_for_target_at","","Renders the test program for the target at index i. Allows…",48,[[],[["result",6],["vec",3]]]],[11,"target","","",48,[[["supportedtester",4]],[["result",6],["testersource",4]]]],[11,"targets","","",48,[[],["vec",3]]],[11,"targets_as_strs","","",48,[[],[["vec",3],["string",3]]]],[11,"focused_tester","","",48,[[],[["option",4],["testersource",4]]]],[11,"focused_tester_name","","",48,[[],[["string",3],["option",4]]]],[11,"prepare_for_generate","","This is called automatically at the very start of a…",48,[[],["result",6]]],[0,"user","origen::core","",null,null],[3,"Users","origen::core::user","",null,null],[3,"User","","",null,null],[3,"Data","","",null,null],[12,"name","","",55,null],[12,"username","","",55,null],[12,"first_name","","",55,null],[12,"last_name","","",55,null],[12,"display_name","","",55,null],[12,"other","","",55,null],[12,"home_dir","","",55,null],[12,"name_tried","","",55,null],[12,"email","","",55,null],[12,"email_tried","","",55,null],[4,"Roles","","",null,null],[13,"User","","",56,null],[13,"Service","","",56,null],[5,"user__password_reasons","","",null,[[],["hashmap",3]]],[5,"lookup_dataset_config","","",null,[[],[["result",6],["hashmap",3]]]],[5,"get_current_email","","",null,[[],[["string",3],["result",6]]]],[5,"current_home_dir","","",null,[[],[["pathbuf",3],["result",6]]]],[5,"get_current_id","","",null,[[],[["string",3],["result",6]]]],[5,"whoami","","",null,[[],[["string",3],["result",6]]]],[5,"with_user_dataset","","",null,[[["option",4]],["result",6]]],[5,"with_user_dataset_mut","","",null,[[["option",4]],["result",6]]],[5,"set_passwords","","Initiates the password dialog for the current user for all…",null,[[["option",4],["vec",3]],["result",6]]],[5,"set_all_passwords","","",null,[[],["result",6]]],[5,"clear_passwords","","",null,[[["option",4],["vec",3]],["result",6]]],[5,"clear_all_passwords","","",null,[[],["result",6]]],[17,"DEFAULT_KEY","","",null,null],[11,"current_user","","",57,[[],[["result",6],["user",3]]]],[11,"current_user_id","","",57,[[],[["string",3],["result",6]]]],[11,"user","","",57,[[],[["result",6],["user",3]]]],[11,"users","","",57,[[],["indexmap",3]]],[11,"add","","",57,[[],["result",6]]],[11,"new","","",55,[[]]],[11,"get_display_name","","",55,[[],[["string",3],["option",4]]]],[11,"password_key","","",55,[[],["string",3]]],[11,"clear_cached_password","","",55,[[["user",3]],["result",6]]],[11,"default_data_key","","",58,[[]]],[11,"dataset","","",58,[[]]],[11,"datasets","","",58,[[],["hashmap",3]]],[11,"current","","",58,[[],["user",3]]],[11,"new","","",58,[[],["user",3]]],[11,"is_current","","",58,[[]]],[11,"id","","",58,[[],["string",3]]],[11,"username","","",58,[[],[["string",3],["result",6]]]],[11,"set_username","","",58,[[["string",3],["option",4]],["result",6]]],[11,"name","","",58,[[],[["string",3],["option",4]]]],[11,"set_name","","",58,[[]]],[11,"email","","",58,[[],[["string",3],["option",4]]]],[11,"set_email","","",58,[[["string",3],["option",4]],["result",6]]],[11,"first_name","","",58,[[],[["option",4],["result",6]]]],[11,"set_first_name","","",58,[[["string",3],["option",4]],["result",6]]],[11,"last_name","","",58,[[],[["option",4],["result",6]]]],[11,"set_last_name","","",58,[[["string",3],["option",4]],["result",6]]],[11,"display_name","","",58,[[],[["string",3],["result",6]]]],[11,"display_name_for","","",58,[[["option",4]],[["string",3],["result",6]]]],[11,"set_display_name","","",58,[[["string",3],["option",4]],["result",6]]],[11,"get_email","","",58,[[],[["string",3],["result",6]]]],[11,"home_dir","","",58,[[],[["pathbuf",3],["result",6]]]],[11,"home_dir_string","","",58,[[],[["string",3],["result",6]]]],[11,"set_home_dir","","",58,[[["pathbuf",3]],["result",6]]],[11,"should_validate_password","","",58,[[["option",4]],["result",6]]],[11,"dataset_for","","",58,[[],["option",4]]],[11,"set_password","","",58,[[["option",4],["option",4],["string",3],["option",4]],["result",6]]],[11,"password","","",58,[[["option",4],["option",4]],[["string",3],["result",6]]]],[11,"authenticated","","",58,[[]]],[11,"clear_cached_passwords","","Clear the cached password for all datasets",58,[[],["result",6]]],[11,"clear_cached_password","","Clear the cached password for the current/default dataset",58,[[["option",4]],["result",6]]],[11,"populate","","Populate any data fields",58,[[["hashmap",3]],["result",6]]],[11,"with_dataset","","",58,[[],["result",6]]],[11,"with_dataset_mut","","",58,[[],["result",6]]],[11,"for_all_datasets","","",58,[[],["result",6]]],[11,"for_all_datasets_mut","","",58,[[],["result",6]]],[0,"error","origen","",null,null],[3,"Error","origen::error","",null,null],[12,"msg","","",59,null],[5,"raises_error","","",null,[[],["result",6]]],[11,"new","","",59,[[],["error",3]]],[0,"generator","origen","",null,null],[3,"TestManager","origen::generator","",null,null],[12,"ast","","",60,null],[0,"ast","","",null,null],[3,"Meta","origen::generator::ast","",null,null],[12,"filename","","",61,null],[12,"lineno","","",61,null],[3,"Node","","",null,null],[12,"attrs","","",62,null],[12,"meta","","",62,null],[12,"children","","",62,null],[3,"AST","","An AST provides an API for constructing a node tree, when…",null,null],[4,"Attrs","","",null,null],[13,"_Inline","","",63,null],[13,"T","","",63,null],[13,"Integer","","",63,null],[13,"Float","","",63,null],[13,"String","","",63,null],[13,"TesterEq","","",63,null],[13,"TesterNeq","","",63,null],[13,"Test","","",63,null],[13,"Comment","","",63,null],[13,"SetTimeset","","",63,null],[13,"ClearTimeset","","",63,null],[13,"SetPinHeader","","",63,null],[13,"ClearPinHeader","","",63,null],[13,"PinGroupAction","","",63,null],[13,"PinAction","","",63,null],[13,"Opcode","","",63,null],[13,"Cycle","","",63,null],[13,"PatternHeader","","",63,null],[13,"PatternEnd","","",63,null],[13,"RegWrite","","",63,null],[13,"RegVerify","","",63,null],[13,"JTAGWriteIR","","",63,null],[13,"JTAGVerifyIR","","",63,null],[13,"JTAGWriteDR","","",63,null],[13,"JTAGVerifyDR","","",63,null],[13,"JTAGReset","","",63,null],[13,"SWDWriteAP","","",63,null],[13,"SWDVerifyAP","","",63,null],[13,"SWDWriteDP","","",63,null],[13,"SWDVerifyDP","","",63,null],[13,"SWDLineReset","","",63,null],[13,"JTAGDPWriteDP","","",63,null],[13,"JTAGDPVerifyDP","","",63,null],[13,"JTAGDPWriteAP","","",63,null],[13,"JTAGDPVerifyAP","","",63,null],[13,"ArmDebugMemAPWriteReg","","",63,null],[13,"ArmDebugMemAPWriteInternalReg","","",63,null],[13,"ArmDebugMemAPVerifyReg","","",63,null],[13,"ArmDebugMemAPVerifyInternalReg","","",63,null],[13,"ArmDebugWriteDP","","",63,null],[13,"ArmDebugVerifyDP","","",63,null],[13,"ArmDebugSwjJTAGToSWD","","",63,null],[13,"ArmDebugSwjSWDToJTAG","","",63,null],[13,"TextSection","","",63,null],[13,"TextBoundaryLine","","",63,null],[13,"TextLine","","",63,null],[13,"Text","","",63,null],[13,"User","","",63,null],[13,"OrigenCommand","","",63,null],[13,"Timestamp","","",63,null],[13,"Mode","","",63,null],[13,"TargetsStacked","","",63,null],[13,"OS","","",63,null],[13,"AppRoot","","",63,null],[13,"OrigenVersion","","",63,null],[13,"OrigenRoot","","",63,null],[13,"PGMFlow","","",63,null],[13,"PGMSubFlow","","",63,null],[13,"PGMDefTest","","Defines a new test, this must be done before attributes…",63,null],[13,"PGMDefTestInv","","Defines a new test invocation, this must be done before…",63,null],[13,"PGMAssignTestToInv","","Assign an existing test to an existing invocation InvID…",63,null],[13,"PGMSetAttr","","Set the attribute with the given name within the given…",63,null],[13,"PGMTest","","Execute a test (or invocation) from the flow",63,null],[13,"PGMTestStr","","Execute a test (or invocation) from the flow, where the…",63,null],[13,"PGMPatternGroup","","Defines a new pattern group, also used to model IG-XL…",63,null],[13,"PGMPushPattern","","Push a pattern to the given pattern group ID",63,null],[13,"PGMRender","","Render the given text directly to the flow",63,null],[13,"PGMLog","","Add a log line to the flow",63,null],[13,"PGMGroup","","A FlowID will always be present when the group type is a…",63,null],[13,"PGMCondition","","All children will be gated by the given condition…",63,null],[13,"PGMCz","","Execute a test (or invocation) from the flow with a CZ…",63,null],[13,"PGMDefBin","","Bin (number, is_soft, type, description, priority)",63,null],[13,"PGMBin","","Bin out (hard, soft, type)",63,null],[13,"PGMOnFailed","","Events to run if the test or group with the given ID failed",63,null],[13,"PGMOnPassed","","Events to run if the test or group with the given ID passed",63,null],[13,"PGMIGXLSetWaitFlags","","",63,null],[13,"STIL","","",63,null],[13,"STILUnknown","","",63,null],[13,"STILVersion","","",63,null],[13,"STILHeader","","",63,null],[13,"STILTitle","","",63,null],[13,"STILDate","","",63,null],[13,"STILSource","","",63,null],[13,"STILHistory","","",63,null],[13,"STILAnnotation","","",63,null],[13,"STILInclude","","",63,null],[13,"STILSignals","","",63,null],[13,"STILSignal","","",63,null],[13,"STILTermination","","",63,null],[13,"STILDefaultState","","",63,null],[13,"STILBase","","",63,null],[13,"STILAlignment","","",63,null],[13,"STILScanIn","","",63,null],[13,"STILScanOut","","",63,null],[13,"STILDataBitCount","","",63,null],[13,"STILSignalGroups","","",63,null],[13,"STILSignalGroup","","",63,null],[13,"STILSigRefExpr","","",63,null],[13,"STILTimeExpr","","",63,null],[13,"STILSIUnit","","",63,null],[13,"STILEngPrefix","","",63,null],[13,"STILAdd","","",63,null],[13,"STILSubtract","","",63,null],[13,"STILMultiply","","",63,null],[13,"STILDivide","","",63,null],[13,"STILParens","","",63,null],[13,"STILNumberWithUnit","","",63,null],[13,"STILPatternExec","","",63,null],[13,"STILCategoryRef","","",63,null],[13,"STILSelectorRef","","",63,null],[13,"STILTimingRef","","",63,null],[13,"STILPatternBurstRef","","",63,null],[13,"STILPatternBurst","","",63,null],[13,"STILSignalGroupsRef","","",63,null],[13,"STILMacroDefs","","",63,null],[13,"STILProcedures","","",63,null],[13,"STILScanStructuresRef","","",63,null],[13,"STILStart","","",63,null],[13,"STILStop","","",63,null],[13,"STILTerminations","","",63,null],[13,"STILTerminationItem","","",63,null],[13,"STILPatList","","",63,null],[13,"STILPat","","",63,null],[13,"STILLabel","","",63,null],[13,"STILTiming","","",63,null],[13,"STILWaveformTable","","",63,null],[13,"STILPeriod","","",63,null],[13,"STILInherit","","",63,null],[13,"STILSubWaveforms","","",63,null],[13,"STILSubWaveform","","",63,null],[13,"STILWaveforms","","",63,null],[13,"STILWaveform","","",63,null],[13,"STILWFChar","","",63,null],[13,"STILEvent","","",63,null],[13,"STILEventList","","",63,null],[13,"STILSpec","","",63,null],[13,"STILCategory","","",63,null],[13,"STILSpecItem","","",63,null],[13,"STILTypicalVar","","",63,null],[13,"STILSpecVar","","",63,null],[13,"STILSpecVarItem","","",63,null],[13,"STILVariable","","",63,null],[13,"STILSelector","","",63,null],[13,"STILSelectorItem","","",63,null],[13,"STILScanStructures","","",63,null],[13,"STILScanChain","","",63,null],[13,"STILScanLength","","",63,null],[13,"STILScanOutLength","","",63,null],[13,"STILScanCells","","",63,null],[13,"STILScanMasterClock","","",63,null],[13,"STILScanSlaveClock","","",63,null],[13,"STILScanInversion","","",63,null],[13,"STILScanInName","","",63,null],[13,"STILScanOutName","","",63,null],[13,"STILNot","","",63,null],[13,"STILPattern","","",63,null],[13,"STILTimeUnit","","",63,null],[13,"STILVector","","",63,null],[13,"STILCyclizedData","","",63,null],[13,"STILNonCyclizedData","","",63,null],[13,"STILRepeat","","",63,null],[13,"STILWaveformFormat","","",63,null],[13,"STILHexFormat","","",63,null],[13,"STILDecFormat","","",63,null],[13,"STILData","","",63,null],[13,"STILTimeValue","","",63,null],[13,"STILWaveformRef","","",63,null],[13,"STILCondition","","",63,null],[13,"STILCall","","",63,null],[13,"STILMacro","","",63,null],[13,"STILLoop","","",63,null],[13,"STILMatchLoop","","",63,null],[13,"STILGoto","","",63,null],[13,"STILBreakPoint","","",63,null],[13,"STILIDDQ","","",63,null],[13,"STILStopStatement","","",63,null],[11,"new","","Create a new AST with the given node as the top-level",64,[[],["ast",3]]],[11,"unwrap","","Consumes the AST, converting it to a Node",64,[[],["node",3]]],[11,"push","","Push a new terminal node into the AST",64,[[["node",3]]]],[11,"append","","",64,[[["vec",3]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",64,[[["node",3]]]],[11,"close","","Close the currently open node",64,[[],["result",6]]],[11,"replace","","Replace the node n - offset with the given node, use…",64,[[["node",3]],["result",6]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",64,[[["node",3]],["result",6]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",64,[[],[["result",6],["node",3]]]],[11,"get_with_descendants","","",64,[[],[["result",6],["node",3]]]],[11,"start","","Clear the current AST and start a new one with the given…",64,[[["node",3]]]],[11,"process","","",64,[[["fnmut",8]],[["result",6],["node",3]]]],[11,"with_node","","Execute the given function which receives the a reference…",64,[[],["result",6]]],[11,"to_string","","",64,[[],["string",3]]],[11,"to_pickle","","Serializes the AST for import into Python",64,[[],["vec",3]]],[11,"to_node","","Clones the current state of the AST into a Node, leaving…",64,[[],["node",3]]],[11,"new","","",62,[[["attrs",4]],["node",3]]],[11,"new_with_meta","","",62,[[["attrs",4],["option",4],["meta",3]],["node",3]]],[11,"new_with_children","","",62,[[["attrs",4],["node",3],["vec",3]],["node",3]]],[11,"unwrap","","",62,[[],[["option",4],["node",3]]]],[11,"error","","",62,[[["error",3]],["result",6]]],[11,"process","","Returns a new node which is the output of the node…",62,[[["processor",8]],[["option",4],["result",6]]]],[11,"to_string","","",62,[[],["string",3]]],[11,"to_pickle","","Serializes the AST for import into Python",62,[[],["vec",3]]],[11,"add_child","","",62,[[["node",3]]]],[11,"add_children","","",62,[[["node",3],["vec",3]]]],[11,"insert_child","","",62,[[["node",3]],["result",6]]],[11,"replace_child","","Replace the child n - offset with the given node, use…",62,[[["node",3]],["result",6]]],[11,"get_child","","Returns a copy of child n - offset, an offset of 0 means…",62,[[],[["result",6],["node",3]]]],[11,"depth","","",62,[[]]],[11,"get_descendant","","",62,[[],[["option",4],["node",3]]]],[11,"process_return_code","","",62,[[["return",4],["processor",8]],[["option",4],["result",6]]]],[11,"process_and_update_children","","Returns a new node which is a copy of self with its…",62,[[["processor",8]],[["result",6],["node",3]]]],[11,"process_and_box_children","","Returns processed versions of the node\'s children, each…",62,[[["processor",8]],[["vec",3],["result",6]]]],[11,"process_children","","Returns processed versions of the node\'s children",62,[[["processor",8]],[["result",6],["vec",3]]]],[11,"replace_children","","Returns a new node which is a copy of self with its…",62,[[["vec",3],["box",3]],["node",3]]],[11,"replace_unboxed_children","","Returns a new node which is a copy of self with its…",62,[[["node",3],["vec",3]],["node",3]]],[11,"replace_attrs","","Returns a new node which is a copy of self with its attrs…",62,[[["attrs",4]],["node",3]]],[0,"processor","origen::generator","The processor API is intentionally placed in a separate…",null,null],[4,"Return","origen::generator::processor","All procesor handler methods should return this",null,null],[13,"None","","Deletes the node from the output AST.",65,null],[13,"Unmodified","","Clones the node (and all of its children) into the output…",65,null],[13,"ProcessChildren","","Clones the node but replaces it\'s current children with…",65,null],[13,"Replace","","Replace the node in the output AST with the given node.",65,null],[13,"Unwrap","","Removes the node and leaves its children in its place.",65,null],[13,"Inline","","Replace the node in the output AST with the given nodes,…",65,null],[13,"InlineBoxed","","Same as Inline, but accepts a vector of boxed nodes",65,null],[13,"UnwrapWithProcessedChildren","","A combination of Unwrap and ProcessChildren, which will…",65,null],[13,"InlineWithProcessedChildren","","A combination of Inline and ProcessChildren which will add…",65,null],[13,"ReplaceChildren","","Keep the node in the new AST but replace its children with…",65,null],[8,"Processor","","",null,null],[11,"on_node","","",66,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","This will be called at the end of processing every node…",66,[[["node",3]],[["result",6],["return",4]]]],[0,"processors","origen::generator","",null,null],[3,"CycleCombiner","origen::generator::processors","",null,null],[3,"FlattenText","","Flattens nested text, textlines, text sections, etc. into…",null,null],[12,"boundary_string","","",67,null],[12,"boundary_length","","",67,null],[12,"indentation_length","","",67,null],[3,"PinActionCombiner","","Combines adjacent pin actions into a single pin action",null,null],[3,"TargetTester","","",null,null],[3,"ToString","","",null,null],[3,"UpcaseComments","","",null,null],[11,"run","","",68,[[["node",3]],[["result",6],["node",3]]]],[11,"run","","",67,[[["node",3]],[["result",6],["node",3]]]],[11,"run","","",69,[[["node",3]],[["result",6],["node",3]]]],[11,"advance_to_second_pass","","",69,[[]]],[11,"run","","",70,[[["node",3],["supportedtester",4]],[["result",6],["node",3]]]],[11,"run","","",71,[[["node",3]],["string",3]]],[11,"run","","",72,[[["node",3]],[["result",6],["node",3]]]],[0,"stil","origen::generator","",null,null],[3,"STIL","origen::generator::stil","",null,null],[12,"ast","","The un-processed AST representation of the given STIL code",73,null],[4,"SignalType","","",null,null],[13,"InOut","","",74,null],[13,"Out","","",74,null],[13,"In","","",74,null],[13,"Supply","","",74,null],[13,"Pseudo","","",74,null],[4,"Termination","","",null,null],[13,"TerminateHigh","","",75,null],[13,"TerminateLow","","",75,null],[13,"TerminateOff","","",75,null],[13,"TerminateUnknown","","",75,null],[4,"State","","",null,null],[13,"U","","",76,null],[13,"D","","",76,null],[13,"Z","","",76,null],[13,"ForceUp","","",76,null],[13,"ForceDown","","",76,null],[13,"ForceOff","","",76,null],[4,"Base","","",null,null],[13,"Hex","","",77,null],[13,"Dec","","",77,null],[4,"Alignment","","",null,null],[13,"MSB","","",78,null],[13,"LSB","","",78,null],[4,"Selector","","",null,null],[13,"Min","","",79,null],[13,"Typ","","",79,null],[13,"Max","","",79,null],[13,"Meas","","",79,null],[11,"from_file","","",73,[[["path",3]],[["origenresult",6],["stil",3]]]],[11,"from_str","","",73,[[["option",4]],[["origenresult",6],["stil",3]]]],[11,"new","origen::generator","",60,[[],["testmanager",3]]],[11,"start","","Starts a new test (deletes the current AST and starts a…",60,[[]]],[11,"push","","Push a new terminal node into the AST",60,[[["node",3]]]],[11,"append","","",60,[[["vec",3]]]],[11,"push_and_open","","Push a new node into the AST and leave it open, meaning…",60,[[["node",3]]]],[11,"close","","Close the currently open node",60,[[],["result",6]]],[11,"replace","","Replace the node n - offset with the given node, use…",60,[[["node",3]],["result",6]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",60,[[],[["result",6],["node",3]]]],[11,"get_with_descendants","","Returns a copy of node n - offset, where an offset of 0…",60,[[],[["result",6],["node",3]]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",60,[[["node",3]],["result",6]]],[11,"to_string","","",60,[[],["string",3]]],[11,"process","","",60,[[["fnmut",8]],[["result",6],["node",3]]]],[11,"with_ast","","Execute the given function which receives the a reference…",60,[[],["result",6]]],[11,"to_node","","",60,[[],["node",3]]],[11,"to_pickle","","Serializes the AST for import into Python",60,[[],["vec",3]]],[0,"utility","","",null,null],[0,"transaction","origen::generator::utility","",null,null],[3,"Transaction","origen::generator::utility::transaction","",null,null],[12,"action","","",80,null],[12,"reg_id","","",80,null],[12,"address","","",80,null],[12,"address_width","","",80,null],[12,"width","","",80,null],[12,"data","","",80,null],[12,"bit_enable","","",80,null],[12,"capture_enable","","",80,null],[12,"overlay_enable","","",80,null],[12,"overlay_string","","",80,null],[12,"set_actions","","",80,null],[12,"metadata","","",80,null],[4,"Action","","",null,null],[13,"Write","","",81,null],[13,"Verify","","",81,null],[13,"Capture","","",81,null],[13,"Set","","",81,null],[11,"new_write","","",80,[[["biguint",3]],["result",6]]],[11,"new_write_with_addr","","",80,[[["biguint",3]],["result",6]]],[11,"new_verify","","",80,[[["biguint",3]],["result",6]]],[11,"new_capture","","",80,[[],["result",6]]],[11,"new_highz","","",80,[[],["result",6]]],[11,"new_set","","",80,[[["vec",3]],["result",6]]],[11,"is_set_action","","",80,[[]]],[11,"addr","","",80,[[],["result",6]]],[11,"addr_width","","",80,[[],["result",6]]],[11,"to_symbols","","",80,[[],[["vec",3],["result",6]]]],[11,"enable_of_width","","",80,[[],[["result",6],["biguint",3]]]],[11,"enable_width","","Helper method to generate a mask which enables all bits in…",80,[[],[["result",6],["biguint",3]]]],[11,"check_size","","",80,[[["biguint",3]],["result",6]]],[11,"to_dummy","","",80,[[],["result",6]]],[11,"to_addr_trans","","Shortcut function to generate a new transaction where the…",80,[[["option",4]],["result",6]]],[11,"prepend_data","","",80,[[["biguint",3]],["result",6]]],[11,"as_write_node","","",80,[[],[["result",6],["node",3]]]],[11,"as_verify_node","","",80,[[],[["result",6],["node",3]]]],[11,"chunk_data","","",80,[[],[["vec",3],["result",6]]]],[11,"chunk_addr","","",80,[[],[["vec",3],["result",6]]]],[0,"precludes","origen","",null,null],[0,"controller","origen::precludes","",null,null],[0,"prog_gen","origen","",null,null],[3,"FlowManager","origen::prog_gen","",null,null],[3,"Bin","","",null,null],[12,"number","","",82,null],[12,"description","","",82,null],[12,"soft","","Bins are hard bins by default, set this true to make it a…",82,null],[12,"pass","","Bins are fail bins by default, set this true to make it a…",82,null],[3,"FlowID","","Used to uniquely identify a test in a flow",null,null],[3,"Test","","This is an abstract data object which is used to model…",null,null],[12,"id","","",83,null],[12,"name","","",83,null],[12,"indirect","","",83,null],[12,"params","","Defines the names of parameters and their types. Child…",83,null],[12,"values","","",83,null],[12,"aliases","","",83,null],[12,"constraints","","",83,null],[12,"tester","","",83,null],[12,"class_name","","",83,null],[12,"test_id","","",83,null],[4,"BinType","","",null,null],[13,"Good","","",84,null],[13,"Bad","","",84,null],[4,"FlowCondition","","",null,null],[13,"IfJob","","",85,null],[13,"UnlessJob","","",85,null],[13,"IfEnable","","",85,null],[13,"UnlessEnable","","",85,null],[13,"IfPassed","","",85,null],[13,"UnlessPassed","","",85,null],[13,"IfFailed","","",85,null],[13,"UnlessFailed","","",85,null],[13,"IfRan","","",85,null],[13,"UnlessRan","","",85,null],[4,"GroupType","","",null,null],[13,"Flow","","",86,null],[13,"Test","","",86,null],[4,"ParamType","","",null,null],[13,"String","","",87,null],[13,"Int","","",87,null],[13,"UInt","","",87,null],[13,"Float","","",87,null],[13,"Current","","",87,null],[13,"Voltage","","",87,null],[13,"Time","","",87,null],[13,"Frequency","","",87,null],[13,"Bool","","",87,null],[13,"Any","","",87,null],[4,"ParamValue","","",null,null],[13,"String","","",88,null],[13,"Int","","",88,null],[13,"UInt","","",88,null],[13,"Float","","",88,null],[13,"Current","","",88,null],[13,"Voltage","","",88,null],[13,"Time","","",88,null],[13,"Frequency","","",88,null],[13,"Bool","","",88,null],[13,"Any","","",88,null],[4,"PatternGroupType","","",null,null],[13,"Patset","","",89,null],[13,"Patgroup","","",89,null],[0,"advantest","","",null,null],[0,"common","origen::prog_gen::advantest","",null,null],[0,"smt7","","",null,null],[5,"render_test_program","origen::prog_gen::advantest::smt7","Main entry point to render the current test program, paths…",null,[[["v93k_smt7",3]],[["result",6],["vec",3]]]],[0,"smt8","origen::prog_gen::advantest","",null,null],[0,"flow_api","origen::prog_gen","",null,null],[5,"start_sub_flow","origen::prog_gen::flow_api","Start a sub-flow, the returned reference should be…",null,[[["option",4],["meta",3]],["result",6]]],[5,"end_block","","",null,[[],["result",6]]],[5,"define_test","","Defines a new test in the AST, returning its ID. A test…",null,[[["supportedtester",4],["option",4],["meta",3]],["result",6]]],[5,"define_test_invocation","","Defines a new test invocation in the AST, returning its…",null,[[["supportedtester",4],["option",4],["meta",3]],["result",6]]],[5,"set_test_attr","","Set an attribute of either a test or a test invocation",null,[[["option",4],["meta",3],["paramvalue",4]],["result",6]]],[5,"assign_test_to_invocation","","",null,[[["option",4],["meta",3]],["result",6]]],[5,"execute_test","","Execute the given test (or invocation) from the current flow",null,[[["flowid",3],["option",4],["meta",3]],["result",6]]],[5,"execute_test_str","","Execute the given test (or invocation) from the current…",null,[[["flowid",3],["option",4],["meta",3],["string",3]],["result",6]]],[5,"execute_cz_test","","Cz the given test (or invocation) from the current flow",null,[[["flowid",3],["option",4],["meta",3],["string",3]],["result",6]]],[5,"define_pattern_group","","",null,[[["option",4],["supportedtester",4],["option",4],["string",3],["patterngrouptype",4],["meta",3]],["result",6]]],[5,"push_pattern_to_group","","",null,[[["option",4],["option",4],["meta",3],["string",3]],["result",6]]],[5,"render","","Renders the given string directly to the test flow",null,[[["option",4],["string",3],["meta",3]],["result",6]]],[5,"log","","",null,[[["option",4],["string",3],["meta",3]],["result",6]]],[5,"set_wait_flags","","[IGXL only] Set the given wait flags on the given test…",null,[[["option",4],["meta",3],["vec",3],["string",3]],["result",6]]],[5,"start_group","","Used to model flow groups, IG-XL test instance groups, etc.",null,[[["flowid",3],["option",4],["option",4],["grouptype",4],["supportedtester",4],["meta",3],["string",3],["option",4]],["result",6]]],[5,"start_condition","","",null,[[["option",4],["meta",3],["flowcondition",4]],["result",6]]],[5,"define_bin","","",null,[[["option",4],["option",4],["option",4],["bintype",4],["string",3],["meta",3]],["result",6]]],[5,"bin","","Bin out the DUT",null,[[["option",4],["option",4],["bintype",4],["meta",3]],["result",6]]],[5,"start_on_failed","","Start an on-failed block (events to run if the given test…",null,[[["flowid",3],["option",4],["meta",3]],["result",6]]],[5,"start_on_passed","","Start an on-passed block (events to run if the given test…",null,[[["flowid",3],["option",4],["meta",3]],["result",6]]],[11,"new","origen::prog_gen","",90,[[],["flowmanager",3]]],[11,"select","","Select the given flow such that the majority of…",90,[[],["result",6]]],[11,"select_current","","De-selects any named flow selection made via the select()…",90,[[]]],[11,"with_all_flows","","Execute the given function with an immutable reference to…",90,[[],["result",6]]],[11,"with_selected_flow","","Execute the given function which receives the currently…",90,[[],["result",6]]],[11,"with_selected_flow_mut","","Like with_selected_flow() but with a mutable reference to…",90,[[],["result",6]]],[11,"start","","Starts a new flow, returns an error if a flow with the…",90,[[],["result",6]]],[11,"end","","End the current flow",90,[[],["result",6]]],[11,"push","","Push a new terminal node into the AST for the current flow",90,[[["node",3]],["result",6]]],[11,"append","","",90,[[["vec",3]],["result",6]]],[11,"push_and_open","","Push a new node into the current flow AST and leave it…",90,[[["node",3]],["result",6]]],[11,"close","","Close the currently open node",90,[[],["result",6]]],[11,"replace","","Replace the node n - offset with the given node, use…",90,[[["node",3]],["result",6]]],[11,"get","","Returns a copy of node n - offset, an offset of 0 means…",90,[[],[["result",6],["node",3]]]],[11,"get_with_descendants","","Returns a copy of node n - offset, where an offset of 0…",90,[[],[["result",6],["node",3]]]],[11,"insert","","Insert the node at position n - offset, using offset = 0…",90,[[["node",3]],["result",6]]],[11,"to_string","","",90,[[],["string",3]]],[11,"process","","",90,[[["fnmut",8]],[["result",6],["node",3]]]],[11,"to_node","","Returns a copy of the current flow as a Node",90,[[],["node",3]]],[11,"to_pickle","","Serializes the current flow AST for import into Python",90,[[],["vec",3]]],[11,"from_str","","Generate a new ID from a string. No checking is done at…",91,[[],["flowid",3]]],[11,"from_int","","Generate a new ID from an integer. No checking is done at…",91,[[],["flowid",3]]],[11,"new","","Generate a new unique ID",91,[[],["flowid",3]]],[11,"new","","",83,[[["supportedtester",4]],["test",3]]],[11,"sorted_params","","",83,[[],["sortedparams",3]]],[11,"import_test_template","","Applies the values read from a test template file (e.g.…",83,[[["testtemplate",3]],["result",6]]],[11,"set","","Set the value of the given parameter to the given value,…",83,[[["paramvalue",4]],["result",6]]],[11,"get","","Get the value of the given attribute",83,[[],[["option",4],["result",6]]]],[11,"get_type","","Returns the type of the given parameter name (or alias),…",83,[[],[["result",6],["paramtype",4]]]],[11,"add_param","","",83,[[["vec",3],["option",4],["paramvalue",4],["option",4],["paramtype",4],["option",4],["vec",3]],["result",6]]],[11,"add_alias","","Define a simple alias for an existing parameter, returns…",83,[[],["result",6]]],[11,"has_param","","Returns true if the test has the given parameter name or…",83,[[]]],[11,"to_param_name","","Resolves the given param or alias name to a param name",83,[[],["result",6]]],[11,"is_type","","",88,[[["paramtype",4]]]],[0,"teradyne","","",null,null],[0,"common","origen::prog_gen::teradyne","",null,null],[0,"j750","","",null,null],[0,"ultraflex","","",null,null],[0,"revision_control","origen","",null,null],[3,"RevisionControl","origen::revision_control","",null,null],[3,"Credentials","","",null,null],[12,"username","","",92,null],[12,"password","","",92,null],[3,"Status","","",null,null],[12,"added","","",93,null],[12,"removed","","",93,null],[12,"changed","","",93,null],[12,"conflicted","","Files with merge conflicts",93,null],[0,"designsync","","",null,null],[3,"Designsync","origen::revision_control::designsync","",null,null],[12,"local","","Path to the local directory for the repository",94,null],[12,"remote","","Link to the remote vault",94,null],[11,"new","","",94,[[["credentials",3],["option",4],["path",3]],["designsync",3]]],[0,"git","origen::revision_control","",null,null],[3,"Git","origen::revision_control::git","",null,null],[12,"local","","Path to the local directory for the repository",95,null],[12,"remotes","","Link(s) to the remote repository",95,null],[5,"config","","Attempts to get the given attribute from the Git config.…",null,[[],[["string",3],["option",4]]]],[11,"new","","",95,[[["credentials",3],["option",4],["path",3],["vec",3]],["git",3]]],[11,"tag_exists_locally","","Returns true if the given tag name exists in the local repo",95,[[["repository",3]]]],[11,"remote_branch_exists","","Returns true if the given branch name exists in the remote…",95,[[["repository",3]]]],[11,"fetch","","Equivalent to calling \'git fetch\' within a repo, this will…",95,[[["option",4]],["origenresult",6]]],[8,"RevisionControlAPI","origen::revision_control","Defines a common minimum API that all revision control…",null,null],[10,"populate","","Initially populate the local directory with the remote,…",96,[[],["result",6]]],[10,"checkout","","Checkout the given version of the repository. If force is…",96,[[["option",4],["path",3]],["result",6]]],[10,"revert","","Reverts any local changes. Supplying a path to a directory…",96,[[["option",4],["path",3]],["result",6]]],[10,"status","","Returns a Status object which contains lists of all files…",96,[[["option",4],["path",3]],[["result",6],["status",3]]]],[10,"tag","","Tag the view in the local workspace. A tag message can be…",96,[[["option",4]],["result",6]]],[11,"is_modified","","Returns true if the workspace status is modified in any way",93,[[]]],[11,"new","","Returns a generic revision control driver which implements…",97,[[["credentials",3],["option",4],["path",3],["vec",3]],["revisioncontrol",3]]],[11,"git","","",97,[[["credentials",3],["option",4],["path",3],["vec",3]],["git",3]]],[11,"designsync","","",97,[[["credentials",3],["option",4],["path",3],["vec",3]],["designsync",3]]],[0,"services","origen","",null,null],[3,"Services","origen::services","",null,null],[4,"Service","","",null,null],[13,"JTAG","","",98,null],[13,"SWD","","",98,null],[13,"ArmDebug","","",98,null],[13,"ArmDebugDP","","",98,null],[13,"ArmDebugJtagDP","","",98,null],[13,"ArmDebugMemAP","","",98,null],[0,"arm_debug","","",null,null],[3,"ArmDebug","origen::services::arm_debug","",null,null],[12,"id","","",99,null],[12,"model_id","","Model ID, holding all the registers and current values",99,null],[12,"jtagnswd","","",99,null],[12,"swd_id","","The SWD Service which operates this ArmDebug",99,null],[12,"jtag_id","","The JTAG Service which operates this ArmDebug",99,null],[0,"dp","","",null,null],[3,"DP","origen::services::arm_debug::dp","",null,null],[11,"model_init","","",100,[[["dut",3],["services",3]],["result",6]]],[11,"power_up","","",100,[[["mutexguard",3],["services",3]],["result",6]]],[11,"verify_powered_up","","",100,[[["mutexguard",3],["services",3]],["result",6]]],[11,"update_select","","",100,[[["services",3],["mutexguard",3]],[["result",6],["option",4]]]],[11,"write_register","","",100,[[["bitcollection",3],["services",3],["mutexguard",3]],["result",6]]],[11,"verify_register","","",100,[[["bitcollection",3],["services",3],["mutexguard",3]],["result",6]]],[11,"reg_trans","","Writes a DP register - detailed in chapter 2 of the ARM…",100,[[["bitcollection",3],["services",3],["mutexguard",3]],["result",6]]],[0,"jtag_dp","origen::services::arm_debug","",null,null],[3,"JtagDP","origen::services::arm_debug::jtag_dp","",null,null],[12,"id","","",101,null],[12,"jtag_id","","",101,null],[12,"default_ir_size","","",101,null],[12,"dpacc_select","","",101,null],[12,"apacc_select","","",101,null],[11,"model_init","","",101,[[["services",3],["option",4],["option",4],["dut",3]],["result",6]]],[11,"prep_transaction","","",101,[[["transaction",3]],["result",6]]],[11,"update_ir","","",101,[[["services",3],["dut",3]],["result",6]]],[11,"write_dp","","",101,[[["services",3],["transaction",3],["mutexguard",3]],["result",6]]],[11,"verify_dp","","",101,[[["services",3],["transaction",3],["mutexguard",3]],["result",6]]],[11,"write_ap","","",101,[[["services",3],["transaction",3],["mutexguard",3]],["result",6]]],[11,"verify_ap","","",101,[[["services",3],["transaction",3],["mutexguard",3]],["result",6]]],[11,"write_register","","",101,[[["transaction",3],["services",3],["mutexguard",3]],["result",6]]],[11,"verify_register","","",101,[[["transaction",3],["services",3],["mutexguard",3]],["result",6]]],[0,"mem_ap","origen::services::arm_debug","",null,null],[3,"MemAP","origen::services::arm_debug::mem_ap","",null,null],[11,"model_init","","",102,[[["dut",3],["services",3]],["result",6]]],[11,"prep_for_transfer","","",102,[[["transaction",3],["services",3],["mutexguard",3]],[["bitcollection",3],["result",6]]]],[11,"write_register","","",102,[[["bitcollection",3],["services",3],["mutexguard",3]],["result",6]]],[11,"verify_register","","",102,[[["bitcollection",3],["services",3],["mutexguard",3]],["result",6]]],[11,"model_init","origen::services::arm_debug","",99,[[["option",4],["dut",3],["services",3]],["result",6]]],[11,"switch_to_swd","","",99,[[["mutexguard",3],["mutexguard",3]],["result",6]]],[11,"set_dp_id","","",99,[[],["result",6]]],[11,"dp_id","","",99,[[],["result",6]]],[11,"set_jtag_dp_id","","",99,[[],["result",6]]],[11,"jtag_dp_id","","",99,[[],["result",6]]],[0,"jtag","origen::services","",null,null],[3,"Service","origen::services::jtag","",null,null],[11,"new","","",103,[[["pingroup",3],["option",4],["option",4],["dut",3]],[["result",6],["service",3]]]],[11,"reset","","",103,[[["dut",3]],["result",6]]],[11,"write_ir","","",103,[[["transaction",3],["dut",3]],["result",6]]],[11,"verify_ir","","",103,[[["transaction",3],["dut",3]],["result",6]]],[11,"write_dr","","",103,[[["transaction",3],["dut",3]],["result",6]]],[11,"verify_dr","","",103,[[["transaction",3],["dut",3]],["result",6]]],[0,"swd","origen::services","",null,null],[3,"Service","origen::services::swd","",null,null],[12,"id","","",104,null],[12,"swdclk","","",104,null],[12,"swdio","","",104,null],[12,"trn","","",104,null],[4,"Acknowledgements","","",null,null],[13,"Ok","","",105,null],[13,"Wait","","",105,null],[13,"Fault","","",105,null],[13,"None","","",105,null],[11,"process_transaction","","",104,[[["node",3],["dut",3]],["result",6]]],[11,"line_reset","","",104,[[["dut",3]],["result",6]]],[11,"from_str","","",105,[[],["result",6]]],[11,"to_str","","",105,[[]]],[11,"new","","",104,[[["pingroup",3],["option",4],["dut",3]],["result",6]]],[11,"write_ap","","",104,[[["dut",3],["acknowledgements",4],["transaction",3]],["result",6]]],[11,"verify_ap","","",104,[[["dut",3],["acknowledgements",4],["option",4],["transaction",3]],["result",6]]],[11,"write_dp","","",104,[[["dut",3],["acknowledgements",4],["transaction",3]],["result",6]]],[11,"verify_dp","","",104,[[["dut",3],["acknowledgements",4],["option",4],["transaction",3]],["result",6]]],[11,"as_swd","origen::services","",98,[[],[["service",3],["result",6]]]],[11,"as_jtag","","",98,[[],[["result",6],["service",3]]]],[11,"as_arm_debug","","",98,[[],[["armdebug",3],["result",6]]]],[11,"as_mut_arm_debug","","",98,[[],[["result",6],["armdebug",3]]]],[11,"as_dp","","",98,[[],[["result",6],["dp",3]]]],[11,"as_mut_dp","","",98,[[],[["result",6],["dp",3]]]],[11,"as_jtag_dp","","",98,[[],[["jtagdp",3],["result",6]]]],[11,"as_mut_jtag_dp","","",98,[[],[["result",6],["jtagdp",3]]]],[11,"as_mem_ap","","",98,[[],[["memap",3],["result",6]]]],[11,"new","","",106,[[],["services",3]]],[11,"change","","",106,[[]]],[11,"next_id","","",106,[[]]],[11,"push_service","","Adds the given subblock to the database, returning its…",106,[[["service",4]]]],[11,"add_service","","Adds the given service to the database, returning its…",106,[[["service",4]]]],[11,"get_mut_service","","Get a mutable reference to the service with the given ID",106,[[],[["result",6],["service",4]]]],[11,"get_service","","Get a read-only reference to the service with the given…",106,[[],[["service",4],["result",6]]]],[11,"get_as_swd","","",106,[[],[["service",3],["result",6]]]],[11,"get_as_jtag","","",106,[[],[["result",6],["service",3]]]],[11,"get_as_arm_debug","","",106,[[],[["armdebug",3],["result",6]]]],[11,"get_as_dp","","",106,[[],[["result",6],["dp",3]]]],[11,"get_as_mut_dp","","",106,[[],[["result",6],["dp",3]]]],[11,"get_as_jtag_dp","","",106,[[],[["jtagdp",3],["result",6]]]],[11,"get_as_mut_jtag_dp","","",106,[[],[["result",6],["jtagdp",3]]]],[11,"get_as_mem_ap","","",106,[[],[["memap",3],["result",6]]]],[11,"get_as_mut_arm_debug","","",106,[[],[["result",6],["armdebug",3]]]],[0,"standards","origen","",null,null],[0,"actions","origen::standards","",null,null],[3,"STANDARD_ACTIONS","origen::standards::actions","",null,null],[5,"standard_actions","","",null,[[],[["string",3],["hashmap",3]]]],[7,"DRIVE_HIGH","","",null,null],[7,"DRIVE_LOW","","",null,null],[7,"VERIFY_HIGH","","",null,null],[7,"VERIFY_LOW","","",null,null],[7,"HIGHZ","","",null,null],[7,"CAPTURE","","",null,null],[0,"testers","origen","",null,null],[3,"DummyRenderer","origen::testers","",null,null],[3,"DummyRendererWithInterceptors","","",null,null],[4,"SupportedTester","","",null,null],[13,"ALL","","Generally, the absence of an optional SupportedTester…",107,null],[13,"V93K","","Indicates support for all versions of SMT on the V93K",107,null],[13,"V93KSMT7","","Indicates support for V93K SMT7 only, i.e. not SMT8",107,null],[13,"V93KSMT8","","Indicates support for V93K SMT8 only, i.e. not SMT7",107,null],[13,"IGXL","","Indicates support for all IGXL-based testers",107,null],[13,"J750","","",107,null],[13,"ULTRAFLEX","","",107,null],[13,"SIMULATOR","","",107,null],[13,"DUMMYRENDERER","","",107,null],[13,"DUMMYRENDERERWITHINTERCEPTORS","","",107,null],[13,"CUSTOM","","",107,null],[5,"instantiate_tester","","",null,[[["supportedtester",4]],[["result",6],["box",3]]]],[0,"api","","",null,null],[5,"comment","origen::testers::api","",null,[[]]],[8,"ControllerAPI","","",null,null],[10,"name","","",108,[[],["string",3]]],[11,"comment","","",108,[[]]],[0,"igxl","origen::testers","",null,null],[0,"j750","origen::testers::igxl","",null,null],[3,"J750","origen::testers::igxl::j750","",null,null],[11,"default","","",109,[[]]],[0,"ultraflex","origen::testers::igxl","",null,null],[3,"UltraFlex","origen::testers::igxl::ultraflex","",null,null],[0,"simulator","origen::testers","",null,null],[3,"Renderer","origen::testers::simulator","",null,null],[0,"smt","origen::testers","",null,null],[0,"v93k","origen::testers::smt","",null,null],[0,"smt7","origen::testers::smt::v93k","",null,null],[3,"SMT7","origen::testers::smt::v93k::smt7","",null,null],[0,"smt8","origen::testers::smt::v93k","",null,null],[11,"all_names","origen::testers","Returns the names of all available testers",107,[[],[["vec",3],["string",3]]]],[11,"new","","",107,[[],["origenresult",6]]],[11,"is_compatible_with","","Returns true if the given tester is equal to self or if…",107,[[["supportedtester",4]]]],[11,"is_a_derivative_of","","Returns true if self is a derivative of the given tester.…",107,[[["supportedtester",4]]]],[0,"vector_based","","",null,null],[0,"api","origen::testers::vector_based","",null,null],[5,"cycle","origen::testers::vector_based::api","",null,[[]]],[5,"cycle_node","","",null,[[],["node",3]]],[5,"repeat","","",null,[[]]],[5,"repeat_node","","",null,[[],["node",3]]],[5,"repeat2","","",null,[[]]],[5,"repeat2_node","","",null,[[],["node",3]]],[0,"pattern_renderer","origen::testers::vector_based","",null,null],[3,"Renderer","origen::testers::vector_based::pattern_renderer","",null,null],[12,"tester","","",110,null],[12,"current_timeset_id","","",110,null],[12,"path","","",110,null],[12,"output_file","","",110,null],[12,"states","","",110,null],[12,"pin_header_printed","","",110,null],[12,"pin_header_id","","",110,null],[8,"RendererAPI","","",null,null],[10,"file_ext","","",111,[[]]],[10,"comment_str","","",111,[[]]],[10,"print_vector","","",111,[[["renderer",3]],[["option",4],["result",6]]]],[10,"print_pinlist","","",111,[[["renderer",3]],[["option",4],["result",6]]]],[11,"override_node","","",111,[[["renderer",3],["node",3]],[["option",4],["result",6]]]],[11,"print_pattern_end","","",111,[[["renderer",3]],[["option",4],["result",6]]]],[11,"run","","",110,[[["node",3],["rendererapi",8]],[["result",6],["vec",3]]]],[11,"states","","",110,[[["dut",3]],["statetracker",3]]],[11,"update_states","","",110,[[["vec",3],["dut",3]],[["result",6],["return",4]]]],[11,"render_states","","",110,[[],[["string",3],["result",6]]]],[11,"timeset_name","","",110,[[],[["string",3],["result",6]]]],[8,"VectorBased","origen::testers::vector_based","",null,null],[10,"comment_str","","",112,[[]]],[10,"file_ext","","",112,[[]]],[10,"print_vector","","",112,[[["renderer",3]],[["option",4],["result",6]]]],[10,"print_pinlist","","",112,[[["renderer",3]],[["option",4],["result",6]]]],[11,"print_pattern_end","","",112,[[["renderer",3]],[["option",4],["result",6]]]],[11,"pin_action_resolver","","",112,[[],[["resolver",3],["option",4]]]],[0,"utility","origen","",null,null],[5,"resolve_dir_from_app_root","origen::utility","Resolves a directory path from the current application…",null,[[["option",4],["string",3]],["pathbuf",3]]],[5,"str_to_bool","","",null,[[],["result",6]]],[5,"bytes_from_str_of_bytes","","For convenience in converting to/from configs, allow bytes…",null,[[],[["vec",3],["result",6]]]],[5,"str_from_byte_array","","",null,[[],[["string",3],["result",6]]]],[5,"keygen","","",null,[[],[["u32",6],["genericarray",3]]]],[5,"noncegen","","",null,[[],[["genericarray",3],["u12",6]]]],[5,"encrypt","","",null,[[],[["vec",3],["result",6]]]],[5,"encrypt_with","","",null,[[["u12",6],["u32",6],["genericarray",3],["genericarray",3]],[["vec",3],["result",6]]]],[5,"decrypt","","",null,[[],[["string",3],["result",6]]]],[5,"decrypt_with","","",null,[[["u12",6],["u32",6],["genericarray",3],["genericarray",3]],[["string",3],["result",6]]]],[0,"big_uint_helpers","","Helpers for working with BigUnits",null,null],[5,"bit_slice","origen::utility::big_uint_helpers","Returns the value of the given BigUint for the given bit…",null,[[["biguint",3]],[["result",6],["biguint",3]]]],[8,"BigUintHelpers","","",null,null],[16,"T","","",113,null],[10,"reverse","","",113,[[],["result",6]]],[10,"chunk","","",113,[[],[["vec",3],["result",6]]]],[0,"differ","origen::utility","",null,null],[3,"ASCIIDiffer","origen::utility::differ","A utility for diffing two different files, with the…",null,null],[12,"ignore_blank_lines","","",114,null],[8,"Differ","","",null,null],[10,"has_diffs","","Returns true if diffs are found between the contained…",115,[[],["result",6]]],[11,"new","","",114,[[["path",3]]]],[11,"suspend_on","","Set the diff to suspend when the given pattern string is…",114,[[],["result",6]]],[11,"resume_on","","Set the diff to resume when the given pattern string is…",114,[[],["result",6]]],[11,"ignore_comments","","Ignore comments as defined by the given command char(s),…",114,[[],["result",6]]],[11,"run","","Returns true if diffs are found between the two files…",114,[[],["result",6]]],[0,"file_actions","origen::utility","A collection of utilities for making modifications to…",null,null],[5,"insert_before","origen::utility::file_actions","Insert the given text into the given file immediately…",null,[[["regex",3],["path",3]],["result",6]]],[5,"insert_before_all","","Like insert_before, but this function will insert the…",null,[[["regex",3],["path",3]],["result",6]]],[5,"insert_after","","Insert the given text into the given file immediately…",null,[[["regex",3],["path",3]],["result",6]]],[5,"insert_after_all","","Like insert_after, but this function will insert the given…",null,[[["regex",3],["path",3]],["result",6]]],[5,"prepend","","Prepend the given text at the start of the given file.…",null,[[["path",3]],["result",6]]],[5,"append","","Append the given text at the end of the given file.…",null,[[["path",3]],["result",6]]],[5,"remove_line","","Remove the first line in the given file that matches the…",null,[[["regex",3],["path",3]],["result",6]]],[5,"remove_line_all","","Like remove_line, but removes all matching lines in the…",null,[[["regex",3],["path",3]],["result",6]]],[5,"contains","","Returns Ok(true) if any line in the given file matches the…",null,[[["regex",3],["path",3]],["result",6]]],[5,"replace","","Replaces the first occurrence of the given regex with the…",null,[[["regex",3],["path",3]],["result",6]]],[5,"replace_all","","Like replace, but replaces occurences of the given regex…",null,[[["regex",3],["path",3]],["result",6]]],[0,"file_utils","origen::utility","",null,null],[4,"FilePermissions","origen::utility::file_utils","",null,null],[13,"Private","","",116,null],[13,"Group","","",116,null],[13,"GroupWritable","","",116,null],[13,"PublicWithGroupWritable","","",116,null],[13,"Public","","",116,null],[13,"WorldWritable","","",116,null],[13,"Custom","","",116,null],[5,"to_relative_path","","Returns the given abs path as a relative path. By default…",null,[[["option",4],["path",3]],[["pathbuf",3],["result",6]]]],[5,"with_dir","","Temporarily sets the current dir to the given dir for the…",null,[[["path",3]],["result",6]]],[5,"symlink","","Create a symlink, works on Linux or Windows. The dst path…",null,[[["asref",8],["path",3]],["result",6]]],[5,"mv","","Move a file or directory",null,[[["path",3]],["result",6]]],[5,"copy","","Copy the given file or directory to the given directory,…",null,[[["path",3]],["result",6]]],[5,"copy_contents","","Like copy, however if the source is a directory then its…",null,[[["path",3]],["result",6]]],[5,"_copy","","",null,[[["path",3]],["result",6]]],[11,"to_str","","",116,[[],["string",3]]],[11,"to_i","","",116,[[]]],[11,"from_str","","",116,[[],["result",6]]],[11,"from_i","","",116,[[],["result",6]]],[11,"apply_to","","",116,[[["path",3]],["result",6]]],[0,"location","origen::utility","",null,null],[3,"Location","origen::utility::location","Stores a location and implements some helpers for…",null,null],[12,"location","","The raw location",117,null],[11,"new","","",117,[[]]],[11,"url","","",117,[[],[["string",3],["option",4]]]],[11,"git","","",117,[[],[["string",3],["option",4]]]],[11,"git_https","","",117,[[],[["string",3],["option",4]]]],[11,"git_ssh","","",117,[[],[["string",3],["option",4]]]],[11,"path","","",117,[[],[["pathbuf",3],["option",4]]]],[0,"logger","origen::utility","The Origen logger is implemented as a singleton and data…",null,null],[3,"Logger","origen::utility::logger","",null,null],[3,"Inner","","",null,null],[5,"log_dir","","",null,[[],["pathbuf",3]]],[11,"verbosity","","",118,[[]]],[11,"set_verbosity","","",118,[[],["result",6]]],[11,"set_status_ready","","This is called automatically by Origen during the boot…",118,[[]]],[11,"display","","This is the same as calling \'print!\' but with it also…",118,[[]]],[11,"displayln","","Like display!, but appends a newline, this is like calling…",118,[[]]],[11,"display_green","","See display",118,[[]]],[11,"display_greenln","","See displayln",118,[[]]],[11,"display_yellow","","See display",118,[[]]],[11,"display_yellowln","","See displayln",118,[[]]],[11,"display_cyan","","See display",118,[[]]],[11,"display_cyanln","","See displayln",118,[[]]],[11,"display_red","","See display",118,[[]]],[11,"display_redln","","See displayln",118,[[]]],[11,"display_block","","See display",118,[[["vec",3]]]],[11,"debug","","Log a debug message, this will be displayed in the…",118,[[]]],[11,"debug_block","","Log a debug message, this will be displayed in the…",118,[[["vec",3]]]],[11,"trace","","Log a trace (very low level) debug message, this will be…",118,[[]]],[11,"trace_block","","Log a trace (very low level) debug message, this will be…",118,[[["vec",3]]]],[11,"deprecated","","Log a deprecation warning message, this will be displayed…",118,[[]]],[11,"deprecated_block","","Log a deprecation warning message, this will be displayed…",118,[[["vec",3]]]],[11,"error","","Log an error message, this will always be displayed in the…",118,[[]]],[11,"error_block","","Log an error message, this will always be displayed in the…",118,[[["vec",3]]]],[11,"info","","Log an info message, this will be displayed in the…",118,[[]]],[11,"info_block","","Log an info message, this will be displayed in the…",118,[[["vec",3]]]],[11,"success","","Log a success message, this will be displayed in the…",118,[[]]],[11,"success_block","","Log a success message, this will be displayed in the…",118,[[["vec",3]]]],[11,"warning","","Log a warning message, this will be displayed in the…",118,[[]]],[11,"warning_block","","Log a warning message, this will be displayed in the…",118,[[["vec",3]]]],[11,"output_file","","Returns the path to the current log file",118,[[],["pathbuf",3]]],[11,"open_logfile","","See with_log which is the equivalent to calling…",118,[[["option",4],["path",3]],[["pathbuf",3],["result",6]]]],[11,"close_logfile","","",118,[[]]],[11,"with_logfile","","Send all logging to the given log file for the duration of…",118,[[["option",4],["path",3]],[["pathbuf",3],["result",6]]]],[11,"default","","",118,[[],["logger",3]]],[0,"command_helpers","origen::utility","",null,null],[5,"exec_and_capture","origen::utility::command_helpers","Executes the given command/args, returning all captured…",null,[[["option",4],["vec",3]],["result",6]]],[5,"log_stdout_and_stderr","","Log both stdout and stderr to the debug and error logs…",null,[[["option",4],["fnmut",8],["child",3]]]],[5,"log_stdout","","Log stdout to the debug log, optionally calling a callback…",null,[[["option",4],["fnmut",8],["child",3]]]],[5,"log_stderr","","Log stderr to the error log, optionally calling a callback…",null,[[["option",4],["fnmut",8],["child",3]]]],[0,"num_helpers","origen::utility","",null,null],[8,"NumHelpers","origen::utility::num_helpers","",null,null],[16,"T","","",119,null],[10,"even_parity","","",119,[[]]],[0,"version","origen::utility","Utility functions for dealing with app/Origen version…",null,null],[5,"to_pep440","origen::utility::version","Converts a version number like 1.2.3-dev4 to 1.2.3.dev4,…",null,[[],[["string",3],["result",6]]]],[5,"to_semver","","Converts a PEP440 version number like 1.2.3.dev4 to…",null,[[],[["string",3],["result",6]]]],[0,"mailer","origen::utility","",null,null],[3,"Maillist","origen::utility::mailer","",null,null],[12,"to","","",120,null],[3,"Mailer","","",null,null],[12,"server","","",121,null],[12,"port","","",121,null],[12,"from","","",121,null],[12,"from_alias","","",121,null],[12,"auth_method","","",121,null],[12,"auth_email","","",121,null],[12,"auth_password","","",121,null],[12,"domain","","",121,null],[3,"GlobalContext","","Global context for the mailer applied to every email.…",null,null],[12,"include_website","","",122,null],[12,"website","","",122,null],[12,"include_app_context","","",122,null],[12,"include_app_intro","","",122,null],[3,"EmailContent","","Wrapper around Lettre\'s Email Builder, providing some…",null,null],[12,"subject","","",123,null],[12,"body","","",123,null],[12,"global_context","","Everything in the global context allows per-email…",123,null],[11,"new","","",121,[[],["result",6]]],[11,"get_server","","",121,[[],[["string",3],["result",6]]]],[11,"get_auth_email","","",121,[[],[["string",3],["result",6]]]],[11,"get_auth_password","","",121,[[],[["string",3],["result",6]]]],[11,"get_port","","",121,[[],["result",6]]],[11,"html_singlepart","","",121,[[],[["singlepart",3],["result",6]]]],[11,"compose","","",121,[[["option",4],["vec",3]],[["result",6],["message",3]]]],[11,"send","","",121,[[["message",3]],["result",6]]],[11,"test","","",121,[[["option",4],["vec",3]],["result",6]]],[11,"origen_sig","","",121,[[],[["multipart",3],["result",6]]]],[0,"ldap","origen::utility","",null,null],[3,"LDAPs","origen::utility::ldap","",null,null],[3,"LDAP","","",null,null],[4,"SupportedAuths","","",null,null],[13,"SimpleBind","","",124,null],[11,"get_standalone","","",125,[[],[["ldap",3],["result",6]]]],[11,"get","","",125,[[],[["ldap",3],["option",4]]]],[11,"_get","","",125,[[],[["result",6],["ldap",3]]]],[11,"get_mut","","",125,[[],[["ldap",3],["option",4]]]],[11,"_get_mut","","",125,[[],[["ldap",3],["result",6]]]],[11,"ldaps","","",125,[[],["hashmap",3]]],[11,"new","","",125,[[]]],[11,"try_password","","",125,[[],["result",6]]],[11,"with_standalone","","",125,[[],["result",6]]],[11,"to_str","","",124,[[]]],[11,"from_str","","",124,[[["option",4],["string",3]],["result",6]]],[11,"to_hashmap","","",124,[[],[["string",3],["hashmap",3]]]],[11,"bind","","",124,[[["ldapconn",3]],["result",6]]],[11,"new","","",126,[[["supportedauths",4]],["result",6]]],[11,"from_config","","",126,[[],["result",6]]],[11,"name","","",126,[[]]],[11,"server","","",126,[[]]],[11,"base","","",126,[[]]],[11,"auth","","",126,[[],["supportedauths",4]]],[11,"bound","","",126,[[]]],[11,"bind","","",126,[[],["result",6]]],[11,"bind_as","","",126,[[],["result",6]]],[11,"bind_with","","",126,[[["supportedauths",4]],["result",6]]],[11,"unbind","","",126,[[],["result",6]]],[11,"search","","",126,[[["vec",3]],[["result",6],["hashmap",3]]]],[11,"single_filter_search","","",126,[[["vec",3]],["result",6]]],[0,"session_store","origen::utility","",null,null],[3,"Sessions","origen::utility::session_store","",null,null],[12,"app_session_root","","",127,null],[12,"user_session_root","","",127,null],[12,"app_sessions","","",127,null],[12,"user_sessions","","",127,null],[3,"SessionData","","",null,null],[3,"SessionStore","","",null,null],[12,"path","","",128,null],[4,"Storeable","","",null,null],[13,"Val","","",129,null],[13,"Serialized","","",129,null],[11,"new","","",127,[[]]],[11,"app_session","","",127,[[["string",3],["option",4]],[["sessionstore",3],["result",6]]]],[11,"user_session","","",127,[[["string",3],["option",4]],[["sessionstore",3],["result",6]]]],[11,"create_app_session","","",127,[[["pathbuf",3]],["result",6]]],[11,"create_user_session","","",127,[[["pathbuf",3]],["result",6]]],[11,"get_app_session_root_string","","",127,[[],[["string",3],["result",6]]]],[11,"get_user_session_root_string","","",127,[[],[["string",3],["result",6]]]],[11,"get_session","","",127,[[["pathbuf",3]],[["result",6],["sessionstore",3]]]],[11,"get_mut_session","","",127,[[["pathbuf",3]],[["sessionstore",3],["result",6]]]],[11,"clear_cache","","",127,[[],["result",6]]],[11,"remove_files","","",127,[[],["result",6]]],[11,"available_app_sessions","","",127,[[],[["result",6],["vec",3]]]],[11,"available_user_sessions","","",127,[[],[["result",6],["vec",3]]]],[11,"new","","",128,[[["pathbuf",3],["filepermissions",4]],["result",6]]],[11,"remove_file","","",128,[[],["result",6]]],[11,"name","","",128,[[],[["string",3],["result",6]]]],[11,"store","","",128,[[["string",3],["metadata",4]],["result",6]]],[11,"store_serialized","","",128,[[["string",3],["option",4]],["result",6]]],[11,"delete","","",128,[[],[["option",4],["result",6]]]],[11,"retrieve","","",128,[[],[["option",4],["result",6]]]],[11,"retrieve_serialized","","",128,[[],[["option",4],["result",6]]]],[11,"refresh","","",128,[[],["result",6]]],[11,"read_toml","","",128,[[["pathbuf",3]],[["option",4],["result",6]]]],[11,"write","","",128,[[],["result",6]]],[0,"built_info","origen","",null,null],[17,"CI_PLATFORM","origen::built_info","The Continuous Integration platform detected during…",null,null],[17,"PKG_VERSION","","The full version.",null,null],[17,"PKG_VERSION_MAJOR","","The major version.",null,null],[17,"PKG_VERSION_MINOR","","The minor version.",null,null],[17,"PKG_VERSION_PATCH","","The patch version.",null,null],[17,"PKG_VERSION_PRE","","The pre-release version.",null,null],[17,"PKG_AUTHORS","","A colon-separated list of authors.",null,null],[17,"PKG_NAME","","The name of the package.",null,null],[17,"PKG_DESCRIPTION","","The description.",null,null],[17,"PKG_HOMEPAGE","","The homepage.",null,null],[17,"TARGET","","The target triple that was being compiled for.",null,null],[17,"HOST","","The host triple of the rust compiler.",null,null],[17,"PROFILE","","`release` for release builds, `debug` for other builds.",null,null],[17,"RUSTC","","The compiler that cargo resolved to use.",null,null],[17,"RUSTDOC","","The documentation generator that cargo resolved to use.",null,null],[17,"OPT_LEVEL","","Value of OPT_LEVEL for the profile used during compilation.",null,null],[17,"NUM_JOBS","","The parallelism that was specified during compilation.",null,null],[17,"DEBUG","","Value of DEBUG for the profile used during compilation.",null,null],[17,"FEATURES","","The features that were enabled during compilation.",null,null],[17,"FEATURES_STR","","The features as a comma-separated string.",null,null],[17,"RUSTC_VERSION","","The output of `rustc -V`",null,null],[17,"RUSTDOC_VERSION","","The output of `rustdoc -V`",null,null],[17,"CFG_TARGET_ARCH","","The target architecture, given by `cfg!(target_arch)`.",null,null],[17,"CFG_ENDIAN","","The endianness, given by `cfg!(target_endian)`.",null,null],[17,"CFG_ENV","","The toolchain-environment, given by `cfg!(target_env)`.",null,null],[17,"CFG_FAMILY","","The OS-family, given by `cfg!(target_family)`.",null,null],[17,"CFG_OS","","The operating system, given by `cfg!(target_os)`.",null,null],[17,"CFG_POINTER_WIDTH","","The pointer width, given by `cfg!(target_pointer_width)`.",null,null],[6,"Result","origen","",null,null],[17,"MODES","","The available Origen runtime modes",null,null],[11,"to_write_transaction","","",0,[[["mutexguard",3]],[["transaction",3],["result",6]]]],[11,"to_verify_transaction","","",0,[[["mutexguard",3]],[["transaction",3],["result",6]]]],[14,"node","","",null,null],[14,"trace","","",null,null],[14,"exit_success","","Exit the origen process with a passing exit code and a big…",null,null],[14,"exit_pass","","Exit the origen process with a passing exit code and a big…",null,null],[14,"exit_fail","","Exit the origen process with a failing exit code and a big…",null,null],[14,"exit_error","","Exit the origen process with a failing exit code and a big…",null,null],[14,"error","","Returns an Err with the given error message",null,null],[14,"display","","",null,null],[14,"displayln","","",null,null],[14,"display_green","","",null,null],[14,"display_greenln","","",null,null],[14,"display_yellow","","",null,null],[14,"display_yellowln","","",null,null],[14,"display_cyan","","",null,null],[14,"display_cyanln","","",null,null],[14,"display_red","","",null,null],[14,"display_redln","","",null,null],[14,"log_debug","","",null,null],[14,"log_info","","",null,null],[14,"log_deprecated","","",null,null],[14,"log_error","","",null,null],[14,"log_success","","",null,null],[14,"log_warning","","",null,null],[14,"log_trace","","",null,null],[14,"hashmap","","",null,null],[14,"get_reg","","",null,null],[14,"get_bc_for","","",null,null],[14,"get_reg_as_bc","","",null,null],[14,"add_reg_32bit","","",null,null],[14,"add_reg","","",null,null],[14,"field","","",null,null],[14,"some_hard_reset_val","","",null,null],[14,"duplicate_error","","Returns an Origen Error with pre-formatted message…",null,null],[14,"backend_lookup_error","","Returns a error stating that the backend doesn\'t have an…",null,null],[14,"lookup_error","","",null,null],[14,"push_pin_actions","","",null,null],[14,"text","","",null,null],[14,"add_children","","",null,null],[14,"text_line","","",null,null],[14,"swd_ok","","",null,null],[14,"backend_fail","","",null,null],[14,"backend_expect","","",null,null],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_py","","",130,[[["python",3]]]],[11,"into_py","","",130,[[["python",3]]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_py","","",131,[[["python",3]]]],[11,"into_py","","",131,[[["python",3]]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from_py","","",132,[[["python",3]]]],[11,"into_py","","",132,[[["python",3]]]],[11,"vzip","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_py","","",133,[[["python",3]]]],[11,"into_py","","",133,[[["python",3]]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from_py","","",134,[[["python",3]]]],[11,"into_py","","",134,[[["python",3]]]],[11,"vzip","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_py","","",135,[[["python",3]]]],[11,"into_py","","",135,[[["python",3]]]],[11,"vzip","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_py","","",136,[[["python",3]]]],[11,"into_py","","",136,[[["python",3]]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_py","","",137,[[["python",3]]]],[11,"into_py","","",137,[[["python",3]]]],[11,"vzip","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_py","","",138,[[["python",3]]]],[11,"into_py","","",138,[[["python",3]]]],[11,"vzip","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_py","","",139,[[["python",3]]]],[11,"into_py","","",139,[[["python",3]]]],[11,"vzip","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_py","","",140,[[["python",3]]]],[11,"into_py","","",140,[[["python",3]]]],[11,"vzip","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_py","","",141,[[["python",3]]]],[11,"into_py","","",141,[[["python",3]]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_py","","",142,[[["python",3]]]],[11,"into_py","","",142,[[["python",3]]]],[11,"vzip","","",142,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"vzip","","",0,[[]]],[11,"from","origen::core::application","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"vzip","","",1,[[]]],[11,"from","origen::core::application::config","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_py","","",2,[[["python",3]]]],[11,"into_py","","",2,[[["python",3]]]],[11,"vzip","","",2,[[]]],[11,"from","origen::core::config","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_py","","",143,[[["python",3]]]],[11,"into_py","","",143,[[["python",3]]]],[11,"vzip","","",143,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"vzip","","",3,[[]]],[11,"from","origen::core::dut","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_py","","",4,[[["python",3]]]],[11,"into_py","","",4,[[["python",3]]]],[11,"vzip","","",4,[[]]],[11,"from","origen::core::file_handler","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_py","","",5,[[["python",3]]]],[11,"into_py","","",5,[[["python",3]]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_py","","",6,[[["python",3]]]],[11,"into_py","","",6,[[["python",3]]]],[11,"vzip","","",6,[[]]],[11,"from","origen::core::metadata","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_py","","",7,[[["python",3]]]],[11,"into_py","","",7,[[["python",3]]]],[11,"vzip","","",7,[[]]],[11,"from","origen::core::model","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"vzip","","",8,[[]]],[11,"from","origen::core::model::pins","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from_py","","",18,[[["python",3]]]],[11,"into_py","","",18,[[["python",3]]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_py","","",19,[[["python",3]]]],[11,"into_py","","",19,[[["python",3]]]],[11,"vzip","","",19,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_py","","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"vzip","","",9,[[]]],[11,"from","origen::core::model::pins::pin","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_py","","",14,[[["python",3]]]],[11,"into_py","","",14,[[["python",3]]]],[11,"vzip","","",14,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_py","","",11,[[["python",3]]]],[11,"into_py","","",11,[[["python",3]]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_py","","",12,[[["python",3]]]],[11,"into_py","","",12,[[["python",3]]]],[11,"vzip","","",12,[[]]],[11,"from","origen::core::model::pins::pin_group","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from_py","","",15,[[["python",3]]]],[11,"into_py","","",15,[[["python",3]]]],[11,"vzip","","",15,[[]]],[11,"from","origen::core::model::pins::pin_header","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_py","","",16,[[["python",3]]]],[11,"into_py","","",16,[[["python",3]]]],[11,"vzip","","",16,[[]]],[11,"from","origen::core::model::pins::pin_store","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_py","","",17,[[["python",3]]]],[11,"into_py","","",17,[[["python",3]]]],[11,"vzip","","",17,[[]]],[11,"from","origen::core::model::registers","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_py","","",20,[[["python",3]]]],[11,"into_py","","",20,[[["python",3]]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_py","","",21,[[["python",3]]]],[11,"into_py","","",21,[[["python",3]]]],[11,"vzip","","",21,[[]]],[11,"from","origen::core::model::registers::address_block","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from_py","","",22,[[["python",3]]]],[11,"into_py","","",22,[[["python",3]]]],[11,"vzip","","",22,[[]]],[11,"from","origen::core::model::registers::bit","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_py","","",23,[[["python",3]]]],[11,"into_py","","",23,[[["python",3]]]],[11,"vzip","","",23,[[]]],[11,"from","origen::core::model::registers::bit_collection","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_py","","",24,[[["python",3]]]],[11,"into_py","","",24,[[["python",3]]]],[11,"vzip","","",24,[[]]],[11,"from","origen::core::model::registers::field","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_py","","",25,[[["python",3]]]],[11,"into_py","","",25,[[["python",3]]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_py","","",26,[[["python",3]]]],[11,"into_py","","",26,[[["python",3]]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_py","","",27,[[["python",3]]]],[11,"into_py","","",27,[[["python",3]]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_py","","",28,[[["python",3]]]],[11,"into_py","","",28,[[["python",3]]]],[11,"vzip","","",28,[[]]],[11,"from","origen::core::model::registers::memory_map","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from_py","","",29,[[["python",3]]]],[11,"into_py","","",29,[[["python",3]]]],[11,"vzip","","",29,[[]]],[11,"from","origen::core::model::registers::register","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from_py","","",30,[[["python",3]]]],[11,"into_py","","",30,[[["python",3]]]],[11,"vzip","","",30,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"into_iter","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_py","","",144,[[["python",3]]]],[11,"into_py","","",144,[[["python",3]]]],[11,"vzip","","",144,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_py","","",31,[[["python",3]]]],[11,"into_py","","",31,[[["python",3]]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from_py","","",32,[[["python",3]]]],[11,"into_py","","",32,[[["python",3]]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from_py","","",33,[[["python",3]]]],[11,"into_py","","",33,[[["python",3]]]],[11,"vzip","","",33,[[]]],[11,"from","origen::core::model::registers::register_file","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_py","","",34,[[["python",3]]]],[11,"into_py","","",34,[[["python",3]]]],[11,"vzip","","",34,[[]]],[11,"from","origen::core::model::timesets::timeset","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_py","","",35,[[["python",3]]]],[11,"into_py","","",35,[[["python",3]]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_py","","",36,[[["python",3]]]],[11,"into_py","","",36,[[["python",3]]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_py","","",37,[[["python",3]]]],[11,"into_py","","",37,[[["python",3]]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_py","","",38,[[["python",3]]]],[11,"into_py","","",38,[[["python",3]]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_py","","",39,[[["python",3]]]],[11,"into_py","","",39,[[["python",3]]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_py","","",40,[[["python",3]]]],[11,"into_py","","",40,[[["python",3]]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_py","","",41,[[["python",3]]]],[11,"into_py","","",41,[[["python",3]]]],[11,"vzip","","",41,[[]]],[11,"from","origen::core::producer","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_py","","",42,[[["python",3]]]],[11,"into_py","","",42,[[["python",3]]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_py","","",43,[[["python",3]]]],[11,"into_py","","",43,[[["python",3]]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_py","","",44,[[["python",3]]]],[11,"into_py","","",44,[[["python",3]]]],[11,"vzip","","",44,[[]]],[11,"from","origen::core::producer::job","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_py","","",45,[[["python",3]]]],[11,"into_py","","",45,[[["python",3]]]],[11,"vzip","","",45,[[]]],[11,"from","origen::core::status","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_py","","",46,[[["python",3]]]],[11,"into_py","","",46,[[["python",3]]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_py","","",47,[[["python",3]]]],[11,"into_py","","",47,[[["python",3]]]],[11,"vzip","","",47,[[]]],[11,"from","origen::core::tester","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_py","","",48,[[["python",3]]]],[11,"into_py","","",48,[[["python",3]]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_py","","",49,[[["python",3]]]],[11,"into_py","","",49,[[["python",3]]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"equivalent","","",50,[[]]],[11,"from_py","","",50,[[["python",3]]]],[11,"into_py","","",50,[[["python",3]]]],[11,"vzip","","",50,[[]]],[11,"from","origen::core::user","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_py","","",57,[[["python",3]]]],[11,"into_py","","",57,[[["python",3]]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_py","","",58,[[["python",3]]]],[11,"into_py","","",58,[[["python",3]]]],[11,"vzip","","",58,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from_py","","",55,[[["python",3]]]],[11,"into_py","","",55,[[["python",3]]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_py","","",56,[[["python",3]]]],[11,"into_py","","",56,[[["python",3]]]],[11,"vzip","","",56,[[]]],[11,"from","origen::error","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_py","","",59,[[["python",3]]]],[11,"into_py","","",59,[[["python",3]]]],[11,"vzip","","",59,[[]]],[11,"from","origen::generator","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_py","","",60,[[["python",3]]]],[11,"into_py","","",60,[[["python",3]]]],[11,"vzip","","",60,[[]]],[11,"from","origen::generator::ast","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_py","","",61,[[["python",3]]]],[11,"into_py","","",61,[[["python",3]]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_py","","",62,[[["python",3]]]],[11,"into_py","","",62,[[["python",3]]]],[11,"vzip","","",62,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_py","","",64,[[["python",3]]]],[11,"into_py","","",64,[[["python",3]]]],[11,"vzip","","",64,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_py","","",63,[[["python",3]]]],[11,"into_py","","",63,[[["python",3]]]],[11,"vzip","","",63,[[]]],[11,"from","origen::generator::processor","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_py","","",65,[[["python",3]]]],[11,"into_py","","",65,[[["python",3]]]],[11,"vzip","","",65,[[]]],[11,"from","origen::generator::processors","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_py","","",68,[[["python",3]]]],[11,"into_py","","",68,[[["python",3]]]],[11,"vzip","","",68,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from_py","","",67,[[["python",3]]]],[11,"into_py","","",67,[[["python",3]]]],[11,"vzip","","",67,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_py","","",69,[[["python",3]]]],[11,"into_py","","",69,[[["python",3]]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_py","","",70,[[["python",3]]]],[11,"into_py","","",70,[[["python",3]]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_py","","",71,[[["python",3]]]],[11,"into_py","","",71,[[["python",3]]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_py","","",72,[[["python",3]]]],[11,"into_py","","",72,[[["python",3]]]],[11,"vzip","","",72,[[]]],[11,"from","origen::generator::stil","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from_py","","",73,[[["python",3]]]],[11,"into_py","","",73,[[["python",3]]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_py","","",74,[[["python",3]]]],[11,"into_py","","",74,[[["python",3]]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_py","","",75,[[["python",3]]]],[11,"into_py","","",75,[[["python",3]]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_py","","",76,[[["python",3]]]],[11,"into_py","","",76,[[["python",3]]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_py","","",77,[[["python",3]]]],[11,"into_py","","",77,[[["python",3]]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_py","","",78,[[["python",3]]]],[11,"into_py","","",78,[[["python",3]]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_py","","",79,[[["python",3]]]],[11,"into_py","","",79,[[["python",3]]]],[11,"vzip","","",79,[[]]],[11,"from","origen::generator::utility::transaction","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from_py","","",80,[[["python",3]]]],[11,"into_py","","",80,[[["python",3]]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_py","","",81,[[["python",3]]]],[11,"into_py","","",81,[[["python",3]]]],[11,"vzip","","",81,[[]]],[11,"from","origen::prog_gen","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_py","","",90,[[["python",3]]]],[11,"into_py","","",90,[[["python",3]]]],[11,"vzip","","",90,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_py","","",82,[[["python",3]]]],[11,"into_py","","",82,[[["python",3]]]],[11,"vzip","","",82,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[]]],[11,"from_py","","",91,[[["python",3]]]],[11,"into_py","","",91,[[["python",3]]]],[11,"vzip","","",91,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_py","","",83,[[["python",3]]]],[11,"into_py","","",83,[[["python",3]]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_py","","",84,[[["python",3]]]],[11,"into_py","","",84,[[["python",3]]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from_py","","",85,[[["python",3]]]],[11,"into_py","","",85,[[["python",3]]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from_py","","",86,[[["python",3]]]],[11,"into_py","","",86,[[["python",3]]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from_py","","",87,[[["python",3]]]],[11,"into_py","","",87,[[["python",3]]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_py","","",88,[[["python",3]]]],[11,"into_py","","",88,[[["python",3]]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from_py","","",89,[[["python",3]]]],[11,"into_py","","",89,[[["python",3]]]],[11,"vzip","","",89,[[]]],[11,"from","origen::revision_control","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from_py","","",97,[[["python",3]]]],[11,"into_py","","",97,[[["python",3]]]],[11,"vzip","","",97,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_py","","",92,[[["python",3]]]],[11,"into_py","","",92,[[["python",3]]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_py","","",93,[[["python",3]]]],[11,"into_py","","",93,[[["python",3]]]],[11,"vzip","","",93,[[]]],[11,"from","origen::revision_control::designsync","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_py","","",94,[[["python",3]]]],[11,"into_py","","",94,[[["python",3]]]],[11,"vzip","","",94,[[]]],[11,"from","origen::revision_control::git","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_py","","",95,[[["python",3]]]],[11,"into_py","","",95,[[["python",3]]]],[11,"vzip","","",95,[[]]],[11,"from","origen::services","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from_py","","",106,[[["python",3]]]],[11,"into_py","","",106,[[["python",3]]]],[11,"vzip","","",106,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from_py","","",98,[[["python",3]]]],[11,"into_py","","",98,[[["python",3]]]],[11,"vzip","","",98,[[]]],[11,"from","origen::services::arm_debug","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from_py","","",99,[[["python",3]]]],[11,"into_py","","",99,[[["python",3]]]],[11,"vzip","","",99,[[]]],[11,"from","origen::services::arm_debug::dp","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_py","","",100,[[["python",3]]]],[11,"into_py","","",100,[[["python",3]]]],[11,"vzip","","",100,[[]]],[11,"from","origen::services::arm_debug::jtag_dp","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from_py","","",101,[[["python",3]]]],[11,"into_py","","",101,[[["python",3]]]],[11,"vzip","","",101,[[]]],[11,"from","origen::services::arm_debug::mem_ap","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from_py","","",102,[[["python",3]]]],[11,"into_py","","",102,[[["python",3]]]],[11,"vzip","","",102,[[]]],[11,"from","origen::services::jtag","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from_py","","",103,[[["python",3]]]],[11,"into_py","","",103,[[["python",3]]]],[11,"vzip","","",103,[[]]],[11,"from","origen::services::swd","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from_py","","",104,[[["python",3]]]],[11,"into_py","","",104,[[["python",3]]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from_py","","",105,[[["python",3]]]],[11,"into_py","","",105,[[["python",3]]]],[11,"vzip","","",105,[[]]],[11,"from","origen::standards::actions","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_py","","",145,[[["python",3]]]],[11,"into_py","","",145,[[["python",3]]]],[11,"vzip","","",145,[[]]],[11,"render_pattern","origen::testers","",146,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",146,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",146,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",146,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",146,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",146,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",146,[[],[["box",3],["testerapi",8]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_py","","",146,[[["python",3]]]],[11,"into_py","","",146,[[["python",3]]]],[11,"vzip","","",146,[[]]],[11,"render_pattern","","",147,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",147,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",147,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",147,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",147,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",147,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",147,[[],[["box",3],["testerapi",8]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_py","","",147,[[["python",3]]]],[11,"into_py","","",147,[[["python",3]]]],[11,"vzip","","",147,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"equivalent","","",107,[[]]],[11,"from_py","","",107,[[["python",3]]]],[11,"into_py","","",107,[[["python",3]]]],[11,"vzip","","",107,[[]]],[11,"render_pattern","origen::testers::igxl::j750","",109,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",109,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",109,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",109,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",109,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",109,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",109,[[],[["box",3],["testerapi",8]]]],[11,"file_ext","","",109,[[]]],[11,"comment_str","","",109,[[]]],[11,"print_vector","","",109,[[["renderer",3]],[["option",4],["result",4]]]],[11,"print_pinlist","","",109,[[["renderer",3]],[["option",4],["result",4]]]],[11,"print_pattern_end","","",109,[[["renderer",3]],[["option",4],["result",4]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from_py","","",109,[[["python",3]]]],[11,"into_py","","",109,[[["python",3]]]],[11,"vzip","","",109,[[]]],[11,"render_pattern","origen::testers::igxl::ultraflex","",148,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",148,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",148,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",148,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",148,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",148,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",148,[[],[["box",3],["testerapi",8]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_py","","",148,[[["python",3]]]],[11,"into_py","","",148,[[["python",3]]]],[11,"vzip","","",148,[[]]],[11,"render_pattern","origen::testers::simulator","",149,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",149,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",149,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",149,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",149,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",149,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",149,[[],[["box",3],["testerapi",8]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_py","","",149,[[["python",3]]]],[11,"into_py","","",149,[[["python",3]]]],[11,"vzip","","",149,[[]]],[11,"render_pattern","origen::testers::smt::v93k::smt7","",150,[[["node",3]],[["result",4],["vec",3],["error",3]]]],[11,"pattern_differ","","",150,[[["path",3]],[["box",3],["option",4]]]],[11,"program_differ","","",150,[[["path",3]],[["box",3],["option",4]]]],[11,"pin_action_resolver","","",150,[[],[["option",4],["resolver",3]]]],[11,"render_program","","",150,[[],[["result",4],["vec",3],["error",3]]]],[11,"output_dir","","",150,[[],[["error",3],["result",4],["pathbuf",3]]]],[11,"clone_box","","",150,[[],[["box",3],["testerapi",8]]]],[11,"file_ext","","",150,[[]]],[11,"comment_str","","",150,[[]]],[11,"print_vector","","",150,[[["renderer",3]],[["option",4],["result",4]]]],[11,"print_pinlist","","",150,[[["renderer",3]],[["option",4],["result",4]]]],[11,"print_pattern_end","","",150,[[["renderer",3]],[["option",4],["result",4]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_py","","",150,[[["python",3]]]],[11,"into_py","","",150,[[["python",3]]]],[11,"vzip","","",150,[[]]],[11,"from","origen::testers::vector_based::pattern_renderer","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_py","","",110,[[["python",3]]]],[11,"into_py","","",110,[[["python",3]]]],[11,"vzip","","",110,[[]]],[11,"from","origen::utility::differ","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_py","","",114,[[["python",3]]]],[11,"into_py","","",114,[[["python",3]]]],[11,"vzip","","",114,[[]]],[11,"from","origen::utility::file_utils","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_py","","",116,[[["python",3]]]],[11,"into_py","","",116,[[["python",3]]]],[11,"vzip","","",116,[[]]],[11,"from","origen::utility::location","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from_py","","",117,[[["python",3]]]],[11,"into_py","","",117,[[["python",3]]]],[11,"vzip","","",117,[[]]],[11,"from","origen::utility::logger","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from_py","","",118,[[["python",3]]]],[11,"into_py","","",118,[[["python",3]]]],[11,"vzip","","",118,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_py","","",151,[[["python",3]]]],[11,"into_py","","",151,[[["python",3]]]],[11,"vzip","","",151,[[]]],[11,"from","origen::utility::mailer","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from_py","","",120,[[["python",3]]]],[11,"into_py","","",120,[[["python",3]]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from_py","","",121,[[["python",3]]]],[11,"into_py","","",121,[[["python",3]]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from_py","","",122,[[["python",3]]]],[11,"into_py","","",122,[[["python",3]]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from_py","","",123,[[["python",3]]]],[11,"into_py","","",123,[[["python",3]]]],[11,"vzip","","",123,[[]]],[11,"from","origen::utility::ldap","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_py","","",125,[[["python",3]]]],[11,"into_py","","",125,[[["python",3]]]],[11,"vzip","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_py","","",126,[[["python",3]]]],[11,"into_py","","",126,[[["python",3]]]],[11,"vzip","","",126,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from_py","","",124,[[["python",3]]]],[11,"into_py","","",124,[[["python",3]]]],[11,"vzip","","",124,[[]]],[11,"from","origen::utility::session_store","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from_py","","",127,[[["python",3]]]],[11,"into_py","","",127,[[["python",3]]]],[11,"vzip","","",127,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_py","","",152,[[["python",3]]]],[11,"into_py","","",152,[[["python",3]]]],[11,"vzip","","",152,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from_py","","",128,[[["python",3]]]],[11,"into_py","","",128,[[["python",3]]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_py","","",129,[[["python",3]]]],[11,"into_py","","",129,[[["python",3]]]],[11,"vzip","","",129,[[]]],[11,"pin_action_resolver","origen::core::model::timesets::timeset","",36,[[["string",3]],["pinactionsresolver",3]]],[11,"mut_pin_action_resolver","","",36,[[["string",3]],["pinactionsresolver",3]]],[11,"clear_timeset","origen::testers::simulator","",149,[[["node",3]],[["result",4],["error",3]]]],[11,"set_timeset","","",149,[[["node",3]],[["result",4],["error",3]]]],[11,"cycle","","",149,[[["node",3]],[["result",4],["error",3]]]],[11,"cc","","",149,[[["node",3]],[["result",4],["error",3]]]],[11,"cycle","origen::testers","",147,[[["node",3]],["result",6]]],[11,"cc","","",147,[[["node",3]],["result",6]]],[11,"id","origen::testers::igxl::j750","",109,[[],["supportedtester",4]]],[11,"id","origen::testers::igxl::ultraflex","",148,[[],["supportedtester",4]]],[11,"id","origen::testers::simulator","",149,[[],["supportedtester",4]]],[11,"id","origen::testers::smt::v93k::smt7","",150,[[],["supportedtester",4]]],[11,"id","origen::testers","",146,[[],["supportedtester",4]]],[11,"id","","",147,[[],["supportedtester",4]]],[11,"render_pattern","origen::testers::simulator","",149,[[["node",3]],[["result",6],["vec",3]]]],[11,"render_program","origen::testers::smt::v93k::smt7","",150,[[],[["result",6],["vec",3]]]],[11,"render_pattern","origen::testers","",146,[[["node",3]],[["result",6],["vec",3]]]],[11,"render_pattern","","",147,[[["node",3]],[["result",6],["vec",3]]]],[11,"on_node","origen::generator::processors","",68,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","",68,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",67,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","",67,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",69,[[["node",3]],[["result",6],["return",4]]]],[11,"on_end_of_block","","",69,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",70,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",71,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","","",72,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","origen::testers::vector_based::pattern_renderer","",110,[[["node",3]],[["result",6],["return",4]]]],[11,"on_node","origen::testers","",146,[[["node",3]],[["return",4],["result",6]]]],[11,"on_node","","",147,[[["node",3]],[["return",4],["result",6]]]],[11,"populate","origen::revision_control::designsync","",94,[[],["result",6]]],[11,"checkout","","",94,[[["option",4],["path",3]],["result",6]]],[11,"revert","","",94,[[["option",4],["path",3]],["result",6]]],[11,"status","","",94,[[["option",4],["path",3]],[["result",6],["status",3]]]],[11,"tag","","",94,[[["option",4]],["result",6]]],[11,"populate","origen::revision_control::git","",95,[[],["origenresult",6]]],[11,"revert","","",95,[[["option",4],["path",3]],["origenresult",6]]],[11,"checkout","","",95,[[["option",4],["path",3]],["origenresult",6]]],[11,"status","","Returns an Origen RC status, which does not go into as…",95,[[["option",4],["path",3]],[["origenresult",6],["status",3]]]],[11,"tag","","",95,[[["option",4]],["origenresult",6]]],[11,"populate","origen::revision_control","",97,[[],["result",6]]],[11,"checkout","","",97,[[["option",4],["path",3]],["result",6]]],[11,"revert","","",97,[[["option",4],["path",3]],["result",6]]],[11,"status","","",97,[[["option",4],["path",3]],[["result",6],["status",3]]]],[11,"tag","","",97,[[["option",4]],["result",6]]],[11,"name","origen::services::arm_debug","",99,[[],["string",3]]],[11,"name","origen::services::jtag","",103,[[],["string",3]]],[11,"name","origen::services::swd","",104,[[],["string",3]]],[11,"comment_str","origen::testers::igxl::j750","",109,[[]]],[11,"file_ext","","",109,[[]]],[11,"print_pattern_end","","",109,[[["renderer",3]],[["option",4],["result",6]]]],[11,"print_vector","","",109,[[["renderer",3]],[["option",4],["result",6]]]],[11,"print_pinlist","","",109,[[["renderer",3]],[["option",4],["result",6]]]],[11,"pin_action_resolver","","",109,[[],[["resolver",3],["option",4]]]],[11,"comment_str","origen::testers::smt::v93k::smt7","",150,[[]]],[11,"file_ext","","",150,[[]]],[11,"print_vector","","",150,[[["renderer",3]],[["option",4],["result",6]]]],[11,"print_pinlist","","",150,[[["renderer",3]],[["option",4],["result",6]]]],[11,"print_pattern_end","","",150,[[["renderer",3]],[["option",4],["result",6]]]],[11,"has_diffs","origen::utility::differ","",114,[[],["result",6]]],[11,"even_parity","origen::generator::utility::transaction","",80,[[]]],[11,"from","origen::error","",59,[[["pyerr",3]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["lookuperror",3],["varerror",4]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["error",4]]]],[11,"from","","",59,[[["semvererror",4]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["string",3]]]],[11,"from","","",59,[[["addresserror",4]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["parsebiginterror",3]]]],[11,"from","","",59,[[["ldaperror",4]]]],[11,"from","","",59,[[["error",3]]]],[11,"from","","",59,[[["fromutf8error",3]]]],[11,"from","","",59,[[["osstring",3]]]],[11,"next_back","origen::core::model::registers::register","",144,[[],[["option",4],["summaryfield",3]]]],[11,"next","origen::core::file_handler","",6,[[],[["pathbuf",3],["option",4]]]],[11,"next","origen::core::model::registers::bit_collection","",24,[[],[["option",4],["bit",3]]]],[11,"next","origen::core::model::registers::register","",144,[[],[["option",4],["summaryfield",3]]]],[11,"clone","origen::core::file_handler","",5,[[]]],[11,"clone","","",6,[[],["filehandler",3]]],[11,"clone","origen::core::metadata","",7,[[],["metadata",4]]],[11,"clone","origen::core::model::pins::pin","",14,[[],["resolver",3]]],[11,"clone","","",10,[[],["pinaction",3]]],[11,"clone","","",12,[[],["pinroles",4]]],[11,"clone","","",11,[[]]],[11,"clone","origen::core::model::pins::pin_group","",15,[[],["pingroup",3]]],[11,"clone","origen::core::model::pins::pin_header","",16,[[],["pinheader",3]]],[11,"clone","origen::core::model::pins::pin_store","",17,[[],["pinstore",3]]],[11,"clone","origen::core::model::pins","",18,[[],["pincollection",3]]],[11,"clone","","",9,[[],["endianness",4]]],[11,"clone","","",19,[[],["statetracker",3]]],[11,"clone","origen::core::model::registers::bit_collection","",24,[[],["bitcollection",3]]],[11,"clone","origen::core::model::registers","",20,[[],["accesstype",4]]],[11,"clone","","",21,[[],["bitorder",4]]],[11,"clone","origen::core::model::timesets::timeset","",36,[[],["timeset",3]]],[11,"clone","","",37,[[],["wavetable",3]]],[11,"clone","","",38,[[],["wavegroup",3]]],[11,"clone","","",39,[[],["wave",3]]],[11,"clone","","",41,[[],["eventactions",4]]],[11,"clone","","",40,[[],["event",3]]],[11,"clone","origen::core::status","",47,[[],["operation",4]]],[11,"clone","origen::core::tester","",50,[[],["testersource",4]]],[11,"clone","origen::core::user","",56,[[],["roles",4]]],[11,"clone","origen::generator::ast","",64,[[],["ast",3]]],[11,"clone","","",62,[[],["node",3]]],[11,"clone","","",61,[[],["meta",3]]],[11,"clone","","",63,[[],["attrs",4]]],[11,"clone","origen::generator::stil","",74,[[],["signaltype",4]]],[11,"clone","","",75,[[],["termination",4]]],[11,"clone","","",76,[[],["state",4]]],[11,"clone","","",77,[[],["base",4]]],[11,"clone","","",78,[[],["alignment",4]]],[11,"clone","","",79,[[],["selector",4]]],[11,"clone","origen::generator","",60,[[],["testmanager",3]]],[11,"clone","origen::generator::utility::transaction","",81,[[],["action",4]]],[11,"clone","","",80,[[],["transaction",3]]],[11,"clone","origen::prog_gen","",82,[[],["bin",3]]],[11,"clone","","",91,[[],["flowid",3]]],[11,"clone","","",83,[[],["test",3]]],[11,"clone","","",89,[[],["patterngrouptype",4]]],[11,"clone","","",86,[[],["grouptype",4]]],[11,"clone","","",84,[[],["bintype",4]]],[11,"clone","","",85,[[],["flowcondition",4]]],[11,"clone","","",88,[[],["paramvalue",4]]],[11,"clone","","",87,[[],["paramtype",4]]],[11,"clone","origen::revision_control","",92,[[],["credentials",3]]],[11,"clone","","",93,[[],["status",3]]],[11,"clone","origen::services::arm_debug::dp","",100,[[],["dp",3]]],[11,"clone","origen::services::arm_debug::jtag_dp","",101,[[],["jtagdp",3]]],[11,"clone","origen::services::arm_debug::mem_ap","",102,[[],["memap",3]]],[11,"clone","origen::services::jtag","",103,[[],["service",3]]],[11,"clone","origen::services::swd","",105,[[],["acknowledgements",4]]],[11,"clone","","",104,[[],["service",3]]],[11,"clone","origen::testers::igxl::j750","",109,[[],["j750",3]]],[11,"clone","origen::testers::igxl::ultraflex","",148,[[],["ultraflex",3]]],[11,"clone","origen::testers::simulator","",149,[[],["renderer",3]]],[11,"clone","origen::testers::smt::v93k::smt7","",150,[[],["smt7",3]]],[11,"clone","origen::testers","",107,[[],["supportedtester",4]]],[11,"clone","origen::testers::vector_based::pattern_renderer","",110,[[],["renderer",3]]],[11,"clone","origen::testers","",146,[[],["dummyrenderer",3]]],[11,"clone","","",147,[[],["dummyrendererwithinterceptors",3]]],[11,"clone","origen::utility::location","",117,[[],["location",3]]],[11,"clone","origen::utility::ldap","",124,[[],["supportedauths",4]]],[11,"clone","origen::utility::session_store","",129,[[],["storeable",4]]],[11,"default","origen::core::config","",3,[[],["config",3]]],[11,"default","origen::core::model::registers::address_block","",22,[[],["addressblock",3]]],[11,"default","origen::core::model::registers::bit_collection","",24,[[],["bitcollection",3]]],[11,"default","origen::core::model::registers::memory_map","",29,[[],["memorymap",3]]],[11,"default","origen::core::model::registers::register","",30,[[],["register",3]]],[11,"default","origen::core::model::registers::register_file","",34,[[],["registerfile",3]]],[11,"default","origen::core::model::timesets::timeset","",36,[[]]],[11,"default","origen::core::status","",46,[[],["status",3]]],[11,"default","origen::core::tester","",49,[[],["stats",3]]],[11,"default","origen::core::user","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",55,[[],["data",3]]],[11,"default","origen::generator::utility::transaction","",80,[[]]],[11,"default","origen::revision_control","",92,[[],["credentials",3]]],[11,"default","","",93,[[],["status",3]]],[11,"default","origen::testers::igxl::j750","",109,[[]]],[11,"default","origen::testers::igxl::ultraflex","",148,[[]]],[11,"default","origen::testers::simulator","",149,[[]]],[11,"default","origen::testers::smt::v93k::smt7","",150,[[]]],[11,"default","origen::testers","",146,[[]]],[11,"default","","",147,[[]]],[11,"default","origen::utility::logger","",151,[[],["inner",3]]],[11,"default","origen::utility::mailer","",121,[[]]],[11,"default","origen::utility::session_store","",152,[[]]],[11,"eq","origen::core::metadata","",7,[[["metadata",4]]]],[11,"ne","","",7,[[["metadata",4]]]],[11,"eq","origen::core::model::pins::pin","",10,[[]]],[11,"eq","origen::core::model::registers","",20,[[["accesstype",4]]]],[11,"eq","","",21,[[["bitorder",4]]]],[11,"eq","origen::core::status","",47,[[["operation",4]]]],[11,"eq","origen::core::tester","",50,[[["testersource",4]]]],[11,"eq","","",53,[[["testersource",4]]]],[11,"eq","origen::generator::ast","",64,[[["node",3]]]],[11,"eq","","",64,[[["test",3]]]],[11,"eq","","",64,[[["testmanager",3]]]],[11,"eq","","",62,[[["node",3]]]],[11,"ne","","",62,[[["node",3]]]],[11,"eq","","",61,[[["meta",3]]]],[11,"ne","","",61,[[["meta",3]]]],[11,"eq","","",62,[[["ast",3]]]],[11,"eq","","",63,[[["attrs",4]]]],[11,"ne","","",63,[[["attrs",4]]]],[11,"eq","origen::generator::stil","",74,[[["signaltype",4]]]],[11,"eq","","",75,[[["termination",4]]]],[11,"eq","","",76,[[["state",4]]]],[11,"eq","","",77,[[["base",4]]]],[11,"eq","","",78,[[["alignment",4]]]],[11,"eq","","",79,[[["selector",4]]]],[11,"eq","origen::generator","",60,[[["ast",3]]]],[11,"eq","","",60,[[["node",3]]]],[11,"eq","origen::generator::utility::transaction","",81,[[["action",4]]]],[11,"eq","","",80,[[["transaction",3]]]],[11,"ne","","",80,[[["transaction",3]]]],[11,"eq","origen::prog_gen","",90,[[["ast",3]]]],[11,"eq","","",90,[[["node",3]]]],[11,"eq","","",91,[[["flowid",3]]]],[11,"ne","","",91,[[["flowid",3]]]],[11,"eq","","",89,[[["patterngrouptype",4]]]],[11,"eq","","",86,[[["grouptype",4]]]],[11,"eq","","",84,[[["bintype",4]]]],[11,"eq","","",85,[[["flowcondition",4]]]],[11,"ne","","",85,[[["flowcondition",4]]]],[11,"eq","","",88,[[["paramvalue",4]]]],[11,"ne","","",88,[[["paramvalue",4]]]],[11,"eq","","",87,[[["paramtype",4]]]],[11,"eq","origen::services::arm_debug::dp","",100,[[["dp",3]]]],[11,"ne","","",100,[[["dp",3]]]],[11,"eq","origen::services::arm_debug::mem_ap","",102,[[["memap",3]]]],[11,"ne","","",102,[[["memap",3]]]],[11,"eq","origen::services::jtag","",103,[[["service",3]]]],[11,"ne","","",103,[[["service",3]]]],[11,"eq","origen::services::swd","",105,[[["acknowledgements",4]]]],[11,"eq","origen::testers","",107,[[["supportedtester",4]]]],[11,"ne","","",107,[[["supportedtester",4]]]],[11,"eq","origen::utility::session_store","",128,[[]]],[11,"eq","origen","",137,[[["ast",3]]]],[11,"eq","","",137,[[["node",3]]]],[11,"deref","origen::core::config","",143,[[],["config",3]]],[11,"deref","origen::standards::actions","",145,[[],["hashmap",3]]],[11,"deref","origen","",130,[[],["status",3]]],[11,"deref","","",131,[[],["origenconfig",3]]],[11,"deref","","",132,[[],["logger",3]]],[11,"deref","","",133,[[],["mutex",3]]],[11,"deref","","",134,[[],["mutex",3]]],[11,"deref","","",135,[[],["mutex",3]]],[11,"deref","","",136,[[],["mutex",3]]],[11,"deref","","",137,[[],["testmanager",3]]],[11,"deref","","",138,[[],["flowmanager",3]]],[11,"deref","","",139,[[],["mutex",3]]],[11,"deref","","",140,[[],["mutex",3]]],[11,"deref","","",141,[[],["rwlock",3]]],[11,"deref","","",142,[[],["rwlock",3]]],[11,"fmt","origen::core::application::config","",2,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::application","",1,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::config","",3,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::dut","",4,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::file_handler","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::metadata","",7,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_group","",15,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_header","",16,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins::pin_store","",17,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::pins","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::address_block","",22,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::bit","",23,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::bit_collection","",24,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::field","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::memory_map","",29,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::register","",30,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers::register_file","",34,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::timesets::timeset","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model","",8,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::status","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::tester","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::user","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","origen::error","",59,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::ast","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::stil","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator","",60,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::utility::transaction","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","origen::prog_gen","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","origen::revision_control","",93,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::arm_debug::dp","",100,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::arm_debug::jtag_dp","",101,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::arm_debug::mem_ap","",102,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::arm_debug","",99,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::jtag","",103,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services::swd","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","origen::services","",98,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::igxl::j750","",109,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::igxl::ultraflex","",148,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::simulator","",149,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::smt::v93k::smt7","",150,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers","",107,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers::vector_based::pattern_renderer","",110,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","origen::utility::location","",117,[[["formatter",3]],["result",6]]],[11,"fmt","origen::utility::mailer","",121,[[["formatter",3]],["result",6]]],[11,"fmt","origen::utility::ldap","",124,[[["formatter",3]],["result",6]]],[11,"fmt","origen::utility::session_store","",152,[[["formatter",3]],["result",6]]],[11,"fmt","origen","",137,[[["formatter",3]],["result",6]]],[11,"fmt","origen::core::model::registers","",20,[[["formatter",3]],["result",6]]],[11,"fmt","origen::error","",59,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator::ast","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","origen::generator","",60,[[["formatter",3]],["result",6]]],[11,"fmt","origen::prog_gen","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","origen::testers","",107,[[["formatter",3]],["result",6]]],[11,"hash","origen::core::model::pins::pin","",10,[[]]],[11,"hash","origen::core::tester","",50,[[]]],[11,"hash","","",53,[[]]],[11,"hash","origen::prog_gen","",91,[[]]],[11,"hash","origen::testers","",107,[[]]],[11,"try_from","origen::core::metadata","",7,[[["value",4]],["result",6]]],[11,"from_str","origen::core::model::registers","",20,[[],["result",4]]],[11,"from_str","","",21,[[],["result",4]]],[11,"from_str","origen::core::status","",47,[[],["result",4]]],[11,"from_str","origen::generator::stil","",74,[[],["result",4]]],[11,"from_str","","",75,[[],["result",4]]],[11,"from_str","","",76,[[],["result",4]]],[11,"from_str","","",77,[[],["result",4]]],[11,"from_str","","",78,[[],["result",4]]],[11,"from_str","","",79,[[],["result",4]]],[11,"from_str","origen::prog_gen","",87,[[],["result",4]]],[11,"from_str","origen::testers","",107,[[],["result",4]]],[11,"description","origen::error","",59,[[]]],[11,"initialize","origen::core::config","",143,[[]]],[11,"initialize","origen::standards::actions","",145,[[]]],[11,"initialize","origen","",130,[[]]],[11,"initialize","","",131,[[]]],[11,"initialize","","",132,[[]]],[11,"initialize","","",133,[[]]],[11,"initialize","","",134,[[]]],[11,"initialize","","",135,[[]]],[11,"initialize","","",136,[[]]],[11,"initialize","","",137,[[]]],[11,"initialize","","",138,[[]]],[11,"initialize","","",139,[[]]],[11,"initialize","","",140,[[]]],[11,"initialize","","",141,[[]]],[11,"initialize","","",142,[[]]],[11,"serialize","origen::core::metadata","",7,[[],["result",4]]],[11,"serialize","origen::core::model::pins::pin","",10,[[],["result",4]]],[11,"serialize","origen::core::tester","",49,[[],["result",4]]],[11,"serialize","origen::generator::ast","",62,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","origen::generator::stil","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"serialize","","",79,[[],["result",4]]],[11,"serialize","origen::generator::utility::transaction","",81,[[],["result",4]]],[11,"serialize","","",80,[[],["result",4]]],[11,"serialize","origen::prog_gen","",82,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",83,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",86,[[],["result",4]]],[11,"serialize","","",84,[[],["result",4]]],[11,"serialize","","",85,[[],["result",4]]],[11,"serialize","","",88,[[],["result",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"serialize","origen::services::arm_debug::dp","",100,[[],["result",4]]],[11,"serialize","origen::services::arm_debug::mem_ap","",102,[[],["result",4]]],[11,"serialize","origen::services::arm_debug","",99,[[],["result",4]]],[11,"serialize","origen::services::jtag","",103,[[],["result",4]]],[11,"serialize","origen::services::swd","",105,[[],["result",4]]],[11,"serialize","origen::testers","",107,[[],["result",4]]],[11,"serialize","origen::utility::location","",117,[[],["result",4]]],[11,"serialize","origen::utility::session_store","",129,[[],["result",4]]],[11,"serialize","","",152,[[],["result",4]]],[11,"deserialize","origen::core::application::config","",2,[[],["result",4]]],[11,"deserialize","origen::core::config","",3,[[],["result",4]]],[11,"deserialize","origen::core::model::pins::pin","",10,[[],["result",4]]],[11,"deserialize","origen::utility::location","",117,[[],["result",4]]],[11,"deserialize","origen::utility::session_store","",129,[[],["result",4]]],[11,"deserialize","","",152,[[],["result",4]]]],"p":[[4,"Value"],[3,"Application"],[3,"Config"],[3,"Config"],[3,"Dut"],[3,"File"],[3,"FileHandler"],[4,"Metadata"],[3,"Model"],[4,"Endianness"],[3,"PinAction"],[3,"Pin"],[4,"PinRoles"],[8,"ResolvePinActions"],[3,"Resolver"],[3,"PinGroup"],[3,"PinHeader"],[3,"PinStore"],[3,"PinCollection"],[3,"StateTracker"],[4,"AccessType"],[4,"BitOrder"],[3,"AddressBlock"],[3,"Bit"],[3,"BitCollection"],[3,"Field"],[3,"SummaryField"],[3,"Reset"],[3,"EnumeratedValue"],[3,"MemoryMap"],[3,"Register"],[3,"FieldContainer"],[3,"ResetVal"],[3,"FieldEnum"],[3,"RegisterFile"],[3,"SimpleTimeset"],[3,"Timeset"],[3,"Wavetable"],[3,"WaveGroup"],[3,"Wave"],[3,"Event"],[4,"EventActions"],[3,"Producer"],[4,"OptionType"],[4,"JobType"],[3,"Job"],[3,"Status"],[4,"Operation"],[3,"Tester"],[3,"Stats"],[4,"TesterSource"],[8,"Interceptor"],[8,"TesterID"],[8,"TesterAPI"],[8,"TesterAPIClone"],[3,"Data"],[4,"Roles"],[3,"Users"],[3,"User"],[3,"Error"],[3,"TestManager"],[3,"Meta"],[3,"Node"],[4,"Attrs"],[3,"AST"],[4,"Return"],[8,"Processor"],[3,"FlattenText"],[3,"CycleCombiner"],[3,"PinActionCombiner"],[3,"TargetTester"],[3,"ToString"],[3,"UpcaseComments"],[3,"STIL"],[4,"SignalType"],[4,"Termination"],[4,"State"],[4,"Base"],[4,"Alignment"],[4,"Selector"],[3,"Transaction"],[4,"Action"],[3,"Bin"],[3,"Test"],[4,"BinType"],[4,"FlowCondition"],[4,"GroupType"],[4,"ParamType"],[4,"ParamValue"],[4,"PatternGroupType"],[3,"FlowManager"],[3,"FlowID"],[3,"Credentials"],[3,"Status"],[3,"Designsync"],[3,"Git"],[8,"RevisionControlAPI"],[3,"RevisionControl"],[4,"Service"],[3,"ArmDebug"],[3,"DP"],[3,"JtagDP"],[3,"MemAP"],[3,"Service"],[3,"Service"],[4,"Acknowledgements"],[3,"Services"],[4,"SupportedTester"],[8,"ControllerAPI"],[3,"J750"],[3,"Renderer"],[8,"RendererAPI"],[8,"VectorBased"],[8,"BigUintHelpers"],[3,"ASCIIDiffer"],[8,"Differ"],[4,"FilePermissions"],[3,"Location"],[3,"Logger"],[8,"NumHelpers"],[3,"Maillist"],[3,"Mailer"],[3,"GlobalContext"],[3,"EmailContent"],[4,"SupportedAuths"],[3,"LDAPs"],[3,"LDAP"],[3,"Sessions"],[3,"SessionStore"],[4,"Storeable"],[3,"STATUS"],[3,"ORIGEN_CONFIG"],[3,"LOGGER"],[3,"DUT"],[3,"TESTER"],[3,"PRODUCER"],[3,"SERVICES"],[3,"TEST"],[3,"FLOW"],[3,"SESSIONS"],[3,"LDAPS"],[3,"USERS"],[3,"MAILER"],[3,"CONFIG"],[3,"RegisterFieldIterator"],[3,"STANDARD_ACTIONS"],[3,"DummyRenderer"],[3,"DummyRendererWithInterceptors"],[3,"UltraFlex"],[3,"Renderer"],[3,"SMT7"],[3,"Inner"],[3,"SessionData"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);